Terminals unused in grammar

   TO
   DFS
   BFS


Grammar

    0 $accept: init $end

    1 init: program

    2 program: %empty
    3        | program function

    4 function: type id OPEN_P opt_params CLOSE_P OPEN_BRACE statments CLOSE_BRACE
    5         | error

    6 opt_params: %empty
    7           | params

    8 params: declaration
    9       | params SEPARATOR declaration

   10 statments: %empty
   11          | statments statment

   12 statment: statment_prefix statment_end
   13         | statment_prefix dangling_if
   14         | statment_end
   15         | dangling_if
   16         | error

   17 statment_no_dangle: statment_prefix statment_end
   18                   | statment_end

   19 dangling_if: IF OPEN_P expr_assign CLOSE_P statment

   20 statment_prefix: IF OPEN_P expr_assign CLOSE_P statment_no_dangle ELSE
   21                | WHILE OPEN_P expr_assign CLOSE_P
   22                | FOR OPEN_P declaration_or_assign END expr_assign END expr_assign CLOSE_P
   23                | FOR OPEN_P declaration IT CLOSE_P

   24 statment_end: OPEN_BRACE statments CLOSE_BRACE
   25             | READ id_or_access END
   26             | WRITE expr_assign END
   27             | declaration_or_assign END
   28             | expr_assign END
   29             | RETURN expr_assign END

   30 expr_assign: id_or_access ASSIGN expr_relational
   31            | expr_relational

   32 expr_relational: expr_relational compare_op expr_and
   33                | expr_and

   34 expr_and: expr_and and expr_or
   35         | expr_or

   36 expr_or: expr_or or expr_add
   37        | expr_add

   38 expr_add: expr_add add expr_sub
   39         | expr_sub

   40 expr_sub: expr_sub sub expr_mul
   41         | expr_mul

   42 expr_mul: expr_mul mul expr_div
   43         | expr_div

   44 expr_div: expr_div div expr_unary
   45         | expr_unary

   46 expr_unary: unary factor
   47           | factor

   48 factor: OPEN_P expr_assign CLOSE_P
   49       | value

   50 unary: NOT
   51      | add
   52      | sub

   53 and: AND

   54 or: OR

   55 add: ADD

   56 sub: SUB

   57 mul: MUL

   58 div: DIV

   59 compare_op: LE
   60           | GE
   61           | LESS
   62           | GREATER
   63           | EQ
   64           | NE

   65 declaration_or_assign: declaration
   66                      | declaration ASSIGN expr_assign

   67 declaration: type id

   68 value: id_or_access
   69      | number
   70      | boolean_const

   71 id_or_access: id
   72             | id OPEN_BRACKET number_int CLOSE_BRACKET

   73 id: ID

   74 type: INT
   75     | BOOLEAN
   76     | FLOAT
   77     | GRAPH
   78     | VOID

   79 number: number_int
   80       | number_float

   81 number_int: C_INT

   82 number_float: C_FLOAT

   83 boolean_const: TRUE
   84              | FALSE


Terminals, with rules where they appear

$end (0) 0
error (256) 5 16
IF (258) 19 20
ELSE (259) 20
FOR (260) 22 23
WHILE (261) 21
BOOLEAN (262) 75
INT (263) 74
FLOAT (264) 76
GRAPH (265) 77
VOID (266) 78
TO (267)
TRUE (268) 83
FALSE (269) 84
ID (270) 73
C_FLOAT (271) 82
C_INT (272) 81
READ (273) 25
WRITE (274) 26
DFS (275)
BFS (276)
RETURN (277) 29
AND (278) 53
OR (279) 54
LE (280) 59
GE (281) 60
LESS (282) 61
GREATER (283) 62
EQ (284) 63
NE (285) 64
NOT (286) 50
MUL (287) 57
DIV (288) 58
ADD (289) 55
SUB (290) 56
ASSIGN (291) 30 66
END (292) 22 25 26 27 28 29
OPEN_BRACE (293) 4 24
CLOSE_BRACE (294) 4 24
IT (295) 23
SEPARATOR (296) 9
OPEN_P (297) 4 19 20 21 22 23 48
CLOSE_P (298) 4 19 20 21 22 23 48
OPEN_BRACKET (299) 72
CLOSE_BRACKET (300) 72


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
init (47)
    on left: 1, on right: 0
program (48)
    on left: 2 3, on right: 1 3
function (49)
    on left: 4 5, on right: 3
opt_params (50)
    on left: 6 7, on right: 4
params (51)
    on left: 8 9, on right: 7 9
statments (52)
    on left: 10 11, on right: 4 11 24
statment (53)
    on left: 12 13 14 15 16, on right: 11 19
statment_no_dangle (54)
    on left: 17 18, on right: 20
dangling_if (55)
    on left: 19, on right: 13 15
statment_prefix (56)
    on left: 20 21 22 23, on right: 12 13 17
statment_end (57)
    on left: 24 25 26 27 28 29, on right: 12 14 17 18
expr_assign (58)
    on left: 30 31, on right: 19 20 21 22 26 28 29 48 66
expr_relational (59)
    on left: 32 33, on right: 30 31 32
expr_and (60)
    on left: 34 35, on right: 32 33 34
expr_or (61)
    on left: 36 37, on right: 34 35 36
expr_add (62)
    on left: 38 39, on right: 36 37 38
expr_sub (63)
    on left: 40 41, on right: 38 39 40
expr_mul (64)
    on left: 42 43, on right: 40 41 42
expr_div (65)
    on left: 44 45, on right: 42 43 44
expr_unary (66)
    on left: 46 47, on right: 44 45
factor (67)
    on left: 48 49, on right: 46 47
unary (68)
    on left: 50 51 52, on right: 46
and (69)
    on left: 53, on right: 34
or (70)
    on left: 54, on right: 36
add (71)
    on left: 55, on right: 38 51
sub (72)
    on left: 56, on right: 40 52
mul (73)
    on left: 57, on right: 42
div (74)
    on left: 58, on right: 44
compare_op (75)
    on left: 59 60 61 62 63 64, on right: 32
declaration_or_assign (76)
    on left: 65 66, on right: 22 27
declaration (77)
    on left: 67, on right: 8 9 23 65 66
value (78)
    on left: 68 69 70, on right: 49
id_or_access (79)
    on left: 71 72, on right: 25 30 68
id (80)
    on left: 73, on right: 4 67 71 72
type (81)
    on left: 74 75 76 77 78, on right: 4 67
number (82)
    on left: 79 80, on right: 69
number_int (83)
    on left: 81, on right: 72 79
number_float (84)
    on left: 82, on right: 80
boolean_const (85)
    on left: 83 84, on right: 70


State 0

    0 $accept: . init $end

    $default  reduce using rule 2 (program)

    init     go to state 1
    program  go to state 2


State 1

    0 $accept: init . $end

    $end  shift, and go to state 3


State 2

    1 init: program .
    3 program: program . function

    error    shift, and go to state 4
    BOOLEAN  shift, and go to state 5
    INT      shift, and go to state 6
    FLOAT    shift, and go to state 7
    GRAPH    shift, and go to state 8
    VOID     shift, and go to state 9

    $end  reduce using rule 1 (init)

    function  go to state 10
    type      go to state 11


State 3

    0 $accept: init $end .

    $default  accept


State 4

    5 function: error .

    $default  reduce using rule 5 (function)


State 5

   75 type: BOOLEAN .

    $default  reduce using rule 75 (type)


State 6

   74 type: INT .

    $default  reduce using rule 74 (type)


State 7

   76 type: FLOAT .

    $default  reduce using rule 76 (type)


State 8

   77 type: GRAPH .

    $default  reduce using rule 77 (type)


State 9

   78 type: VOID .

    $default  reduce using rule 78 (type)


State 10

    3 program: program function .

    $default  reduce using rule 3 (program)


State 11

    4 function: type . id OPEN_P opt_params CLOSE_P OPEN_BRACE statments CLOSE_BRACE

    ID  shift, and go to state 12

    id  go to state 13


State 12

   73 id: ID .

    $default  reduce using rule 73 (id)


State 13

    4 function: type id . OPEN_P opt_params CLOSE_P OPEN_BRACE statments CLOSE_BRACE

    OPEN_P  shift, and go to state 14


State 14

    4 function: type id OPEN_P . opt_params CLOSE_P OPEN_BRACE statments CLOSE_BRACE

    BOOLEAN  shift, and go to state 5
    INT      shift, and go to state 6
    FLOAT    shift, and go to state 7
    GRAPH    shift, and go to state 8
    VOID     shift, and go to state 9

    $default  reduce using rule 6 (opt_params)

    opt_params   go to state 15
    params       go to state 16
    declaration  go to state 17
    type         go to state 18


State 15

    4 function: type id OPEN_P opt_params . CLOSE_P OPEN_BRACE statments CLOSE_BRACE

    CLOSE_P  shift, and go to state 19


State 16

    7 opt_params: params .
    9 params: params . SEPARATOR declaration

    SEPARATOR  shift, and go to state 20

    $default  reduce using rule 7 (opt_params)


State 17

    8 params: declaration .

    $default  reduce using rule 8 (params)


State 18

   67 declaration: type . id

    ID  shift, and go to state 12

    id  go to state 21


State 19

    4 function: type id OPEN_P opt_params CLOSE_P . OPEN_BRACE statments CLOSE_BRACE

    OPEN_BRACE  shift, and go to state 22


State 20

    9 params: params SEPARATOR . declaration

    BOOLEAN  shift, and go to state 5
    INT      shift, and go to state 6
    FLOAT    shift, and go to state 7
    GRAPH    shift, and go to state 8
    VOID     shift, and go to state 9

    declaration  go to state 23
    type         go to state 18


State 21

   67 declaration: type id .

    $default  reduce using rule 67 (declaration)


State 22

    4 function: type id OPEN_P opt_params CLOSE_P OPEN_BRACE . statments CLOSE_BRACE

    $default  reduce using rule 10 (statments)

    statments  go to state 24


State 23

    9 params: params SEPARATOR declaration .

    $default  reduce using rule 9 (params)


State 24

    4 function: type id OPEN_P opt_params CLOSE_P OPEN_BRACE statments . CLOSE_BRACE
   11 statments: statments . statment

    error        shift, and go to state 25
    IF           shift, and go to state 26
    FOR          shift, and go to state 27
    WHILE        shift, and go to state 28
    BOOLEAN      shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    GRAPH        shift, and go to state 8
    VOID         shift, and go to state 9
    TRUE         shift, and go to state 29
    FALSE        shift, and go to state 30
    ID           shift, and go to state 12
    C_FLOAT      shift, and go to state 31
    C_INT        shift, and go to state 32
    READ         shift, and go to state 33
    WRITE        shift, and go to state 34
    RETURN       shift, and go to state 35
    NOT          shift, and go to state 36
    ADD          shift, and go to state 37
    SUB          shift, and go to state 38
    OPEN_BRACE   shift, and go to state 39
    CLOSE_BRACE  shift, and go to state 40
    OPEN_P       shift, and go to state 41

    statment               go to state 42
    dangling_if            go to state 43
    statment_prefix        go to state 44
    statment_end           go to state 45
    expr_assign            go to state 46
    expr_relational        go to state 47
    expr_and               go to state 48
    expr_or                go to state 49
    expr_add               go to state 50
    expr_sub               go to state 51
    expr_mul               go to state 52
    expr_div               go to state 53
    expr_unary             go to state 54
    factor                 go to state 55
    unary                  go to state 56
    add                    go to state 57
    sub                    go to state 58
    declaration_or_assign  go to state 59
    declaration            go to state 60
    value                  go to state 61
    id_or_access           go to state 62
    id                     go to state 63
    type                   go to state 18
    number                 go to state 64
    number_int             go to state 65
    number_float           go to state 66
    boolean_const          go to state 67


State 25

   16 statment: error .

    $default  reduce using rule 16 (statment)


State 26

   19 dangling_if: IF . OPEN_P expr_assign CLOSE_P statment
   20 statment_prefix: IF . OPEN_P expr_assign CLOSE_P statment_no_dangle ELSE

    OPEN_P  shift, and go to state 68


State 27

   22 statment_prefix: FOR . OPEN_P declaration_or_assign END expr_assign END expr_assign CLOSE_P
   23                | FOR . OPEN_P declaration IT CLOSE_P

    OPEN_P  shift, and go to state 69


State 28

   21 statment_prefix: WHILE . OPEN_P expr_assign CLOSE_P

    OPEN_P  shift, and go to state 70


State 29

   83 boolean_const: TRUE .

    $default  reduce using rule 83 (boolean_const)


State 30

   84 boolean_const: FALSE .

    $default  reduce using rule 84 (boolean_const)


State 31

   82 number_float: C_FLOAT .

    $default  reduce using rule 82 (number_float)


State 32

   81 number_int: C_INT .

    $default  reduce using rule 81 (number_int)


State 33

   25 statment_end: READ . id_or_access END

    ID  shift, and go to state 12

    id_or_access  go to state 71
    id            go to state 63


State 34

   26 statment_end: WRITE . expr_assign END

    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    ID       shift, and go to state 12
    C_FLOAT  shift, and go to state 31
    C_INT    shift, and go to state 32
    NOT      shift, and go to state 36
    ADD      shift, and go to state 37
    SUB      shift, and go to state 38
    OPEN_P   shift, and go to state 41

    expr_assign      go to state 72
    expr_relational  go to state 47
    expr_and         go to state 48
    expr_or          go to state 49
    expr_add         go to state 50
    expr_sub         go to state 51
    expr_mul         go to state 52
    expr_div         go to state 53
    expr_unary       go to state 54
    factor           go to state 55
    unary            go to state 56
    add              go to state 57
    sub              go to state 58
    value            go to state 61
    id_or_access     go to state 62
    id               go to state 63
    number           go to state 64
    number_int       go to state 65
    number_float     go to state 66
    boolean_const    go to state 67


State 35

   29 statment_end: RETURN . expr_assign END

    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    ID       shift, and go to state 12
    C_FLOAT  shift, and go to state 31
    C_INT    shift, and go to state 32
    NOT      shift, and go to state 36
    ADD      shift, and go to state 37
    SUB      shift, and go to state 38
    OPEN_P   shift, and go to state 41

    expr_assign      go to state 73
    expr_relational  go to state 47
    expr_and         go to state 48
    expr_or          go to state 49
    expr_add         go to state 50
    expr_sub         go to state 51
    expr_mul         go to state 52
    expr_div         go to state 53
    expr_unary       go to state 54
    factor           go to state 55
    unary            go to state 56
    add              go to state 57
    sub              go to state 58
    value            go to state 61
    id_or_access     go to state 62
    id               go to state 63
    number           go to state 64
    number_int       go to state 65
    number_float     go to state 66
    boolean_const    go to state 67


State 36

   50 unary: NOT .

    $default  reduce using rule 50 (unary)


State 37

   55 add: ADD .

    $default  reduce using rule 55 (add)


State 38

   56 sub: SUB .

    $default  reduce using rule 56 (sub)


State 39

   24 statment_end: OPEN_BRACE . statments CLOSE_BRACE

    $default  reduce using rule 10 (statments)

    statments  go to state 74


State 40

    4 function: type id OPEN_P opt_params CLOSE_P OPEN_BRACE statments CLOSE_BRACE .

    $default  reduce using rule 4 (function)


State 41

   48 factor: OPEN_P . expr_assign CLOSE_P

    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    ID       shift, and go to state 12
    C_FLOAT  shift, and go to state 31
    C_INT    shift, and go to state 32
    NOT      shift, and go to state 36
    ADD      shift, and go to state 37
    SUB      shift, and go to state 38
    OPEN_P   shift, and go to state 41

    expr_assign      go to state 75
    expr_relational  go to state 47
    expr_and         go to state 48
    expr_or          go to state 49
    expr_add         go to state 50
    expr_sub         go to state 51
    expr_mul         go to state 52
    expr_div         go to state 53
    expr_unary       go to state 54
    factor           go to state 55
    unary            go to state 56
    add              go to state 57
    sub              go to state 58
    value            go to state 61
    id_or_access     go to state 62
    id               go to state 63
    number           go to state 64
    number_int       go to state 65
    number_float     go to state 66
    boolean_const    go to state 67


State 42

   11 statments: statments statment .

    $default  reduce using rule 11 (statments)


State 43

   15 statment: dangling_if .

    $default  reduce using rule 15 (statment)


State 44

   12 statment: statment_prefix . statment_end
   13         | statment_prefix . dangling_if

    IF          shift, and go to state 76
    BOOLEAN     shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    GRAPH       shift, and go to state 8
    VOID        shift, and go to state 9
    TRUE        shift, and go to state 29
    FALSE       shift, and go to state 30
    ID          shift, and go to state 12
    C_FLOAT     shift, and go to state 31
    C_INT       shift, and go to state 32
    READ        shift, and go to state 33
    WRITE       shift, and go to state 34
    RETURN      shift, and go to state 35
    NOT         shift, and go to state 36
    ADD         shift, and go to state 37
    SUB         shift, and go to state 38
    OPEN_BRACE  shift, and go to state 39
    OPEN_P      shift, and go to state 41

    dangling_if            go to state 77
    statment_end           go to state 78
    expr_assign            go to state 46
    expr_relational        go to state 47
    expr_and               go to state 48
    expr_or                go to state 49
    expr_add               go to state 50
    expr_sub               go to state 51
    expr_mul               go to state 52
    expr_div               go to state 53
    expr_unary             go to state 54
    factor                 go to state 55
    unary                  go to state 56
    add                    go to state 57
    sub                    go to state 58
    declaration_or_assign  go to state 59
    declaration            go to state 60
    value                  go to state 61
    id_or_access           go to state 62
    id                     go to state 63
    type                   go to state 18
    number                 go to state 64
    number_int             go to state 65
    number_float           go to state 66
    boolean_const          go to state 67


State 45

   14 statment: statment_end .

    $default  reduce using rule 14 (statment)


State 46

   28 statment_end: expr_assign . END

    END  shift, and go to state 79


State 47

   31 expr_assign: expr_relational .
   32 expr_relational: expr_relational . compare_op expr_and

    LE       shift, and go to state 80
    GE       shift, and go to state 81
    LESS     shift, and go to state 82
    GREATER  shift, and go to state 83
    EQ       shift, and go to state 84
    NE       shift, and go to state 85

    $default  reduce using rule 31 (expr_assign)

    compare_op  go to state 86


State 48

   33 expr_relational: expr_and .
   34 expr_and: expr_and . and expr_or

    AND  shift, and go to state 87

    $default  reduce using rule 33 (expr_relational)

    and  go to state 88


State 49

   35 expr_and: expr_or .
   36 expr_or: expr_or . or expr_add

    OR  shift, and go to state 89

    $default  reduce using rule 35 (expr_and)

    or  go to state 90


State 50

   37 expr_or: expr_add .
   38 expr_add: expr_add . add expr_sub

    ADD  shift, and go to state 37

    $default  reduce using rule 37 (expr_or)

    add  go to state 91


State 51

   39 expr_add: expr_sub .
   40 expr_sub: expr_sub . sub expr_mul

    SUB  shift, and go to state 38

    $default  reduce using rule 39 (expr_add)

    sub  go to state 92


State 52

   41 expr_sub: expr_mul .
   42 expr_mul: expr_mul . mul expr_div

    MUL  shift, and go to state 93

    $default  reduce using rule 41 (expr_sub)

    mul  go to state 94


State 53

   43 expr_mul: expr_div .
   44 expr_div: expr_div . div expr_unary

    DIV  shift, and go to state 95

    $default  reduce using rule 43 (expr_mul)

    div  go to state 96


State 54

   45 expr_div: expr_unary .

    $default  reduce using rule 45 (expr_div)


State 55

   47 expr_unary: factor .

    $default  reduce using rule 47 (expr_unary)


State 56

   46 expr_unary: unary . factor

    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    ID       shift, and go to state 12
    C_FLOAT  shift, and go to state 31
    C_INT    shift, and go to state 32
    OPEN_P   shift, and go to state 41

    factor         go to state 97
    value          go to state 61
    id_or_access   go to state 98
    id             go to state 63
    number         go to state 64
    number_int     go to state 65
    number_float   go to state 66
    boolean_const  go to state 67


State 57

   51 unary: add .

    $default  reduce using rule 51 (unary)


State 58

   52 unary: sub .

    $default  reduce using rule 52 (unary)


State 59

   27 statment_end: declaration_or_assign . END

    END  shift, and go to state 99


State 60

   65 declaration_or_assign: declaration .
   66                      | declaration . ASSIGN expr_assign

    ASSIGN  shift, and go to state 100

    $default  reduce using rule 65 (declaration_or_assign)


State 61

   49 factor: value .

    $default  reduce using rule 49 (factor)


State 62

   30 expr_assign: id_or_access . ASSIGN expr_relational
   68 value: id_or_access .

    ASSIGN  shift, and go to state 101

    $default  reduce using rule 68 (value)


State 63

   71 id_or_access: id .
   72             | id . OPEN_BRACKET number_int CLOSE_BRACKET

    OPEN_BRACKET  shift, and go to state 102

    $default  reduce using rule 71 (id_or_access)


State 64

   69 value: number .

    $default  reduce using rule 69 (value)


State 65

   79 number: number_int .

    $default  reduce using rule 79 (number)


State 66

   80 number: number_float .

    $default  reduce using rule 80 (number)


State 67

   70 value: boolean_const .

    $default  reduce using rule 70 (value)


State 68

   19 dangling_if: IF OPEN_P . expr_assign CLOSE_P statment
   20 statment_prefix: IF OPEN_P . expr_assign CLOSE_P statment_no_dangle ELSE

    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    ID       shift, and go to state 12
    C_FLOAT  shift, and go to state 31
    C_INT    shift, and go to state 32
    NOT      shift, and go to state 36
    ADD      shift, and go to state 37
    SUB      shift, and go to state 38
    OPEN_P   shift, and go to state 41

    expr_assign      go to state 103
    expr_relational  go to state 47
    expr_and         go to state 48
    expr_or          go to state 49
    expr_add         go to state 50
    expr_sub         go to state 51
    expr_mul         go to state 52
    expr_div         go to state 53
    expr_unary       go to state 54
    factor           go to state 55
    unary            go to state 56
    add              go to state 57
    sub              go to state 58
    value            go to state 61
    id_or_access     go to state 62
    id               go to state 63
    number           go to state 64
    number_int       go to state 65
    number_float     go to state 66
    boolean_const    go to state 67


State 69

   22 statment_prefix: FOR OPEN_P . declaration_or_assign END expr_assign END expr_assign CLOSE_P
   23                | FOR OPEN_P . declaration IT CLOSE_P

    BOOLEAN  shift, and go to state 5
    INT      shift, and go to state 6
    FLOAT    shift, and go to state 7
    GRAPH    shift, and go to state 8
    VOID     shift, and go to state 9

    declaration_or_assign  go to state 104
    declaration            go to state 105
    type                   go to state 18


State 70

   21 statment_prefix: WHILE OPEN_P . expr_assign CLOSE_P

    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    ID       shift, and go to state 12
    C_FLOAT  shift, and go to state 31
    C_INT    shift, and go to state 32
    NOT      shift, and go to state 36
    ADD      shift, and go to state 37
    SUB      shift, and go to state 38
    OPEN_P   shift, and go to state 41

    expr_assign      go to state 106
    expr_relational  go to state 47
    expr_and         go to state 48
    expr_or          go to state 49
    expr_add         go to state 50
    expr_sub         go to state 51
    expr_mul         go to state 52
    expr_div         go to state 53
    expr_unary       go to state 54
    factor           go to state 55
    unary            go to state 56
    add              go to state 57
    sub              go to state 58
    value            go to state 61
    id_or_access     go to state 62
    id               go to state 63
    number           go to state 64
    number_int       go to state 65
    number_float     go to state 66
    boolean_const    go to state 67


State 71

   25 statment_end: READ id_or_access . END

    END  shift, and go to state 107


State 72

   26 statment_end: WRITE expr_assign . END

    END  shift, and go to state 108


State 73

   29 statment_end: RETURN expr_assign . END

    END  shift, and go to state 109


State 74

   11 statments: statments . statment
   24 statment_end: OPEN_BRACE statments . CLOSE_BRACE

    error        shift, and go to state 25
    IF           shift, and go to state 26
    FOR          shift, and go to state 27
    WHILE        shift, and go to state 28
    BOOLEAN      shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    GRAPH        shift, and go to state 8
    VOID         shift, and go to state 9
    TRUE         shift, and go to state 29
    FALSE        shift, and go to state 30
    ID           shift, and go to state 12
    C_FLOAT      shift, and go to state 31
    C_INT        shift, and go to state 32
    READ         shift, and go to state 33
    WRITE        shift, and go to state 34
    RETURN       shift, and go to state 35
    NOT          shift, and go to state 36
    ADD          shift, and go to state 37
    SUB          shift, and go to state 38
    OPEN_BRACE   shift, and go to state 39
    CLOSE_BRACE  shift, and go to state 110
    OPEN_P       shift, and go to state 41

    statment               go to state 42
    dangling_if            go to state 43
    statment_prefix        go to state 44
    statment_end           go to state 45
    expr_assign            go to state 46
    expr_relational        go to state 47
    expr_and               go to state 48
    expr_or                go to state 49
    expr_add               go to state 50
    expr_sub               go to state 51
    expr_mul               go to state 52
    expr_div               go to state 53
    expr_unary             go to state 54
    factor                 go to state 55
    unary                  go to state 56
    add                    go to state 57
    sub                    go to state 58
    declaration_or_assign  go to state 59
    declaration            go to state 60
    value                  go to state 61
    id_or_access           go to state 62
    id                     go to state 63
    type                   go to state 18
    number                 go to state 64
    number_int             go to state 65
    number_float           go to state 66
    boolean_const          go to state 67


State 75

   48 factor: OPEN_P expr_assign . CLOSE_P

    CLOSE_P  shift, and go to state 111


State 76

   19 dangling_if: IF . OPEN_P expr_assign CLOSE_P statment

    OPEN_P  shift, and go to state 112


State 77

   13 statment: statment_prefix dangling_if .

    $default  reduce using rule 13 (statment)


State 78

   12 statment: statment_prefix statment_end .

    $default  reduce using rule 12 (statment)


State 79

   28 statment_end: expr_assign END .

    $default  reduce using rule 28 (statment_end)


State 80

   59 compare_op: LE .

    $default  reduce using rule 59 (compare_op)


State 81

   60 compare_op: GE .

    $default  reduce using rule 60 (compare_op)


State 82

   61 compare_op: LESS .

    $default  reduce using rule 61 (compare_op)


State 83

   62 compare_op: GREATER .

    $default  reduce using rule 62 (compare_op)


State 84

   63 compare_op: EQ .

    $default  reduce using rule 63 (compare_op)


State 85

   64 compare_op: NE .

    $default  reduce using rule 64 (compare_op)


State 86

   32 expr_relational: expr_relational compare_op . expr_and

    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    ID       shift, and go to state 12
    C_FLOAT  shift, and go to state 31
    C_INT    shift, and go to state 32
    NOT      shift, and go to state 36
    ADD      shift, and go to state 37
    SUB      shift, and go to state 38
    OPEN_P   shift, and go to state 41

    expr_and       go to state 113
    expr_or        go to state 49
    expr_add       go to state 50
    expr_sub       go to state 51
    expr_mul       go to state 52
    expr_div       go to state 53
    expr_unary     go to state 54
    factor         go to state 55
    unary          go to state 56
    add            go to state 57
    sub            go to state 58
    value          go to state 61
    id_or_access   go to state 98
    id             go to state 63
    number         go to state 64
    number_int     go to state 65
    number_float   go to state 66
    boolean_const  go to state 67


State 87

   53 and: AND .

    $default  reduce using rule 53 (and)


State 88

   34 expr_and: expr_and and . expr_or

    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    ID       shift, and go to state 12
    C_FLOAT  shift, and go to state 31
    C_INT    shift, and go to state 32
    NOT      shift, and go to state 36
    ADD      shift, and go to state 37
    SUB      shift, and go to state 38
    OPEN_P   shift, and go to state 41

    expr_or        go to state 114
    expr_add       go to state 50
    expr_sub       go to state 51
    expr_mul       go to state 52
    expr_div       go to state 53
    expr_unary     go to state 54
    factor         go to state 55
    unary          go to state 56
    add            go to state 57
    sub            go to state 58
    value          go to state 61
    id_or_access   go to state 98
    id             go to state 63
    number         go to state 64
    number_int     go to state 65
    number_float   go to state 66
    boolean_const  go to state 67


State 89

   54 or: OR .

    $default  reduce using rule 54 (or)


State 90

   36 expr_or: expr_or or . expr_add

    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    ID       shift, and go to state 12
    C_FLOAT  shift, and go to state 31
    C_INT    shift, and go to state 32
    NOT      shift, and go to state 36
    ADD      shift, and go to state 37
    SUB      shift, and go to state 38
    OPEN_P   shift, and go to state 41

    expr_add       go to state 115
    expr_sub       go to state 51
    expr_mul       go to state 52
    expr_div       go to state 53
    expr_unary     go to state 54
    factor         go to state 55
    unary          go to state 56
    add            go to state 57
    sub            go to state 58
    value          go to state 61
    id_or_access   go to state 98
    id             go to state 63
    number         go to state 64
    number_int     go to state 65
    number_float   go to state 66
    boolean_const  go to state 67


State 91

   38 expr_add: expr_add add . expr_sub

    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    ID       shift, and go to state 12
    C_FLOAT  shift, and go to state 31
    C_INT    shift, and go to state 32
    NOT      shift, and go to state 36
    ADD      shift, and go to state 37
    SUB      shift, and go to state 38
    OPEN_P   shift, and go to state 41

    expr_sub       go to state 116
    expr_mul       go to state 52
    expr_div       go to state 53
    expr_unary     go to state 54
    factor         go to state 55
    unary          go to state 56
    add            go to state 57
    sub            go to state 58
    value          go to state 61
    id_or_access   go to state 98
    id             go to state 63
    number         go to state 64
    number_int     go to state 65
    number_float   go to state 66
    boolean_const  go to state 67


State 92

   40 expr_sub: expr_sub sub . expr_mul

    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    ID       shift, and go to state 12
    C_FLOAT  shift, and go to state 31
    C_INT    shift, and go to state 32
    NOT      shift, and go to state 36
    ADD      shift, and go to state 37
    SUB      shift, and go to state 38
    OPEN_P   shift, and go to state 41

    expr_mul       go to state 117
    expr_div       go to state 53
    expr_unary     go to state 54
    factor         go to state 55
    unary          go to state 56
    add            go to state 57
    sub            go to state 58
    value          go to state 61
    id_or_access   go to state 98
    id             go to state 63
    number         go to state 64
    number_int     go to state 65
    number_float   go to state 66
    boolean_const  go to state 67


State 93

   57 mul: MUL .

    $default  reduce using rule 57 (mul)


State 94

   42 expr_mul: expr_mul mul . expr_div

    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    ID       shift, and go to state 12
    C_FLOAT  shift, and go to state 31
    C_INT    shift, and go to state 32
    NOT      shift, and go to state 36
    ADD      shift, and go to state 37
    SUB      shift, and go to state 38
    OPEN_P   shift, and go to state 41

    expr_div       go to state 118
    expr_unary     go to state 54
    factor         go to state 55
    unary          go to state 56
    add            go to state 57
    sub            go to state 58
    value          go to state 61
    id_or_access   go to state 98
    id             go to state 63
    number         go to state 64
    number_int     go to state 65
    number_float   go to state 66
    boolean_const  go to state 67


State 95

   58 div: DIV .

    $default  reduce using rule 58 (div)


State 96

   44 expr_div: expr_div div . expr_unary

    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    ID       shift, and go to state 12
    C_FLOAT  shift, and go to state 31
    C_INT    shift, and go to state 32
    NOT      shift, and go to state 36
    ADD      shift, and go to state 37
    SUB      shift, and go to state 38
    OPEN_P   shift, and go to state 41

    expr_unary     go to state 119
    factor         go to state 55
    unary          go to state 56
    add            go to state 57
    sub            go to state 58
    value          go to state 61
    id_or_access   go to state 98
    id             go to state 63
    number         go to state 64
    number_int     go to state 65
    number_float   go to state 66
    boolean_const  go to state 67


State 97

   46 expr_unary: unary factor .

    $default  reduce using rule 46 (expr_unary)


State 98

   68 value: id_or_access .

    $default  reduce using rule 68 (value)


State 99

   27 statment_end: declaration_or_assign END .

    $default  reduce using rule 27 (statment_end)


State 100

   66 declaration_or_assign: declaration ASSIGN . expr_assign

    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    ID       shift, and go to state 12
    C_FLOAT  shift, and go to state 31
    C_INT    shift, and go to state 32
    NOT      shift, and go to state 36
    ADD      shift, and go to state 37
    SUB      shift, and go to state 38
    OPEN_P   shift, and go to state 41

    expr_assign      go to state 120
    expr_relational  go to state 47
    expr_and         go to state 48
    expr_or          go to state 49
    expr_add         go to state 50
    expr_sub         go to state 51
    expr_mul         go to state 52
    expr_div         go to state 53
    expr_unary       go to state 54
    factor           go to state 55
    unary            go to state 56
    add              go to state 57
    sub              go to state 58
    value            go to state 61
    id_or_access     go to state 62
    id               go to state 63
    number           go to state 64
    number_int       go to state 65
    number_float     go to state 66
    boolean_const    go to state 67


State 101

   30 expr_assign: id_or_access ASSIGN . expr_relational

    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    ID       shift, and go to state 12
    C_FLOAT  shift, and go to state 31
    C_INT    shift, and go to state 32
    NOT      shift, and go to state 36
    ADD      shift, and go to state 37
    SUB      shift, and go to state 38
    OPEN_P   shift, and go to state 41

    expr_relational  go to state 121
    expr_and         go to state 48
    expr_or          go to state 49
    expr_add         go to state 50
    expr_sub         go to state 51
    expr_mul         go to state 52
    expr_div         go to state 53
    expr_unary       go to state 54
    factor           go to state 55
    unary            go to state 56
    add              go to state 57
    sub              go to state 58
    value            go to state 61
    id_or_access     go to state 98
    id               go to state 63
    number           go to state 64
    number_int       go to state 65
    number_float     go to state 66
    boolean_const    go to state 67


State 102

   72 id_or_access: id OPEN_BRACKET . number_int CLOSE_BRACKET

    C_INT  shift, and go to state 32

    number_int  go to state 122


State 103

   19 dangling_if: IF OPEN_P expr_assign . CLOSE_P statment
   20 statment_prefix: IF OPEN_P expr_assign . CLOSE_P statment_no_dangle ELSE

    CLOSE_P  shift, and go to state 123


State 104

   22 statment_prefix: FOR OPEN_P declaration_or_assign . END expr_assign END expr_assign CLOSE_P

    END  shift, and go to state 124


State 105

   23 statment_prefix: FOR OPEN_P declaration . IT CLOSE_P
   65 declaration_or_assign: declaration .
   66                      | declaration . ASSIGN expr_assign

    ASSIGN  shift, and go to state 100
    IT      shift, and go to state 125

    $default  reduce using rule 65 (declaration_or_assign)


State 106

   21 statment_prefix: WHILE OPEN_P expr_assign . CLOSE_P

    CLOSE_P  shift, and go to state 126


State 107

   25 statment_end: READ id_or_access END .

    $default  reduce using rule 25 (statment_end)


State 108

   26 statment_end: WRITE expr_assign END .

    $default  reduce using rule 26 (statment_end)


State 109

   29 statment_end: RETURN expr_assign END .

    $default  reduce using rule 29 (statment_end)


State 110

   24 statment_end: OPEN_BRACE statments CLOSE_BRACE .

    $default  reduce using rule 24 (statment_end)


State 111

   48 factor: OPEN_P expr_assign CLOSE_P .

    $default  reduce using rule 48 (factor)


State 112

   19 dangling_if: IF OPEN_P . expr_assign CLOSE_P statment

    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    ID       shift, and go to state 12
    C_FLOAT  shift, and go to state 31
    C_INT    shift, and go to state 32
    NOT      shift, and go to state 36
    ADD      shift, and go to state 37
    SUB      shift, and go to state 38
    OPEN_P   shift, and go to state 41

    expr_assign      go to state 127
    expr_relational  go to state 47
    expr_and         go to state 48
    expr_or          go to state 49
    expr_add         go to state 50
    expr_sub         go to state 51
    expr_mul         go to state 52
    expr_div         go to state 53
    expr_unary       go to state 54
    factor           go to state 55
    unary            go to state 56
    add              go to state 57
    sub              go to state 58
    value            go to state 61
    id_or_access     go to state 62
    id               go to state 63
    number           go to state 64
    number_int       go to state 65
    number_float     go to state 66
    boolean_const    go to state 67


State 113

   32 expr_relational: expr_relational compare_op expr_and .
   34 expr_and: expr_and . and expr_or

    AND  shift, and go to state 87

    $default  reduce using rule 32 (expr_relational)

    and  go to state 88


State 114

   34 expr_and: expr_and and expr_or .
   36 expr_or: expr_or . or expr_add

    OR  shift, and go to state 89

    $default  reduce using rule 34 (expr_and)

    or  go to state 90


State 115

   36 expr_or: expr_or or expr_add .
   38 expr_add: expr_add . add expr_sub

    ADD  shift, and go to state 37

    $default  reduce using rule 36 (expr_or)

    add  go to state 91


State 116

   38 expr_add: expr_add add expr_sub .
   40 expr_sub: expr_sub . sub expr_mul

    SUB  shift, and go to state 38

    $default  reduce using rule 38 (expr_add)

    sub  go to state 92


State 117

   40 expr_sub: expr_sub sub expr_mul .
   42 expr_mul: expr_mul . mul expr_div

    MUL  shift, and go to state 93

    $default  reduce using rule 40 (expr_sub)

    mul  go to state 94


State 118

   42 expr_mul: expr_mul mul expr_div .
   44 expr_div: expr_div . div expr_unary

    DIV  shift, and go to state 95

    $default  reduce using rule 42 (expr_mul)

    div  go to state 96


State 119

   44 expr_div: expr_div div expr_unary .

    $default  reduce using rule 44 (expr_div)


State 120

   66 declaration_or_assign: declaration ASSIGN expr_assign .

    $default  reduce using rule 66 (declaration_or_assign)


State 121

   30 expr_assign: id_or_access ASSIGN expr_relational .
   32 expr_relational: expr_relational . compare_op expr_and

    LE       shift, and go to state 80
    GE       shift, and go to state 81
    LESS     shift, and go to state 82
    GREATER  shift, and go to state 83
    EQ       shift, and go to state 84
    NE       shift, and go to state 85

    $default  reduce using rule 30 (expr_assign)

    compare_op  go to state 86


State 122

   72 id_or_access: id OPEN_BRACKET number_int . CLOSE_BRACKET

    CLOSE_BRACKET  shift, and go to state 128


State 123

   19 dangling_if: IF OPEN_P expr_assign CLOSE_P . statment
   20 statment_prefix: IF OPEN_P expr_assign CLOSE_P . statment_no_dangle ELSE

    error       shift, and go to state 25
    IF          shift, and go to state 26
    FOR         shift, and go to state 27
    WHILE       shift, and go to state 28
    BOOLEAN     shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    GRAPH       shift, and go to state 8
    VOID        shift, and go to state 9
    TRUE        shift, and go to state 29
    FALSE       shift, and go to state 30
    ID          shift, and go to state 12
    C_FLOAT     shift, and go to state 31
    C_INT       shift, and go to state 32
    READ        shift, and go to state 33
    WRITE       shift, and go to state 34
    RETURN      shift, and go to state 35
    NOT         shift, and go to state 36
    ADD         shift, and go to state 37
    SUB         shift, and go to state 38
    OPEN_BRACE  shift, and go to state 39
    OPEN_P      shift, and go to state 41

    statment               go to state 129
    statment_no_dangle     go to state 130
    dangling_if            go to state 43
    statment_prefix        go to state 131
    statment_end           go to state 132
    expr_assign            go to state 46
    expr_relational        go to state 47
    expr_and               go to state 48
    expr_or                go to state 49
    expr_add               go to state 50
    expr_sub               go to state 51
    expr_mul               go to state 52
    expr_div               go to state 53
    expr_unary             go to state 54
    factor                 go to state 55
    unary                  go to state 56
    add                    go to state 57
    sub                    go to state 58
    declaration_or_assign  go to state 59
    declaration            go to state 60
    value                  go to state 61
    id_or_access           go to state 62
    id                     go to state 63
    type                   go to state 18
    number                 go to state 64
    number_int             go to state 65
    number_float           go to state 66
    boolean_const          go to state 67


State 124

   22 statment_prefix: FOR OPEN_P declaration_or_assign END . expr_assign END expr_assign CLOSE_P

    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    ID       shift, and go to state 12
    C_FLOAT  shift, and go to state 31
    C_INT    shift, and go to state 32
    NOT      shift, and go to state 36
    ADD      shift, and go to state 37
    SUB      shift, and go to state 38
    OPEN_P   shift, and go to state 41

    expr_assign      go to state 133
    expr_relational  go to state 47
    expr_and         go to state 48
    expr_or          go to state 49
    expr_add         go to state 50
    expr_sub         go to state 51
    expr_mul         go to state 52
    expr_div         go to state 53
    expr_unary       go to state 54
    factor           go to state 55
    unary            go to state 56
    add              go to state 57
    sub              go to state 58
    value            go to state 61
    id_or_access     go to state 62
    id               go to state 63
    number           go to state 64
    number_int       go to state 65
    number_float     go to state 66
    boolean_const    go to state 67


State 125

   23 statment_prefix: FOR OPEN_P declaration IT . CLOSE_P

    CLOSE_P  shift, and go to state 134


State 126

   21 statment_prefix: WHILE OPEN_P expr_assign CLOSE_P .

    $default  reduce using rule 21 (statment_prefix)


State 127

   19 dangling_if: IF OPEN_P expr_assign . CLOSE_P statment

    CLOSE_P  shift, and go to state 135


State 128

   72 id_or_access: id OPEN_BRACKET number_int CLOSE_BRACKET .

    $default  reduce using rule 72 (id_or_access)


State 129

   19 dangling_if: IF OPEN_P expr_assign CLOSE_P statment .

    $default  reduce using rule 19 (dangling_if)


State 130

   20 statment_prefix: IF OPEN_P expr_assign CLOSE_P statment_no_dangle . ELSE

    ELSE  shift, and go to state 136


State 131

   12 statment: statment_prefix . statment_end
   13         | statment_prefix . dangling_if
   17 statment_no_dangle: statment_prefix . statment_end

    IF          shift, and go to state 76
    BOOLEAN     shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    GRAPH       shift, and go to state 8
    VOID        shift, and go to state 9
    TRUE        shift, and go to state 29
    FALSE       shift, and go to state 30
    ID          shift, and go to state 12
    C_FLOAT     shift, and go to state 31
    C_INT       shift, and go to state 32
    READ        shift, and go to state 33
    WRITE       shift, and go to state 34
    RETURN      shift, and go to state 35
    NOT         shift, and go to state 36
    ADD         shift, and go to state 37
    SUB         shift, and go to state 38
    OPEN_BRACE  shift, and go to state 39
    OPEN_P      shift, and go to state 41

    dangling_if            go to state 77
    statment_end           go to state 137
    expr_assign            go to state 46
    expr_relational        go to state 47
    expr_and               go to state 48
    expr_or                go to state 49
    expr_add               go to state 50
    expr_sub               go to state 51
    expr_mul               go to state 52
    expr_div               go to state 53
    expr_unary             go to state 54
    factor                 go to state 55
    unary                  go to state 56
    add                    go to state 57
    sub                    go to state 58
    declaration_or_assign  go to state 59
    declaration            go to state 60
    value                  go to state 61
    id_or_access           go to state 62
    id                     go to state 63
    type                   go to state 18
    number                 go to state 64
    number_int             go to state 65
    number_float           go to state 66
    boolean_const          go to state 67


State 132

   14 statment: statment_end .
   18 statment_no_dangle: statment_end .

    ELSE      reduce using rule 18 (statment_no_dangle)
    $default  reduce using rule 14 (statment)


State 133

   22 statment_prefix: FOR OPEN_P declaration_or_assign END expr_assign . END expr_assign CLOSE_P

    END  shift, and go to state 138


State 134

   23 statment_prefix: FOR OPEN_P declaration IT CLOSE_P .

    $default  reduce using rule 23 (statment_prefix)


State 135

   19 dangling_if: IF OPEN_P expr_assign CLOSE_P . statment

    error       shift, and go to state 25
    IF          shift, and go to state 26
    FOR         shift, and go to state 27
    WHILE       shift, and go to state 28
    BOOLEAN     shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    GRAPH       shift, and go to state 8
    VOID        shift, and go to state 9
    TRUE        shift, and go to state 29
    FALSE       shift, and go to state 30
    ID          shift, and go to state 12
    C_FLOAT     shift, and go to state 31
    C_INT       shift, and go to state 32
    READ        shift, and go to state 33
    WRITE       shift, and go to state 34
    RETURN      shift, and go to state 35
    NOT         shift, and go to state 36
    ADD         shift, and go to state 37
    SUB         shift, and go to state 38
    OPEN_BRACE  shift, and go to state 39
    OPEN_P      shift, and go to state 41

    statment               go to state 129
    dangling_if            go to state 43
    statment_prefix        go to state 44
    statment_end           go to state 45
    expr_assign            go to state 46
    expr_relational        go to state 47
    expr_and               go to state 48
    expr_or                go to state 49
    expr_add               go to state 50
    expr_sub               go to state 51
    expr_mul               go to state 52
    expr_div               go to state 53
    expr_unary             go to state 54
    factor                 go to state 55
    unary                  go to state 56
    add                    go to state 57
    sub                    go to state 58
    declaration_or_assign  go to state 59
    declaration            go to state 60
    value                  go to state 61
    id_or_access           go to state 62
    id                     go to state 63
    type                   go to state 18
    number                 go to state 64
    number_int             go to state 65
    number_float           go to state 66
    boolean_const          go to state 67


State 136

   20 statment_prefix: IF OPEN_P expr_assign CLOSE_P statment_no_dangle ELSE .

    $default  reduce using rule 20 (statment_prefix)


State 137

   12 statment: statment_prefix statment_end .
   17 statment_no_dangle: statment_prefix statment_end .

    ELSE      reduce using rule 17 (statment_no_dangle)
    $default  reduce using rule 12 (statment)


State 138

   22 statment_prefix: FOR OPEN_P declaration_or_assign END expr_assign END . expr_assign CLOSE_P

    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    ID       shift, and go to state 12
    C_FLOAT  shift, and go to state 31
    C_INT    shift, and go to state 32
    NOT      shift, and go to state 36
    ADD      shift, and go to state 37
    SUB      shift, and go to state 38
    OPEN_P   shift, and go to state 41

    expr_assign      go to state 139
    expr_relational  go to state 47
    expr_and         go to state 48
    expr_or          go to state 49
    expr_add         go to state 50
    expr_sub         go to state 51
    expr_mul         go to state 52
    expr_div         go to state 53
    expr_unary       go to state 54
    factor           go to state 55
    unary            go to state 56
    add              go to state 57
    sub              go to state 58
    value            go to state 61
    id_or_access     go to state 62
    id               go to state 63
    number           go to state 64
    number_int       go to state 65
    number_float     go to state 66
    boolean_const    go to state 67


State 139

   22 statment_prefix: FOR OPEN_P declaration_or_assign END expr_assign END expr_assign . CLOSE_P

    CLOSE_P  shift, and go to state 140


State 140

   22 statment_prefix: FOR OPEN_P declaration_or_assign END expr_assign END expr_assign CLOSE_P .

    $default  reduce using rule 22 (statment_prefix)
