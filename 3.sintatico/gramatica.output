Terminals unused in grammar

   TO
   TRUE
   FALSE
   NUMBER
   DFS
   BFS
   RETURN
   AND
   OR
   LE
   GE
   LESS
   GREATER
   EQ
   NE
   NOT
   MUL
   DIV
   SUM
   SUB
   OPEN_BRACKET
   CLOSE_BRACKET


Grammar

    0 $accept: init $end

    1 init: program

    2 program: %empty
    3        | program function

    4 function: type id OPEN_P opt_params CLOSE_P OPEN_BRACE statments CLOSE_BRACE
    5         | error

    6 opt_params: %empty
    7           | params

    8 params: declaration
    9       | params SEPARATOR declaration

   10 statments: %empty
   11          | statments statment

   12 statment: statment_prefix statment_end
   13         | statment_prefix dangling_if
   14         | statment_end
   15         | dangling_if
   16         | error

   17 statment_no_dangle: statment_prefix statment_end
   18                   | statment_end

   19 dangling_if: IF OPEN_P expr_assign CLOSE_P statment

   20 statment_prefix: IF OPEN_P expr_assign CLOSE_P statment_no_dangle ELSE
   21                | WHILE OPEN_P expr_assign CLOSE_P
   22                | FOR OPEN_P declaration_or_assign END expr_assign END expr_assign CLOSE_P
   23                | FOR OPEN_P declaration IT CLOSE_P

   24 statment_end: OPEN_BRACE statments CLOSE_BRACE
   25             | READ END
   26             | WRITE END
   27             | declaration_or_assign END

   28 expr_assign: id_or_access ASSIGN expr_relational
   29            | expr_relational

   30 expr_relational: factor

   31 factor: OPEN_P expr_assign CLOSE_P
   32       | id

   33 declaration_or_assign: declaration
   34                      | declaration ASSIGN expr_assign

   35 declaration: type id

   36 id_or_access: id

   37 id: ID

   38 type: INT
   39     | BOOLEAN
   40     | FLOAT
   41     | GRAPH
   42     | VOID


Terminals, with rules where they appear

$end (0) 0
error (256) 5 16
IF (258) 19 20
ELSE (259) 20
FOR (260) 22 23
WHILE (261) 21
BOOLEAN (262) 39
INT (263) 38
FLOAT (264) 40
GRAPH (265) 41
VOID (266) 42
TO (267)
TRUE (268)
FALSE (269)
ID (270) 37
NUMBER (271)
READ (272) 25
WRITE (273) 26
DFS (274)
BFS (275)
RETURN (276)
AND (277)
OR (278)
LE (279)
GE (280)
LESS (281)
GREATER (282)
EQ (283)
NE (284)
NOT (285)
MUL (286)
DIV (287)
SUM (288)
SUB (289)
ASSIGN (290) 28 34
END (291) 22 25 26 27
OPEN_BRACE (292) 4 24
CLOSE_BRACE (293) 4 24
IT (294) 23
SEPARATOR (295) 9
OPEN_P (296) 4 19 20 21 22 23 31
CLOSE_P (297) 4 19 20 21 22 23 31
OPEN_BRACKET (298)
CLOSE_BRACKET (299)


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
init (46)
    on left: 1, on right: 0
program (47)
    on left: 2 3, on right: 1 3
function (48)
    on left: 4 5, on right: 3
opt_params (49)
    on left: 6 7, on right: 4
params (50)
    on left: 8 9, on right: 7 9
statments (51)
    on left: 10 11, on right: 4 11 24
statment (52)
    on left: 12 13 14 15 16, on right: 11 19
statment_no_dangle (53)
    on left: 17 18, on right: 20
dangling_if (54)
    on left: 19, on right: 13 15
statment_prefix (55)
    on left: 20 21 22 23, on right: 12 13 17
statment_end (56)
    on left: 24 25 26 27, on right: 12 14 17 18
expr_assign (57)
    on left: 28 29, on right: 19 20 21 22 31 34
expr_relational (58)
    on left: 30, on right: 28 29
factor (59)
    on left: 31 32, on right: 30
declaration_or_assign (60)
    on left: 33 34, on right: 22 27
declaration (61)
    on left: 35, on right: 8 9 23 33 34
id_or_access (62)
    on left: 36, on right: 28
id (63)
    on left: 37, on right: 4 32 35 36
type (64)
    on left: 38 39 40 41 42, on right: 4 35


State 0

    0 $accept: . init $end

    $default  reduce using rule 2 (program)

    init     go to state 1
    program  go to state 2


State 1

    0 $accept: init . $end

    $end  shift, and go to state 3


State 2

    1 init: program .
    3 program: program . function

    error    shift, and go to state 4
    BOOLEAN  shift, and go to state 5
    INT      shift, and go to state 6
    FLOAT    shift, and go to state 7
    GRAPH    shift, and go to state 8
    VOID     shift, and go to state 9

    $end  reduce using rule 1 (init)

    function  go to state 10
    type      go to state 11


State 3

    0 $accept: init $end .

    $default  accept


State 4

    5 function: error .

    $default  reduce using rule 5 (function)


State 5

   39 type: BOOLEAN .

    $default  reduce using rule 39 (type)


State 6

   38 type: INT .

    $default  reduce using rule 38 (type)


State 7

   40 type: FLOAT .

    $default  reduce using rule 40 (type)


State 8

   41 type: GRAPH .

    $default  reduce using rule 41 (type)


State 9

   42 type: VOID .

    $default  reduce using rule 42 (type)


State 10

    3 program: program function .

    $default  reduce using rule 3 (program)


State 11

    4 function: type . id OPEN_P opt_params CLOSE_P OPEN_BRACE statments CLOSE_BRACE

    ID  shift, and go to state 12

    id  go to state 13


State 12

   37 id: ID .

    $default  reduce using rule 37 (id)


State 13

    4 function: type id . OPEN_P opt_params CLOSE_P OPEN_BRACE statments CLOSE_BRACE

    OPEN_P  shift, and go to state 14


State 14

    4 function: type id OPEN_P . opt_params CLOSE_P OPEN_BRACE statments CLOSE_BRACE

    BOOLEAN  shift, and go to state 5
    INT      shift, and go to state 6
    FLOAT    shift, and go to state 7
    GRAPH    shift, and go to state 8
    VOID     shift, and go to state 9

    $default  reduce using rule 6 (opt_params)

    opt_params   go to state 15
    params       go to state 16
    declaration  go to state 17
    type         go to state 18


State 15

    4 function: type id OPEN_P opt_params . CLOSE_P OPEN_BRACE statments CLOSE_BRACE

    CLOSE_P  shift, and go to state 19


State 16

    7 opt_params: params .
    9 params: params . SEPARATOR declaration

    SEPARATOR  shift, and go to state 20

    $default  reduce using rule 7 (opt_params)


State 17

    8 params: declaration .

    $default  reduce using rule 8 (params)


State 18

   35 declaration: type . id

    ID  shift, and go to state 12

    id  go to state 21


State 19

    4 function: type id OPEN_P opt_params CLOSE_P . OPEN_BRACE statments CLOSE_BRACE

    OPEN_BRACE  shift, and go to state 22


State 20

    9 params: params SEPARATOR . declaration

    BOOLEAN  shift, and go to state 5
    INT      shift, and go to state 6
    FLOAT    shift, and go to state 7
    GRAPH    shift, and go to state 8
    VOID     shift, and go to state 9

    declaration  go to state 23
    type         go to state 18


State 21

   35 declaration: type id .

    $default  reduce using rule 35 (declaration)


State 22

    4 function: type id OPEN_P opt_params CLOSE_P OPEN_BRACE . statments CLOSE_BRACE

    $default  reduce using rule 10 (statments)

    statments  go to state 24


State 23

    9 params: params SEPARATOR declaration .

    $default  reduce using rule 9 (params)


State 24

    4 function: type id OPEN_P opt_params CLOSE_P OPEN_BRACE statments . CLOSE_BRACE
   11 statments: statments . statment

    error        shift, and go to state 25
    IF           shift, and go to state 26
    FOR          shift, and go to state 27
    WHILE        shift, and go to state 28
    BOOLEAN      shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    GRAPH        shift, and go to state 8
    VOID         shift, and go to state 9
    READ         shift, and go to state 29
    WRITE        shift, and go to state 30
    OPEN_BRACE   shift, and go to state 31
    CLOSE_BRACE  shift, and go to state 32

    statment               go to state 33
    dangling_if            go to state 34
    statment_prefix        go to state 35
    statment_end           go to state 36
    declaration_or_assign  go to state 37
    declaration            go to state 38
    type                   go to state 18


State 25

   16 statment: error .

    $default  reduce using rule 16 (statment)


State 26

   19 dangling_if: IF . OPEN_P expr_assign CLOSE_P statment
   20 statment_prefix: IF . OPEN_P expr_assign CLOSE_P statment_no_dangle ELSE

    OPEN_P  shift, and go to state 39


State 27

   22 statment_prefix: FOR . OPEN_P declaration_or_assign END expr_assign END expr_assign CLOSE_P
   23                | FOR . OPEN_P declaration IT CLOSE_P

    OPEN_P  shift, and go to state 40


State 28

   21 statment_prefix: WHILE . OPEN_P expr_assign CLOSE_P

    OPEN_P  shift, and go to state 41


State 29

   25 statment_end: READ . END

    END  shift, and go to state 42


State 30

   26 statment_end: WRITE . END

    END  shift, and go to state 43


State 31

   24 statment_end: OPEN_BRACE . statments CLOSE_BRACE

    $default  reduce using rule 10 (statments)

    statments  go to state 44


State 32

    4 function: type id OPEN_P opt_params CLOSE_P OPEN_BRACE statments CLOSE_BRACE .

    $default  reduce using rule 4 (function)


State 33

   11 statments: statments statment .

    $default  reduce using rule 11 (statments)


State 34

   15 statment: dangling_if .

    $default  reduce using rule 15 (statment)


State 35

   12 statment: statment_prefix . statment_end
   13         | statment_prefix . dangling_if

    IF          shift, and go to state 45
    BOOLEAN     shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    GRAPH       shift, and go to state 8
    VOID        shift, and go to state 9
    READ        shift, and go to state 29
    WRITE       shift, and go to state 30
    OPEN_BRACE  shift, and go to state 31

    dangling_if            go to state 46
    statment_end           go to state 47
    declaration_or_assign  go to state 37
    declaration            go to state 38
    type                   go to state 18


State 36

   14 statment: statment_end .

    $default  reduce using rule 14 (statment)


State 37

   27 statment_end: declaration_or_assign . END

    END  shift, and go to state 48


State 38

   33 declaration_or_assign: declaration .
   34                      | declaration . ASSIGN expr_assign

    ASSIGN  shift, and go to state 49

    $default  reduce using rule 33 (declaration_or_assign)


State 39

   19 dangling_if: IF OPEN_P . expr_assign CLOSE_P statment
   20 statment_prefix: IF OPEN_P . expr_assign CLOSE_P statment_no_dangle ELSE

    ID      shift, and go to state 12
    OPEN_P  shift, and go to state 50

    expr_assign      go to state 51
    expr_relational  go to state 52
    factor           go to state 53
    id_or_access     go to state 54
    id               go to state 55


State 40

   22 statment_prefix: FOR OPEN_P . declaration_or_assign END expr_assign END expr_assign CLOSE_P
   23                | FOR OPEN_P . declaration IT CLOSE_P

    BOOLEAN  shift, and go to state 5
    INT      shift, and go to state 6
    FLOAT    shift, and go to state 7
    GRAPH    shift, and go to state 8
    VOID     shift, and go to state 9

    declaration_or_assign  go to state 56
    declaration            go to state 57
    type                   go to state 18


State 41

   21 statment_prefix: WHILE OPEN_P . expr_assign CLOSE_P

    ID      shift, and go to state 12
    OPEN_P  shift, and go to state 50

    expr_assign      go to state 58
    expr_relational  go to state 52
    factor           go to state 53
    id_or_access     go to state 54
    id               go to state 55


State 42

   25 statment_end: READ END .

    $default  reduce using rule 25 (statment_end)


State 43

   26 statment_end: WRITE END .

    $default  reduce using rule 26 (statment_end)


State 44

   11 statments: statments . statment
   24 statment_end: OPEN_BRACE statments . CLOSE_BRACE

    error        shift, and go to state 25
    IF           shift, and go to state 26
    FOR          shift, and go to state 27
    WHILE        shift, and go to state 28
    BOOLEAN      shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    GRAPH        shift, and go to state 8
    VOID         shift, and go to state 9
    READ         shift, and go to state 29
    WRITE        shift, and go to state 30
    OPEN_BRACE   shift, and go to state 31
    CLOSE_BRACE  shift, and go to state 59

    statment               go to state 33
    dangling_if            go to state 34
    statment_prefix        go to state 35
    statment_end           go to state 36
    declaration_or_assign  go to state 37
    declaration            go to state 38
    type                   go to state 18


State 45

   19 dangling_if: IF . OPEN_P expr_assign CLOSE_P statment

    OPEN_P  shift, and go to state 60


State 46

   13 statment: statment_prefix dangling_if .

    $default  reduce using rule 13 (statment)


State 47

   12 statment: statment_prefix statment_end .

    $default  reduce using rule 12 (statment)


State 48

   27 statment_end: declaration_or_assign END .

    $default  reduce using rule 27 (statment_end)


State 49

   34 declaration_or_assign: declaration ASSIGN . expr_assign

    ID      shift, and go to state 12
    OPEN_P  shift, and go to state 50

    expr_assign      go to state 61
    expr_relational  go to state 52
    factor           go to state 53
    id_or_access     go to state 54
    id               go to state 55


State 50

   31 factor: OPEN_P . expr_assign CLOSE_P

    ID      shift, and go to state 12
    OPEN_P  shift, and go to state 50

    expr_assign      go to state 62
    expr_relational  go to state 52
    factor           go to state 53
    id_or_access     go to state 54
    id               go to state 55


State 51

   19 dangling_if: IF OPEN_P expr_assign . CLOSE_P statment
   20 statment_prefix: IF OPEN_P expr_assign . CLOSE_P statment_no_dangle ELSE

    CLOSE_P  shift, and go to state 63


State 52

   29 expr_assign: expr_relational .

    $default  reduce using rule 29 (expr_assign)


State 53

   30 expr_relational: factor .

    $default  reduce using rule 30 (expr_relational)


State 54

   28 expr_assign: id_or_access . ASSIGN expr_relational

    ASSIGN  shift, and go to state 64


State 55

   32 factor: id .
   36 id_or_access: id .

    ASSIGN    reduce using rule 36 (id_or_access)
    $default  reduce using rule 32 (factor)


State 56

   22 statment_prefix: FOR OPEN_P declaration_or_assign . END expr_assign END expr_assign CLOSE_P

    END  shift, and go to state 65


State 57

   23 statment_prefix: FOR OPEN_P declaration . IT CLOSE_P
   33 declaration_or_assign: declaration .
   34                      | declaration . ASSIGN expr_assign

    ASSIGN  shift, and go to state 49
    IT      shift, and go to state 66

    $default  reduce using rule 33 (declaration_or_assign)


State 58

   21 statment_prefix: WHILE OPEN_P expr_assign . CLOSE_P

    CLOSE_P  shift, and go to state 67


State 59

   24 statment_end: OPEN_BRACE statments CLOSE_BRACE .

    $default  reduce using rule 24 (statment_end)


State 60

   19 dangling_if: IF OPEN_P . expr_assign CLOSE_P statment

    ID      shift, and go to state 12
    OPEN_P  shift, and go to state 50

    expr_assign      go to state 68
    expr_relational  go to state 52
    factor           go to state 53
    id_or_access     go to state 54
    id               go to state 55


State 61

   34 declaration_or_assign: declaration ASSIGN expr_assign .

    $default  reduce using rule 34 (declaration_or_assign)


State 62

   31 factor: OPEN_P expr_assign . CLOSE_P

    CLOSE_P  shift, and go to state 69


State 63

   19 dangling_if: IF OPEN_P expr_assign CLOSE_P . statment
   20 statment_prefix: IF OPEN_P expr_assign CLOSE_P . statment_no_dangle ELSE

    error       shift, and go to state 25
    IF          shift, and go to state 26
    FOR         shift, and go to state 27
    WHILE       shift, and go to state 28
    BOOLEAN     shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    GRAPH       shift, and go to state 8
    VOID        shift, and go to state 9
    READ        shift, and go to state 29
    WRITE       shift, and go to state 30
    OPEN_BRACE  shift, and go to state 31

    statment               go to state 70
    statment_no_dangle     go to state 71
    dangling_if            go to state 34
    statment_prefix        go to state 72
    statment_end           go to state 73
    declaration_or_assign  go to state 37
    declaration            go to state 38
    type                   go to state 18


State 64

   28 expr_assign: id_or_access ASSIGN . expr_relational

    ID      shift, and go to state 12
    OPEN_P  shift, and go to state 50

    expr_relational  go to state 74
    factor           go to state 53
    id               go to state 75


State 65

   22 statment_prefix: FOR OPEN_P declaration_or_assign END . expr_assign END expr_assign CLOSE_P

    ID      shift, and go to state 12
    OPEN_P  shift, and go to state 50

    expr_assign      go to state 76
    expr_relational  go to state 52
    factor           go to state 53
    id_or_access     go to state 54
    id               go to state 55


State 66

   23 statment_prefix: FOR OPEN_P declaration IT . CLOSE_P

    CLOSE_P  shift, and go to state 77


State 67

   21 statment_prefix: WHILE OPEN_P expr_assign CLOSE_P .

    $default  reduce using rule 21 (statment_prefix)


State 68

   19 dangling_if: IF OPEN_P expr_assign . CLOSE_P statment

    CLOSE_P  shift, and go to state 78


State 69

   31 factor: OPEN_P expr_assign CLOSE_P .

    $default  reduce using rule 31 (factor)


State 70

   19 dangling_if: IF OPEN_P expr_assign CLOSE_P statment .

    $default  reduce using rule 19 (dangling_if)


State 71

   20 statment_prefix: IF OPEN_P expr_assign CLOSE_P statment_no_dangle . ELSE

    ELSE  shift, and go to state 79


State 72

   12 statment: statment_prefix . statment_end
   13         | statment_prefix . dangling_if
   17 statment_no_dangle: statment_prefix . statment_end

    IF          shift, and go to state 45
    BOOLEAN     shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    GRAPH       shift, and go to state 8
    VOID        shift, and go to state 9
    READ        shift, and go to state 29
    WRITE       shift, and go to state 30
    OPEN_BRACE  shift, and go to state 31

    dangling_if            go to state 46
    statment_end           go to state 80
    declaration_or_assign  go to state 37
    declaration            go to state 38
    type                   go to state 18


State 73

   14 statment: statment_end .
   18 statment_no_dangle: statment_end .

    ELSE      reduce using rule 18 (statment_no_dangle)
    $default  reduce using rule 14 (statment)


State 74

   28 expr_assign: id_or_access ASSIGN expr_relational .

    $default  reduce using rule 28 (expr_assign)


State 75

   32 factor: id .

    $default  reduce using rule 32 (factor)


State 76

   22 statment_prefix: FOR OPEN_P declaration_or_assign END expr_assign . END expr_assign CLOSE_P

    END  shift, and go to state 81


State 77

   23 statment_prefix: FOR OPEN_P declaration IT CLOSE_P .

    $default  reduce using rule 23 (statment_prefix)


State 78

   19 dangling_if: IF OPEN_P expr_assign CLOSE_P . statment

    error       shift, and go to state 25
    IF          shift, and go to state 26
    FOR         shift, and go to state 27
    WHILE       shift, and go to state 28
    BOOLEAN     shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    GRAPH       shift, and go to state 8
    VOID        shift, and go to state 9
    READ        shift, and go to state 29
    WRITE       shift, and go to state 30
    OPEN_BRACE  shift, and go to state 31

    statment               go to state 70
    dangling_if            go to state 34
    statment_prefix        go to state 35
    statment_end           go to state 36
    declaration_or_assign  go to state 37
    declaration            go to state 38
    type                   go to state 18


State 79

   20 statment_prefix: IF OPEN_P expr_assign CLOSE_P statment_no_dangle ELSE .

    $default  reduce using rule 20 (statment_prefix)


State 80

   12 statment: statment_prefix statment_end .
   17 statment_no_dangle: statment_prefix statment_end .

    ELSE      reduce using rule 17 (statment_no_dangle)
    $default  reduce using rule 12 (statment)


State 81

   22 statment_prefix: FOR OPEN_P declaration_or_assign END expr_assign END . expr_assign CLOSE_P

    ID      shift, and go to state 12
    OPEN_P  shift, and go to state 50

    expr_assign      go to state 82
    expr_relational  go to state 52
    factor           go to state 53
    id_or_access     go to state 54
    id               go to state 55


State 82

   22 statment_prefix: FOR OPEN_P declaration_or_assign END expr_assign END expr_assign . CLOSE_P

    CLOSE_P  shift, and go to state 83


State 83

   22 statment_prefix: FOR OPEN_P declaration_or_assign END expr_assign END expr_assign CLOSE_P .

    $default  reduce using rule 22 (statment_prefix)
