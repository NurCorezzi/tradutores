Terminals unused in grammar

   TO


Grammar

    0 $accept: init $end

    1 init: program

    2 program: %empty
    3        | program function

    4 function: type id OPEN_P params CLOSE_P OPEN_BRACE statments CLOSE_BRACE
    5         | error

    6 params: %empty
    7       | params SEPARATOR declaration
    8       | declaration

    9 function_call: id OPEN_P params_call CLOSE_P

   10 params_call: %empty
   11            | params_call SEPARATOR expr_assign
   12            | expr_assign

   13 graph_call: DFS graph_params_call
   14           | BFS graph_params_call

   15 graph_params_call: OPEN_P id SEPARATOR expr_assign SEPARATOR expr_assign CLOSE_P

   16 statments: %empty
   17          | statments statment

   18 statment: statment_prefix statment_end
   19         | statment_prefix dangling_if
   20         | statment_end
   21         | dangling_if
   22         | error

   23 statment_no_dangle: statment_prefix statment_end
   24                   | statment_end

   25 dangling_if: IF OPEN_P expr_assign CLOSE_P statment

   26 statment_prefix: IF OPEN_P expr_assign CLOSE_P statment_no_dangle ELSE
   27                | WHILE OPEN_P expr_assign CLOSE_P
   28                | FOR OPEN_P declaration_or_assign END expr_assign END expr_assign CLOSE_P
   29                | FOR OPEN_P declaration IT graph_call CLOSE_P

   30 statment_end: OPEN_BRACE statments CLOSE_BRACE
   31             | READ id_or_access END
   32             | WRITE expr_assign END
   33             | declaration_or_assign END
   34             | expr_assign END
   35             | RETURN expr_assign END

   36 expr_assign: id_or_access ASSIGN expr_relational
   37            | expr_relational

   38 expr_relational: expr_relational compare_op expr_and
   39                | expr_and

   40 expr_and: expr_and and expr_or
   41         | expr_or

   42 expr_or: expr_or or expr_add
   43        | expr_add

   44 expr_add: expr_add add expr_sub
   45         | expr_sub

   46 expr_sub: expr_sub sub expr_mul
   47         | expr_mul

   48 expr_mul: expr_mul mul expr_div
   49         | expr_div

   50 expr_div: expr_div div expr_unary
   51         | expr_unary

   52 expr_unary: unary factor
   53           | factor

   54 factor: OPEN_P expr_assign CLOSE_P
   55       | value
   56       | function_call

   57 unary: NOT
   58      | add
   59      | sub

   60 and: AND

   61 or: OR

   62 add: ADD

   63 sub: SUB

   64 mul: MUL

   65 div: DIV

   66 compare_op: LE
   67           | GE
   68           | LESS
   69           | GREATER
   70           | EQ
   71           | NE

   72 declaration_or_assign: declaration
   73                      | declaration ASSIGN expr_assign

   74 declaration: type id

   75 value: id_or_access
   76      | number
   77      | boolean_const

   78 id_or_access: id
   79             | id OPEN_BRACKET number_int CLOSE_BRACKET

   80 id: ID

   81 type: INT
   82     | BOOLEAN
   83     | FLOAT
   84     | GRAPH
   85     | VOID

   86 number: number_int
   87       | number_float

   88 number_int: C_INT

   89 number_float: C_FLOAT

   90 boolean_const: TRUE
   91              | FALSE


Terminals, with rules where they appear

$end (0) 0
error (256) 5 22
IF (258) 25 26
ELSE (259) 26
FOR (260) 28 29
WHILE (261) 27
BOOLEAN (262) 82
INT (263) 81
FLOAT (264) 83
GRAPH (265) 84
VOID (266) 85
TO (267)
TRUE (268) 90
FALSE (269) 91
ID (270) 80
C_FLOAT (271) 89
C_INT (272) 88
READ (273) 31
WRITE (274) 32
DFS (275) 13
BFS (276) 14
RETURN (277) 35
AND (278) 60
OR (279) 61
LE (280) 66
GE (281) 67
LESS (282) 68
GREATER (283) 69
EQ (284) 70
NE (285) 71
NOT (286) 57
MUL (287) 64
DIV (288) 65
ADD (289) 62
SUB (290) 63
ASSIGN (291) 36 73
END (292) 28 31 32 33 34 35
OPEN_BRACE (293) 4 30
CLOSE_BRACE (294) 4 30
IT (295) 29
SEPARATOR (296) 7 11 15
OPEN_P (297) 4 9 15 25 26 27 28 29 54
CLOSE_P (298) 4 9 15 25 26 27 28 29 54
OPEN_BRACKET (299) 79
CLOSE_BRACKET (300) 79


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
init (47)
    on left: 1, on right: 0
program (48)
    on left: 2 3, on right: 1 3
function (49)
    on left: 4 5, on right: 3
params (50)
    on left: 6 7 8, on right: 4 7
function_call (51)
    on left: 9, on right: 56
params_call (52)
    on left: 10 11 12, on right: 9 11
graph_call (53)
    on left: 13 14, on right: 29
graph_params_call (54)
    on left: 15, on right: 13 14
statments (55)
    on left: 16 17, on right: 4 17 30
statment (56)
    on left: 18 19 20 21 22, on right: 17 25
statment_no_dangle (57)
    on left: 23 24, on right: 26
dangling_if (58)
    on left: 25, on right: 19 21
statment_prefix (59)
    on left: 26 27 28 29, on right: 18 19 23
statment_end (60)
    on left: 30 31 32 33 34 35, on right: 18 20 23 24
expr_assign (61)
    on left: 36 37, on right: 11 12 15 25 26 27 28 32 34 35 54 73
expr_relational (62)
    on left: 38 39, on right: 36 37 38
expr_and (63)
    on left: 40 41, on right: 38 39 40
expr_or (64)
    on left: 42 43, on right: 40 41 42
expr_add (65)
    on left: 44 45, on right: 42 43 44
expr_sub (66)
    on left: 46 47, on right: 44 45 46
expr_mul (67)
    on left: 48 49, on right: 46 47 48
expr_div (68)
    on left: 50 51, on right: 48 49 50
expr_unary (69)
    on left: 52 53, on right: 50 51
factor (70)
    on left: 54 55 56, on right: 52 53
unary (71)
    on left: 57 58 59, on right: 52
and (72)
    on left: 60, on right: 40
or (73)
    on left: 61, on right: 42
add (74)
    on left: 62, on right: 44 58
sub (75)
    on left: 63, on right: 46 59
mul (76)
    on left: 64, on right: 48
div (77)
    on left: 65, on right: 50
compare_op (78)
    on left: 66 67 68 69 70 71, on right: 38
declaration_or_assign (79)
    on left: 72 73, on right: 28 33
declaration (80)
    on left: 74, on right: 7 8 29 72 73
value (81)
    on left: 75 76 77, on right: 55
id_or_access (82)
    on left: 78 79, on right: 31 36 75
id (83)
    on left: 80, on right: 4 9 15 74 78 79
type (84)
    on left: 81 82 83 84 85, on right: 4 74
number (85)
    on left: 86 87, on right: 76
number_int (86)
    on left: 88, on right: 79 86
number_float (87)
    on left: 89, on right: 87
boolean_const (88)
    on left: 90 91, on right: 77


State 0

    0 $accept: . init $end

    $default  reduce using rule 2 (program)

    init     go to state 1
    program  go to state 2


State 1

    0 $accept: init . $end

    $end  shift, and go to state 3


State 2

    1 init: program .
    3 program: program . function

    error    shift, and go to state 4
    BOOLEAN  shift, and go to state 5
    INT      shift, and go to state 6
    FLOAT    shift, and go to state 7
    GRAPH    shift, and go to state 8
    VOID     shift, and go to state 9

    $end  reduce using rule 1 (init)

    function  go to state 10
    type      go to state 11


State 3

    0 $accept: init $end .

    $default  accept


State 4

    5 function: error .

    $default  reduce using rule 5 (function)


State 5

   82 type: BOOLEAN .

    $default  reduce using rule 82 (type)


State 6

   81 type: INT .

    $default  reduce using rule 81 (type)


State 7

   83 type: FLOAT .

    $default  reduce using rule 83 (type)


State 8

   84 type: GRAPH .

    $default  reduce using rule 84 (type)


State 9

   85 type: VOID .

    $default  reduce using rule 85 (type)


State 10

    3 program: program function .

    $default  reduce using rule 3 (program)


State 11

    4 function: type . id OPEN_P params CLOSE_P OPEN_BRACE statments CLOSE_BRACE

    ID  shift, and go to state 12

    id  go to state 13


State 12

   80 id: ID .

    $default  reduce using rule 80 (id)


State 13

    4 function: type id . OPEN_P params CLOSE_P OPEN_BRACE statments CLOSE_BRACE

    OPEN_P  shift, and go to state 14


State 14

    4 function: type id OPEN_P . params CLOSE_P OPEN_BRACE statments CLOSE_BRACE

    BOOLEAN  shift, and go to state 5
    INT      shift, and go to state 6
    FLOAT    shift, and go to state 7
    GRAPH    shift, and go to state 8
    VOID     shift, and go to state 9

    $default  reduce using rule 6 (params)

    params       go to state 15
    declaration  go to state 16
    type         go to state 17


State 15

    4 function: type id OPEN_P params . CLOSE_P OPEN_BRACE statments CLOSE_BRACE
    7 params: params . SEPARATOR declaration

    SEPARATOR  shift, and go to state 18
    CLOSE_P    shift, and go to state 19


State 16

    8 params: declaration .

    $default  reduce using rule 8 (params)


State 17

   74 declaration: type . id

    ID  shift, and go to state 12

    id  go to state 20


State 18

    7 params: params SEPARATOR . declaration

    BOOLEAN  shift, and go to state 5
    INT      shift, and go to state 6
    FLOAT    shift, and go to state 7
    GRAPH    shift, and go to state 8
    VOID     shift, and go to state 9

    declaration  go to state 21
    type         go to state 17


State 19

    4 function: type id OPEN_P params CLOSE_P . OPEN_BRACE statments CLOSE_BRACE

    OPEN_BRACE  shift, and go to state 22


State 20

   74 declaration: type id .

    $default  reduce using rule 74 (declaration)


State 21

    7 params: params SEPARATOR declaration .

    $default  reduce using rule 7 (params)


State 22

    4 function: type id OPEN_P params CLOSE_P OPEN_BRACE . statments CLOSE_BRACE

    $default  reduce using rule 16 (statments)

    statments  go to state 23


State 23

    4 function: type id OPEN_P params CLOSE_P OPEN_BRACE statments . CLOSE_BRACE
   17 statments: statments . statment

    error        shift, and go to state 24
    IF           shift, and go to state 25
    FOR          shift, and go to state 26
    WHILE        shift, and go to state 27
    BOOLEAN      shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    GRAPH        shift, and go to state 8
    VOID         shift, and go to state 9
    TRUE         shift, and go to state 28
    FALSE        shift, and go to state 29
    ID           shift, and go to state 12
    C_FLOAT      shift, and go to state 30
    C_INT        shift, and go to state 31
    READ         shift, and go to state 32
    WRITE        shift, and go to state 33
    RETURN       shift, and go to state 34
    NOT          shift, and go to state 35
    ADD          shift, and go to state 36
    SUB          shift, and go to state 37
    OPEN_BRACE   shift, and go to state 38
    CLOSE_BRACE  shift, and go to state 39
    OPEN_P       shift, and go to state 40

    function_call          go to state 41
    statment               go to state 42
    dangling_if            go to state 43
    statment_prefix        go to state 44
    statment_end           go to state 45
    expr_assign            go to state 46
    expr_relational        go to state 47
    expr_and               go to state 48
    expr_or                go to state 49
    expr_add               go to state 50
    expr_sub               go to state 51
    expr_mul               go to state 52
    expr_div               go to state 53
    expr_unary             go to state 54
    factor                 go to state 55
    unary                  go to state 56
    add                    go to state 57
    sub                    go to state 58
    declaration_or_assign  go to state 59
    declaration            go to state 60
    value                  go to state 61
    id_or_access           go to state 62
    id                     go to state 63
    type                   go to state 17
    number                 go to state 64
    number_int             go to state 65
    number_float           go to state 66
    boolean_const          go to state 67


State 24

   22 statment: error .

    $default  reduce using rule 22 (statment)


State 25

   25 dangling_if: IF . OPEN_P expr_assign CLOSE_P statment
   26 statment_prefix: IF . OPEN_P expr_assign CLOSE_P statment_no_dangle ELSE

    OPEN_P  shift, and go to state 68


State 26

   28 statment_prefix: FOR . OPEN_P declaration_or_assign END expr_assign END expr_assign CLOSE_P
   29                | FOR . OPEN_P declaration IT graph_call CLOSE_P

    OPEN_P  shift, and go to state 69


State 27

   27 statment_prefix: WHILE . OPEN_P expr_assign CLOSE_P

    OPEN_P  shift, and go to state 70


State 28

   90 boolean_const: TRUE .

    $default  reduce using rule 90 (boolean_const)


State 29

   91 boolean_const: FALSE .

    $default  reduce using rule 91 (boolean_const)


State 30

   89 number_float: C_FLOAT .

    $default  reduce using rule 89 (number_float)


State 31

   88 number_int: C_INT .

    $default  reduce using rule 88 (number_int)


State 32

   31 statment_end: READ . id_or_access END

    ID  shift, and go to state 12

    id_or_access  go to state 71
    id            go to state 72


State 33

   32 statment_end: WRITE . expr_assign END

    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    ID       shift, and go to state 12
    C_FLOAT  shift, and go to state 30
    C_INT    shift, and go to state 31
    NOT      shift, and go to state 35
    ADD      shift, and go to state 36
    SUB      shift, and go to state 37
    OPEN_P   shift, and go to state 40

    function_call    go to state 41
    expr_assign      go to state 73
    expr_relational  go to state 47
    expr_and         go to state 48
    expr_or          go to state 49
    expr_add         go to state 50
    expr_sub         go to state 51
    expr_mul         go to state 52
    expr_div         go to state 53
    expr_unary       go to state 54
    factor           go to state 55
    unary            go to state 56
    add              go to state 57
    sub              go to state 58
    value            go to state 61
    id_or_access     go to state 62
    id               go to state 63
    number           go to state 64
    number_int       go to state 65
    number_float     go to state 66
    boolean_const    go to state 67


State 34

   35 statment_end: RETURN . expr_assign END

    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    ID       shift, and go to state 12
    C_FLOAT  shift, and go to state 30
    C_INT    shift, and go to state 31
    NOT      shift, and go to state 35
    ADD      shift, and go to state 36
    SUB      shift, and go to state 37
    OPEN_P   shift, and go to state 40

    function_call    go to state 41
    expr_assign      go to state 74
    expr_relational  go to state 47
    expr_and         go to state 48
    expr_or          go to state 49
    expr_add         go to state 50
    expr_sub         go to state 51
    expr_mul         go to state 52
    expr_div         go to state 53
    expr_unary       go to state 54
    factor           go to state 55
    unary            go to state 56
    add              go to state 57
    sub              go to state 58
    value            go to state 61
    id_or_access     go to state 62
    id               go to state 63
    number           go to state 64
    number_int       go to state 65
    number_float     go to state 66
    boolean_const    go to state 67


State 35

   57 unary: NOT .

    $default  reduce using rule 57 (unary)


State 36

   62 add: ADD .

    $default  reduce using rule 62 (add)


State 37

   63 sub: SUB .

    $default  reduce using rule 63 (sub)


State 38

   30 statment_end: OPEN_BRACE . statments CLOSE_BRACE

    $default  reduce using rule 16 (statments)

    statments  go to state 75


State 39

    4 function: type id OPEN_P params CLOSE_P OPEN_BRACE statments CLOSE_BRACE .

    $default  reduce using rule 4 (function)


State 40

   54 factor: OPEN_P . expr_assign CLOSE_P

    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    ID       shift, and go to state 12
    C_FLOAT  shift, and go to state 30
    C_INT    shift, and go to state 31
    NOT      shift, and go to state 35
    ADD      shift, and go to state 36
    SUB      shift, and go to state 37
    OPEN_P   shift, and go to state 40

    function_call    go to state 41
    expr_assign      go to state 76
    expr_relational  go to state 47
    expr_and         go to state 48
    expr_or          go to state 49
    expr_add         go to state 50
    expr_sub         go to state 51
    expr_mul         go to state 52
    expr_div         go to state 53
    expr_unary       go to state 54
    factor           go to state 55
    unary            go to state 56
    add              go to state 57
    sub              go to state 58
    value            go to state 61
    id_or_access     go to state 62
    id               go to state 63
    number           go to state 64
    number_int       go to state 65
    number_float     go to state 66
    boolean_const    go to state 67


State 41

   56 factor: function_call .

    $default  reduce using rule 56 (factor)


State 42

   17 statments: statments statment .

    $default  reduce using rule 17 (statments)


State 43

   21 statment: dangling_if .

    $default  reduce using rule 21 (statment)


State 44

   18 statment: statment_prefix . statment_end
   19         | statment_prefix . dangling_if

    IF          shift, and go to state 77
    BOOLEAN     shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    GRAPH       shift, and go to state 8
    VOID        shift, and go to state 9
    TRUE        shift, and go to state 28
    FALSE       shift, and go to state 29
    ID          shift, and go to state 12
    C_FLOAT     shift, and go to state 30
    C_INT       shift, and go to state 31
    READ        shift, and go to state 32
    WRITE       shift, and go to state 33
    RETURN      shift, and go to state 34
    NOT         shift, and go to state 35
    ADD         shift, and go to state 36
    SUB         shift, and go to state 37
    OPEN_BRACE  shift, and go to state 38
    OPEN_P      shift, and go to state 40

    function_call          go to state 41
    dangling_if            go to state 78
    statment_end           go to state 79
    expr_assign            go to state 46
    expr_relational        go to state 47
    expr_and               go to state 48
    expr_or                go to state 49
    expr_add               go to state 50
    expr_sub               go to state 51
    expr_mul               go to state 52
    expr_div               go to state 53
    expr_unary             go to state 54
    factor                 go to state 55
    unary                  go to state 56
    add                    go to state 57
    sub                    go to state 58
    declaration_or_assign  go to state 59
    declaration            go to state 60
    value                  go to state 61
    id_or_access           go to state 62
    id                     go to state 63
    type                   go to state 17
    number                 go to state 64
    number_int             go to state 65
    number_float           go to state 66
    boolean_const          go to state 67


State 45

   20 statment: statment_end .

    $default  reduce using rule 20 (statment)


State 46

   34 statment_end: expr_assign . END

    END  shift, and go to state 80


State 47

   37 expr_assign: expr_relational .
   38 expr_relational: expr_relational . compare_op expr_and

    LE       shift, and go to state 81
    GE       shift, and go to state 82
    LESS     shift, and go to state 83
    GREATER  shift, and go to state 84
    EQ       shift, and go to state 85
    NE       shift, and go to state 86

    $default  reduce using rule 37 (expr_assign)

    compare_op  go to state 87


State 48

   39 expr_relational: expr_and .
   40 expr_and: expr_and . and expr_or

    AND  shift, and go to state 88

    $default  reduce using rule 39 (expr_relational)

    and  go to state 89


State 49

   41 expr_and: expr_or .
   42 expr_or: expr_or . or expr_add

    OR  shift, and go to state 90

    $default  reduce using rule 41 (expr_and)

    or  go to state 91


State 50

   43 expr_or: expr_add .
   44 expr_add: expr_add . add expr_sub

    ADD  shift, and go to state 36

    $default  reduce using rule 43 (expr_or)

    add  go to state 92


State 51

   45 expr_add: expr_sub .
   46 expr_sub: expr_sub . sub expr_mul

    SUB  shift, and go to state 37

    $default  reduce using rule 45 (expr_add)

    sub  go to state 93


State 52

   47 expr_sub: expr_mul .
   48 expr_mul: expr_mul . mul expr_div

    MUL  shift, and go to state 94

    $default  reduce using rule 47 (expr_sub)

    mul  go to state 95


State 53

   49 expr_mul: expr_div .
   50 expr_div: expr_div . div expr_unary

    DIV  shift, and go to state 96

    $default  reduce using rule 49 (expr_mul)

    div  go to state 97


State 54

   51 expr_div: expr_unary .

    $default  reduce using rule 51 (expr_div)


State 55

   53 expr_unary: factor .

    $default  reduce using rule 53 (expr_unary)


State 56

   52 expr_unary: unary . factor

    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    ID       shift, and go to state 12
    C_FLOAT  shift, and go to state 30
    C_INT    shift, and go to state 31
    OPEN_P   shift, and go to state 40

    function_call  go to state 41
    factor         go to state 98
    value          go to state 61
    id_or_access   go to state 99
    id             go to state 63
    number         go to state 64
    number_int     go to state 65
    number_float   go to state 66
    boolean_const  go to state 67


State 57

   58 unary: add .

    $default  reduce using rule 58 (unary)


State 58

   59 unary: sub .

    $default  reduce using rule 59 (unary)


State 59

   33 statment_end: declaration_or_assign . END

    END  shift, and go to state 100


State 60

   72 declaration_or_assign: declaration .
   73                      | declaration . ASSIGN expr_assign

    ASSIGN  shift, and go to state 101

    $default  reduce using rule 72 (declaration_or_assign)


State 61

   55 factor: value .

    $default  reduce using rule 55 (factor)


State 62

   36 expr_assign: id_or_access . ASSIGN expr_relational
   75 value: id_or_access .

    ASSIGN  shift, and go to state 102

    $default  reduce using rule 75 (value)


State 63

    9 function_call: id . OPEN_P params_call CLOSE_P
   78 id_or_access: id .
   79             | id . OPEN_BRACKET number_int CLOSE_BRACKET

    OPEN_P        shift, and go to state 103
    OPEN_BRACKET  shift, and go to state 104

    $default  reduce using rule 78 (id_or_access)


State 64

   76 value: number .

    $default  reduce using rule 76 (value)


State 65

   86 number: number_int .

    $default  reduce using rule 86 (number)


State 66

   87 number: number_float .

    $default  reduce using rule 87 (number)


State 67

   77 value: boolean_const .

    $default  reduce using rule 77 (value)


State 68

   25 dangling_if: IF OPEN_P . expr_assign CLOSE_P statment
   26 statment_prefix: IF OPEN_P . expr_assign CLOSE_P statment_no_dangle ELSE

    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    ID       shift, and go to state 12
    C_FLOAT  shift, and go to state 30
    C_INT    shift, and go to state 31
    NOT      shift, and go to state 35
    ADD      shift, and go to state 36
    SUB      shift, and go to state 37
    OPEN_P   shift, and go to state 40

    function_call    go to state 41
    expr_assign      go to state 105
    expr_relational  go to state 47
    expr_and         go to state 48
    expr_or          go to state 49
    expr_add         go to state 50
    expr_sub         go to state 51
    expr_mul         go to state 52
    expr_div         go to state 53
    expr_unary       go to state 54
    factor           go to state 55
    unary            go to state 56
    add              go to state 57
    sub              go to state 58
    value            go to state 61
    id_or_access     go to state 62
    id               go to state 63
    number           go to state 64
    number_int       go to state 65
    number_float     go to state 66
    boolean_const    go to state 67


State 69

   28 statment_prefix: FOR OPEN_P . declaration_or_assign END expr_assign END expr_assign CLOSE_P
   29                | FOR OPEN_P . declaration IT graph_call CLOSE_P

    BOOLEAN  shift, and go to state 5
    INT      shift, and go to state 6
    FLOAT    shift, and go to state 7
    GRAPH    shift, and go to state 8
    VOID     shift, and go to state 9

    declaration_or_assign  go to state 106
    declaration            go to state 107
    type                   go to state 17


State 70

   27 statment_prefix: WHILE OPEN_P . expr_assign CLOSE_P

    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    ID       shift, and go to state 12
    C_FLOAT  shift, and go to state 30
    C_INT    shift, and go to state 31
    NOT      shift, and go to state 35
    ADD      shift, and go to state 36
    SUB      shift, and go to state 37
    OPEN_P   shift, and go to state 40

    function_call    go to state 41
    expr_assign      go to state 108
    expr_relational  go to state 47
    expr_and         go to state 48
    expr_or          go to state 49
    expr_add         go to state 50
    expr_sub         go to state 51
    expr_mul         go to state 52
    expr_div         go to state 53
    expr_unary       go to state 54
    factor           go to state 55
    unary            go to state 56
    add              go to state 57
    sub              go to state 58
    value            go to state 61
    id_or_access     go to state 62
    id               go to state 63
    number           go to state 64
    number_int       go to state 65
    number_float     go to state 66
    boolean_const    go to state 67


State 71

   31 statment_end: READ id_or_access . END

    END  shift, and go to state 109


State 72

   78 id_or_access: id .
   79             | id . OPEN_BRACKET number_int CLOSE_BRACKET

    OPEN_BRACKET  shift, and go to state 104

    $default  reduce using rule 78 (id_or_access)


State 73

   32 statment_end: WRITE expr_assign . END

    END  shift, and go to state 110


State 74

   35 statment_end: RETURN expr_assign . END

    END  shift, and go to state 111


State 75

   17 statments: statments . statment
   30 statment_end: OPEN_BRACE statments . CLOSE_BRACE

    error        shift, and go to state 24
    IF           shift, and go to state 25
    FOR          shift, and go to state 26
    WHILE        shift, and go to state 27
    BOOLEAN      shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    GRAPH        shift, and go to state 8
    VOID         shift, and go to state 9
    TRUE         shift, and go to state 28
    FALSE        shift, and go to state 29
    ID           shift, and go to state 12
    C_FLOAT      shift, and go to state 30
    C_INT        shift, and go to state 31
    READ         shift, and go to state 32
    WRITE        shift, and go to state 33
    RETURN       shift, and go to state 34
    NOT          shift, and go to state 35
    ADD          shift, and go to state 36
    SUB          shift, and go to state 37
    OPEN_BRACE   shift, and go to state 38
    CLOSE_BRACE  shift, and go to state 112
    OPEN_P       shift, and go to state 40

    function_call          go to state 41
    statment               go to state 42
    dangling_if            go to state 43
    statment_prefix        go to state 44
    statment_end           go to state 45
    expr_assign            go to state 46
    expr_relational        go to state 47
    expr_and               go to state 48
    expr_or                go to state 49
    expr_add               go to state 50
    expr_sub               go to state 51
    expr_mul               go to state 52
    expr_div               go to state 53
    expr_unary             go to state 54
    factor                 go to state 55
    unary                  go to state 56
    add                    go to state 57
    sub                    go to state 58
    declaration_or_assign  go to state 59
    declaration            go to state 60
    value                  go to state 61
    id_or_access           go to state 62
    id                     go to state 63
    type                   go to state 17
    number                 go to state 64
    number_int             go to state 65
    number_float           go to state 66
    boolean_const          go to state 67


State 76

   54 factor: OPEN_P expr_assign . CLOSE_P

    CLOSE_P  shift, and go to state 113


State 77

   25 dangling_if: IF . OPEN_P expr_assign CLOSE_P statment

    OPEN_P  shift, and go to state 114


State 78

   19 statment: statment_prefix dangling_if .

    $default  reduce using rule 19 (statment)


State 79

   18 statment: statment_prefix statment_end .

    $default  reduce using rule 18 (statment)


State 80

   34 statment_end: expr_assign END .

    $default  reduce using rule 34 (statment_end)


State 81

   66 compare_op: LE .

    $default  reduce using rule 66 (compare_op)


State 82

   67 compare_op: GE .

    $default  reduce using rule 67 (compare_op)


State 83

   68 compare_op: LESS .

    $default  reduce using rule 68 (compare_op)


State 84

   69 compare_op: GREATER .

    $default  reduce using rule 69 (compare_op)


State 85

   70 compare_op: EQ .

    $default  reduce using rule 70 (compare_op)


State 86

   71 compare_op: NE .

    $default  reduce using rule 71 (compare_op)


State 87

   38 expr_relational: expr_relational compare_op . expr_and

    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    ID       shift, and go to state 12
    C_FLOAT  shift, and go to state 30
    C_INT    shift, and go to state 31
    NOT      shift, and go to state 35
    ADD      shift, and go to state 36
    SUB      shift, and go to state 37
    OPEN_P   shift, and go to state 40

    function_call  go to state 41
    expr_and       go to state 115
    expr_or        go to state 49
    expr_add       go to state 50
    expr_sub       go to state 51
    expr_mul       go to state 52
    expr_div       go to state 53
    expr_unary     go to state 54
    factor         go to state 55
    unary          go to state 56
    add            go to state 57
    sub            go to state 58
    value          go to state 61
    id_or_access   go to state 99
    id             go to state 63
    number         go to state 64
    number_int     go to state 65
    number_float   go to state 66
    boolean_const  go to state 67


State 88

   60 and: AND .

    $default  reduce using rule 60 (and)


State 89

   40 expr_and: expr_and and . expr_or

    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    ID       shift, and go to state 12
    C_FLOAT  shift, and go to state 30
    C_INT    shift, and go to state 31
    NOT      shift, and go to state 35
    ADD      shift, and go to state 36
    SUB      shift, and go to state 37
    OPEN_P   shift, and go to state 40

    function_call  go to state 41
    expr_or        go to state 116
    expr_add       go to state 50
    expr_sub       go to state 51
    expr_mul       go to state 52
    expr_div       go to state 53
    expr_unary     go to state 54
    factor         go to state 55
    unary          go to state 56
    add            go to state 57
    sub            go to state 58
    value          go to state 61
    id_or_access   go to state 99
    id             go to state 63
    number         go to state 64
    number_int     go to state 65
    number_float   go to state 66
    boolean_const  go to state 67


State 90

   61 or: OR .

    $default  reduce using rule 61 (or)


State 91

   42 expr_or: expr_or or . expr_add

    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    ID       shift, and go to state 12
    C_FLOAT  shift, and go to state 30
    C_INT    shift, and go to state 31
    NOT      shift, and go to state 35
    ADD      shift, and go to state 36
    SUB      shift, and go to state 37
    OPEN_P   shift, and go to state 40

    function_call  go to state 41
    expr_add       go to state 117
    expr_sub       go to state 51
    expr_mul       go to state 52
    expr_div       go to state 53
    expr_unary     go to state 54
    factor         go to state 55
    unary          go to state 56
    add            go to state 57
    sub            go to state 58
    value          go to state 61
    id_or_access   go to state 99
    id             go to state 63
    number         go to state 64
    number_int     go to state 65
    number_float   go to state 66
    boolean_const  go to state 67


State 92

   44 expr_add: expr_add add . expr_sub

    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    ID       shift, and go to state 12
    C_FLOAT  shift, and go to state 30
    C_INT    shift, and go to state 31
    NOT      shift, and go to state 35
    ADD      shift, and go to state 36
    SUB      shift, and go to state 37
    OPEN_P   shift, and go to state 40

    function_call  go to state 41
    expr_sub       go to state 118
    expr_mul       go to state 52
    expr_div       go to state 53
    expr_unary     go to state 54
    factor         go to state 55
    unary          go to state 56
    add            go to state 57
    sub            go to state 58
    value          go to state 61
    id_or_access   go to state 99
    id             go to state 63
    number         go to state 64
    number_int     go to state 65
    number_float   go to state 66
    boolean_const  go to state 67


State 93

   46 expr_sub: expr_sub sub . expr_mul

    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    ID       shift, and go to state 12
    C_FLOAT  shift, and go to state 30
    C_INT    shift, and go to state 31
    NOT      shift, and go to state 35
    ADD      shift, and go to state 36
    SUB      shift, and go to state 37
    OPEN_P   shift, and go to state 40

    function_call  go to state 41
    expr_mul       go to state 119
    expr_div       go to state 53
    expr_unary     go to state 54
    factor         go to state 55
    unary          go to state 56
    add            go to state 57
    sub            go to state 58
    value          go to state 61
    id_or_access   go to state 99
    id             go to state 63
    number         go to state 64
    number_int     go to state 65
    number_float   go to state 66
    boolean_const  go to state 67


State 94

   64 mul: MUL .

    $default  reduce using rule 64 (mul)


State 95

   48 expr_mul: expr_mul mul . expr_div

    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    ID       shift, and go to state 12
    C_FLOAT  shift, and go to state 30
    C_INT    shift, and go to state 31
    NOT      shift, and go to state 35
    ADD      shift, and go to state 36
    SUB      shift, and go to state 37
    OPEN_P   shift, and go to state 40

    function_call  go to state 41
    expr_div       go to state 120
    expr_unary     go to state 54
    factor         go to state 55
    unary          go to state 56
    add            go to state 57
    sub            go to state 58
    value          go to state 61
    id_or_access   go to state 99
    id             go to state 63
    number         go to state 64
    number_int     go to state 65
    number_float   go to state 66
    boolean_const  go to state 67


State 96

   65 div: DIV .

    $default  reduce using rule 65 (div)


State 97

   50 expr_div: expr_div div . expr_unary

    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    ID       shift, and go to state 12
    C_FLOAT  shift, and go to state 30
    C_INT    shift, and go to state 31
    NOT      shift, and go to state 35
    ADD      shift, and go to state 36
    SUB      shift, and go to state 37
    OPEN_P   shift, and go to state 40

    function_call  go to state 41
    expr_unary     go to state 121
    factor         go to state 55
    unary          go to state 56
    add            go to state 57
    sub            go to state 58
    value          go to state 61
    id_or_access   go to state 99
    id             go to state 63
    number         go to state 64
    number_int     go to state 65
    number_float   go to state 66
    boolean_const  go to state 67


State 98

   52 expr_unary: unary factor .

    $default  reduce using rule 52 (expr_unary)


State 99

   75 value: id_or_access .

    $default  reduce using rule 75 (value)


State 100

   33 statment_end: declaration_or_assign END .

    $default  reduce using rule 33 (statment_end)


State 101

   73 declaration_or_assign: declaration ASSIGN . expr_assign

    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    ID       shift, and go to state 12
    C_FLOAT  shift, and go to state 30
    C_INT    shift, and go to state 31
    NOT      shift, and go to state 35
    ADD      shift, and go to state 36
    SUB      shift, and go to state 37
    OPEN_P   shift, and go to state 40

    function_call    go to state 41
    expr_assign      go to state 122
    expr_relational  go to state 47
    expr_and         go to state 48
    expr_or          go to state 49
    expr_add         go to state 50
    expr_sub         go to state 51
    expr_mul         go to state 52
    expr_div         go to state 53
    expr_unary       go to state 54
    factor           go to state 55
    unary            go to state 56
    add              go to state 57
    sub              go to state 58
    value            go to state 61
    id_or_access     go to state 62
    id               go to state 63
    number           go to state 64
    number_int       go to state 65
    number_float     go to state 66
    boolean_const    go to state 67


State 102

   36 expr_assign: id_or_access ASSIGN . expr_relational

    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    ID       shift, and go to state 12
    C_FLOAT  shift, and go to state 30
    C_INT    shift, and go to state 31
    NOT      shift, and go to state 35
    ADD      shift, and go to state 36
    SUB      shift, and go to state 37
    OPEN_P   shift, and go to state 40

    function_call    go to state 41
    expr_relational  go to state 123
    expr_and         go to state 48
    expr_or          go to state 49
    expr_add         go to state 50
    expr_sub         go to state 51
    expr_mul         go to state 52
    expr_div         go to state 53
    expr_unary       go to state 54
    factor           go to state 55
    unary            go to state 56
    add              go to state 57
    sub              go to state 58
    value            go to state 61
    id_or_access     go to state 99
    id               go to state 63
    number           go to state 64
    number_int       go to state 65
    number_float     go to state 66
    boolean_const    go to state 67


State 103

    9 function_call: id OPEN_P . params_call CLOSE_P

    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    ID       shift, and go to state 12
    C_FLOAT  shift, and go to state 30
    C_INT    shift, and go to state 31
    NOT      shift, and go to state 35
    ADD      shift, and go to state 36
    SUB      shift, and go to state 37
    OPEN_P   shift, and go to state 40

    $default  reduce using rule 10 (params_call)

    function_call    go to state 41
    params_call      go to state 124
    expr_assign      go to state 125
    expr_relational  go to state 47
    expr_and         go to state 48
    expr_or          go to state 49
    expr_add         go to state 50
    expr_sub         go to state 51
    expr_mul         go to state 52
    expr_div         go to state 53
    expr_unary       go to state 54
    factor           go to state 55
    unary            go to state 56
    add              go to state 57
    sub              go to state 58
    value            go to state 61
    id_or_access     go to state 62
    id               go to state 63
    number           go to state 64
    number_int       go to state 65
    number_float     go to state 66
    boolean_const    go to state 67


State 104

   79 id_or_access: id OPEN_BRACKET . number_int CLOSE_BRACKET

    C_INT  shift, and go to state 31

    number_int  go to state 126


State 105

   25 dangling_if: IF OPEN_P expr_assign . CLOSE_P statment
   26 statment_prefix: IF OPEN_P expr_assign . CLOSE_P statment_no_dangle ELSE

    CLOSE_P  shift, and go to state 127


State 106

   28 statment_prefix: FOR OPEN_P declaration_or_assign . END expr_assign END expr_assign CLOSE_P

    END  shift, and go to state 128


State 107

   29 statment_prefix: FOR OPEN_P declaration . IT graph_call CLOSE_P
   72 declaration_or_assign: declaration .
   73                      | declaration . ASSIGN expr_assign

    ASSIGN  shift, and go to state 101
    IT      shift, and go to state 129

    $default  reduce using rule 72 (declaration_or_assign)


State 108

   27 statment_prefix: WHILE OPEN_P expr_assign . CLOSE_P

    CLOSE_P  shift, and go to state 130


State 109

   31 statment_end: READ id_or_access END .

    $default  reduce using rule 31 (statment_end)


State 110

   32 statment_end: WRITE expr_assign END .

    $default  reduce using rule 32 (statment_end)


State 111

   35 statment_end: RETURN expr_assign END .

    $default  reduce using rule 35 (statment_end)


State 112

   30 statment_end: OPEN_BRACE statments CLOSE_BRACE .

    $default  reduce using rule 30 (statment_end)


State 113

   54 factor: OPEN_P expr_assign CLOSE_P .

    $default  reduce using rule 54 (factor)


State 114

   25 dangling_if: IF OPEN_P . expr_assign CLOSE_P statment

    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    ID       shift, and go to state 12
    C_FLOAT  shift, and go to state 30
    C_INT    shift, and go to state 31
    NOT      shift, and go to state 35
    ADD      shift, and go to state 36
    SUB      shift, and go to state 37
    OPEN_P   shift, and go to state 40

    function_call    go to state 41
    expr_assign      go to state 131
    expr_relational  go to state 47
    expr_and         go to state 48
    expr_or          go to state 49
    expr_add         go to state 50
    expr_sub         go to state 51
    expr_mul         go to state 52
    expr_div         go to state 53
    expr_unary       go to state 54
    factor           go to state 55
    unary            go to state 56
    add              go to state 57
    sub              go to state 58
    value            go to state 61
    id_or_access     go to state 62
    id               go to state 63
    number           go to state 64
    number_int       go to state 65
    number_float     go to state 66
    boolean_const    go to state 67


State 115

   38 expr_relational: expr_relational compare_op expr_and .
   40 expr_and: expr_and . and expr_or

    AND  shift, and go to state 88

    $default  reduce using rule 38 (expr_relational)

    and  go to state 89


State 116

   40 expr_and: expr_and and expr_or .
   42 expr_or: expr_or . or expr_add

    OR  shift, and go to state 90

    $default  reduce using rule 40 (expr_and)

    or  go to state 91


State 117

   42 expr_or: expr_or or expr_add .
   44 expr_add: expr_add . add expr_sub

    ADD  shift, and go to state 36

    $default  reduce using rule 42 (expr_or)

    add  go to state 92


State 118

   44 expr_add: expr_add add expr_sub .
   46 expr_sub: expr_sub . sub expr_mul

    SUB  shift, and go to state 37

    $default  reduce using rule 44 (expr_add)

    sub  go to state 93


State 119

   46 expr_sub: expr_sub sub expr_mul .
   48 expr_mul: expr_mul . mul expr_div

    MUL  shift, and go to state 94

    $default  reduce using rule 46 (expr_sub)

    mul  go to state 95


State 120

   48 expr_mul: expr_mul mul expr_div .
   50 expr_div: expr_div . div expr_unary

    DIV  shift, and go to state 96

    $default  reduce using rule 48 (expr_mul)

    div  go to state 97


State 121

   50 expr_div: expr_div div expr_unary .

    $default  reduce using rule 50 (expr_div)


State 122

   73 declaration_or_assign: declaration ASSIGN expr_assign .

    $default  reduce using rule 73 (declaration_or_assign)


State 123

   36 expr_assign: id_or_access ASSIGN expr_relational .
   38 expr_relational: expr_relational . compare_op expr_and

    LE       shift, and go to state 81
    GE       shift, and go to state 82
    LESS     shift, and go to state 83
    GREATER  shift, and go to state 84
    EQ       shift, and go to state 85
    NE       shift, and go to state 86

    $default  reduce using rule 36 (expr_assign)

    compare_op  go to state 87


State 124

    9 function_call: id OPEN_P params_call . CLOSE_P
   11 params_call: params_call . SEPARATOR expr_assign

    SEPARATOR  shift, and go to state 132
    CLOSE_P    shift, and go to state 133


State 125

   12 params_call: expr_assign .

    $default  reduce using rule 12 (params_call)


State 126

   79 id_or_access: id OPEN_BRACKET number_int . CLOSE_BRACKET

    CLOSE_BRACKET  shift, and go to state 134


State 127

   25 dangling_if: IF OPEN_P expr_assign CLOSE_P . statment
   26 statment_prefix: IF OPEN_P expr_assign CLOSE_P . statment_no_dangle ELSE

    error       shift, and go to state 24
    IF          shift, and go to state 25
    FOR         shift, and go to state 26
    WHILE       shift, and go to state 27
    BOOLEAN     shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    GRAPH       shift, and go to state 8
    VOID        shift, and go to state 9
    TRUE        shift, and go to state 28
    FALSE       shift, and go to state 29
    ID          shift, and go to state 12
    C_FLOAT     shift, and go to state 30
    C_INT       shift, and go to state 31
    READ        shift, and go to state 32
    WRITE       shift, and go to state 33
    RETURN      shift, and go to state 34
    NOT         shift, and go to state 35
    ADD         shift, and go to state 36
    SUB         shift, and go to state 37
    OPEN_BRACE  shift, and go to state 38
    OPEN_P      shift, and go to state 40

    function_call          go to state 41
    statment               go to state 135
    statment_no_dangle     go to state 136
    dangling_if            go to state 43
    statment_prefix        go to state 137
    statment_end           go to state 138
    expr_assign            go to state 46
    expr_relational        go to state 47
    expr_and               go to state 48
    expr_or                go to state 49
    expr_add               go to state 50
    expr_sub               go to state 51
    expr_mul               go to state 52
    expr_div               go to state 53
    expr_unary             go to state 54
    factor                 go to state 55
    unary                  go to state 56
    add                    go to state 57
    sub                    go to state 58
    declaration_or_assign  go to state 59
    declaration            go to state 60
    value                  go to state 61
    id_or_access           go to state 62
    id                     go to state 63
    type                   go to state 17
    number                 go to state 64
    number_int             go to state 65
    number_float           go to state 66
    boolean_const          go to state 67


State 128

   28 statment_prefix: FOR OPEN_P declaration_or_assign END . expr_assign END expr_assign CLOSE_P

    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    ID       shift, and go to state 12
    C_FLOAT  shift, and go to state 30
    C_INT    shift, and go to state 31
    NOT      shift, and go to state 35
    ADD      shift, and go to state 36
    SUB      shift, and go to state 37
    OPEN_P   shift, and go to state 40

    function_call    go to state 41
    expr_assign      go to state 139
    expr_relational  go to state 47
    expr_and         go to state 48
    expr_or          go to state 49
    expr_add         go to state 50
    expr_sub         go to state 51
    expr_mul         go to state 52
    expr_div         go to state 53
    expr_unary       go to state 54
    factor           go to state 55
    unary            go to state 56
    add              go to state 57
    sub              go to state 58
    value            go to state 61
    id_or_access     go to state 62
    id               go to state 63
    number           go to state 64
    number_int       go to state 65
    number_float     go to state 66
    boolean_const    go to state 67


State 129

   29 statment_prefix: FOR OPEN_P declaration IT . graph_call CLOSE_P

    DFS  shift, and go to state 140
    BFS  shift, and go to state 141

    graph_call  go to state 142


State 130

   27 statment_prefix: WHILE OPEN_P expr_assign CLOSE_P .

    $default  reduce using rule 27 (statment_prefix)


State 131

   25 dangling_if: IF OPEN_P expr_assign . CLOSE_P statment

    CLOSE_P  shift, and go to state 143


State 132

   11 params_call: params_call SEPARATOR . expr_assign

    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    ID       shift, and go to state 12
    C_FLOAT  shift, and go to state 30
    C_INT    shift, and go to state 31
    NOT      shift, and go to state 35
    ADD      shift, and go to state 36
    SUB      shift, and go to state 37
    OPEN_P   shift, and go to state 40

    function_call    go to state 41
    expr_assign      go to state 144
    expr_relational  go to state 47
    expr_and         go to state 48
    expr_or          go to state 49
    expr_add         go to state 50
    expr_sub         go to state 51
    expr_mul         go to state 52
    expr_div         go to state 53
    expr_unary       go to state 54
    factor           go to state 55
    unary            go to state 56
    add              go to state 57
    sub              go to state 58
    value            go to state 61
    id_or_access     go to state 62
    id               go to state 63
    number           go to state 64
    number_int       go to state 65
    number_float     go to state 66
    boolean_const    go to state 67


State 133

    9 function_call: id OPEN_P params_call CLOSE_P .

    $default  reduce using rule 9 (function_call)


State 134

   79 id_or_access: id OPEN_BRACKET number_int CLOSE_BRACKET .

    $default  reduce using rule 79 (id_or_access)


State 135

   25 dangling_if: IF OPEN_P expr_assign CLOSE_P statment .

    $default  reduce using rule 25 (dangling_if)


State 136

   26 statment_prefix: IF OPEN_P expr_assign CLOSE_P statment_no_dangle . ELSE

    ELSE  shift, and go to state 145


State 137

   18 statment: statment_prefix . statment_end
   19         | statment_prefix . dangling_if
   23 statment_no_dangle: statment_prefix . statment_end

    IF          shift, and go to state 77
    BOOLEAN     shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    GRAPH       shift, and go to state 8
    VOID        shift, and go to state 9
    TRUE        shift, and go to state 28
    FALSE       shift, and go to state 29
    ID          shift, and go to state 12
    C_FLOAT     shift, and go to state 30
    C_INT       shift, and go to state 31
    READ        shift, and go to state 32
    WRITE       shift, and go to state 33
    RETURN      shift, and go to state 34
    NOT         shift, and go to state 35
    ADD         shift, and go to state 36
    SUB         shift, and go to state 37
    OPEN_BRACE  shift, and go to state 38
    OPEN_P      shift, and go to state 40

    function_call          go to state 41
    dangling_if            go to state 78
    statment_end           go to state 146
    expr_assign            go to state 46
    expr_relational        go to state 47
    expr_and               go to state 48
    expr_or                go to state 49
    expr_add               go to state 50
    expr_sub               go to state 51
    expr_mul               go to state 52
    expr_div               go to state 53
    expr_unary             go to state 54
    factor                 go to state 55
    unary                  go to state 56
    add                    go to state 57
    sub                    go to state 58
    declaration_or_assign  go to state 59
    declaration            go to state 60
    value                  go to state 61
    id_or_access           go to state 62
    id                     go to state 63
    type                   go to state 17
    number                 go to state 64
    number_int             go to state 65
    number_float           go to state 66
    boolean_const          go to state 67


State 138

   20 statment: statment_end .
   24 statment_no_dangle: statment_end .

    ELSE      reduce using rule 24 (statment_no_dangle)
    $default  reduce using rule 20 (statment)


State 139

   28 statment_prefix: FOR OPEN_P declaration_or_assign END expr_assign . END expr_assign CLOSE_P

    END  shift, and go to state 147


State 140

   13 graph_call: DFS . graph_params_call

    OPEN_P  shift, and go to state 148

    graph_params_call  go to state 149


State 141

   14 graph_call: BFS . graph_params_call

    OPEN_P  shift, and go to state 148

    graph_params_call  go to state 150


State 142

   29 statment_prefix: FOR OPEN_P declaration IT graph_call . CLOSE_P

    CLOSE_P  shift, and go to state 151


State 143

   25 dangling_if: IF OPEN_P expr_assign CLOSE_P . statment

    error       shift, and go to state 24
    IF          shift, and go to state 25
    FOR         shift, and go to state 26
    WHILE       shift, and go to state 27
    BOOLEAN     shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    GRAPH       shift, and go to state 8
    VOID        shift, and go to state 9
    TRUE        shift, and go to state 28
    FALSE       shift, and go to state 29
    ID          shift, and go to state 12
    C_FLOAT     shift, and go to state 30
    C_INT       shift, and go to state 31
    READ        shift, and go to state 32
    WRITE       shift, and go to state 33
    RETURN      shift, and go to state 34
    NOT         shift, and go to state 35
    ADD         shift, and go to state 36
    SUB         shift, and go to state 37
    OPEN_BRACE  shift, and go to state 38
    OPEN_P      shift, and go to state 40

    function_call          go to state 41
    statment               go to state 135
    dangling_if            go to state 43
    statment_prefix        go to state 44
    statment_end           go to state 45
    expr_assign            go to state 46
    expr_relational        go to state 47
    expr_and               go to state 48
    expr_or                go to state 49
    expr_add               go to state 50
    expr_sub               go to state 51
    expr_mul               go to state 52
    expr_div               go to state 53
    expr_unary             go to state 54
    factor                 go to state 55
    unary                  go to state 56
    add                    go to state 57
    sub                    go to state 58
    declaration_or_assign  go to state 59
    declaration            go to state 60
    value                  go to state 61
    id_or_access           go to state 62
    id                     go to state 63
    type                   go to state 17
    number                 go to state 64
    number_int             go to state 65
    number_float           go to state 66
    boolean_const          go to state 67


State 144

   11 params_call: params_call SEPARATOR expr_assign .

    $default  reduce using rule 11 (params_call)


State 145

   26 statment_prefix: IF OPEN_P expr_assign CLOSE_P statment_no_dangle ELSE .

    $default  reduce using rule 26 (statment_prefix)


State 146

   18 statment: statment_prefix statment_end .
   23 statment_no_dangle: statment_prefix statment_end .

    ELSE      reduce using rule 23 (statment_no_dangle)
    $default  reduce using rule 18 (statment)


State 147

   28 statment_prefix: FOR OPEN_P declaration_or_assign END expr_assign END . expr_assign CLOSE_P

    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    ID       shift, and go to state 12
    C_FLOAT  shift, and go to state 30
    C_INT    shift, and go to state 31
    NOT      shift, and go to state 35
    ADD      shift, and go to state 36
    SUB      shift, and go to state 37
    OPEN_P   shift, and go to state 40

    function_call    go to state 41
    expr_assign      go to state 152
    expr_relational  go to state 47
    expr_and         go to state 48
    expr_or          go to state 49
    expr_add         go to state 50
    expr_sub         go to state 51
    expr_mul         go to state 52
    expr_div         go to state 53
    expr_unary       go to state 54
    factor           go to state 55
    unary            go to state 56
    add              go to state 57
    sub              go to state 58
    value            go to state 61
    id_or_access     go to state 62
    id               go to state 63
    number           go to state 64
    number_int       go to state 65
    number_float     go to state 66
    boolean_const    go to state 67


State 148

   15 graph_params_call: OPEN_P . id SEPARATOR expr_assign SEPARATOR expr_assign CLOSE_P

    ID  shift, and go to state 12

    id  go to state 153


State 149

   13 graph_call: DFS graph_params_call .

    $default  reduce using rule 13 (graph_call)


State 150

   14 graph_call: BFS graph_params_call .

    $default  reduce using rule 14 (graph_call)


State 151

   29 statment_prefix: FOR OPEN_P declaration IT graph_call CLOSE_P .

    $default  reduce using rule 29 (statment_prefix)


State 152

   28 statment_prefix: FOR OPEN_P declaration_or_assign END expr_assign END expr_assign . CLOSE_P

    CLOSE_P  shift, and go to state 154


State 153

   15 graph_params_call: OPEN_P id . SEPARATOR expr_assign SEPARATOR expr_assign CLOSE_P

    SEPARATOR  shift, and go to state 155


State 154

   28 statment_prefix: FOR OPEN_P declaration_or_assign END expr_assign END expr_assign CLOSE_P .

    $default  reduce using rule 28 (statment_prefix)


State 155

   15 graph_params_call: OPEN_P id SEPARATOR . expr_assign SEPARATOR expr_assign CLOSE_P

    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    ID       shift, and go to state 12
    C_FLOAT  shift, and go to state 30
    C_INT    shift, and go to state 31
    NOT      shift, and go to state 35
    ADD      shift, and go to state 36
    SUB      shift, and go to state 37
    OPEN_P   shift, and go to state 40

    function_call    go to state 41
    expr_assign      go to state 156
    expr_relational  go to state 47
    expr_and         go to state 48
    expr_or          go to state 49
    expr_add         go to state 50
    expr_sub         go to state 51
    expr_mul         go to state 52
    expr_div         go to state 53
    expr_unary       go to state 54
    factor           go to state 55
    unary            go to state 56
    add              go to state 57
    sub              go to state 58
    value            go to state 61
    id_or_access     go to state 62
    id               go to state 63
    number           go to state 64
    number_int       go to state 65
    number_float     go to state 66
    boolean_const    go to state 67


State 156

   15 graph_params_call: OPEN_P id SEPARATOR expr_assign . SEPARATOR expr_assign CLOSE_P

    SEPARATOR  shift, and go to state 157


State 157

   15 graph_params_call: OPEN_P id SEPARATOR expr_assign SEPARATOR . expr_assign CLOSE_P

    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    ID       shift, and go to state 12
    C_FLOAT  shift, and go to state 30
    C_INT    shift, and go to state 31
    NOT      shift, and go to state 35
    ADD      shift, and go to state 36
    SUB      shift, and go to state 37
    OPEN_P   shift, and go to state 40

    function_call    go to state 41
    expr_assign      go to state 158
    expr_relational  go to state 47
    expr_and         go to state 48
    expr_or          go to state 49
    expr_add         go to state 50
    expr_sub         go to state 51
    expr_mul         go to state 52
    expr_div         go to state 53
    expr_unary       go to state 54
    factor           go to state 55
    unary            go to state 56
    add              go to state 57
    sub              go to state 58
    value            go to state 61
    id_or_access     go to state 62
    id               go to state 63
    number           go to state 64
    number_int       go to state 65
    number_float     go to state 66
    boolean_const    go to state 67


State 158

   15 graph_params_call: OPEN_P id SEPARATOR expr_assign SEPARATOR expr_assign . CLOSE_P

    CLOSE_P  shift, and go to state 159


State 159

   15 graph_params_call: OPEN_P id SEPARATOR expr_assign SEPARATOR expr_assign CLOSE_P .

    $default  reduce using rule 15 (graph_params_call)
