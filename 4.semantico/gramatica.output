Terminals unused in grammar

   TO


Grammar

    0 $accept: init $end

    1 init: program

    2 program: %empty
    3        | program function

    4 $@1: %empty

    5 $@2: %empty

    6 function: type size_specifier id $@1 OPEN_P params CLOSE_P $@2 OPEN_BRACE statements CLOSE_BRACE
    7         | error

    8 params: %empty
    9       | params SEPARATOR declaration
   10       | declaration

   11 function_call: id OPEN_P params_call CLOSE_P

   12 params_call: %empty
   13            | params_call SEPARATOR expr_assign
   14            | expr_assign

   15 graph_call: DFS graph_params_call
   16           | BFS graph_params_call

   17 graph_params_call: OPEN_P id_or_access SEPARATOR expr_assign SEPARATOR expr_assign CLOSE_P

   18 statements: %empty
   19           | statements statement

   20 statement: statement_prefix statement_end
   21          | statement_prefix dangling_if
   22          | statement_end
   23          | dangling_if
   24          | error

   25 statement_no_dangle: statement_prefix statement_end
   26                    | statement_end

   27 dangling_if: IF OPEN_P expr_assign CLOSE_P statement

   28 statement_prefix: IF OPEN_P expr_assign CLOSE_P statement_no_dangle ELSE
   29                 | WHILE OPEN_P expr_assign CLOSE_P
   30                 | FOR OPEN_P expr_assign END expr_assign END expr_assign CLOSE_P
   31                 | FOR OPEN_P id_or_access IT graph_call CLOSE_P

   32 $@3: %empty

   33 block: OPEN_BRACE $@3 statements CLOSE_BRACE

   34 statement_end: block
   35              | READ id_or_access END
   36              | WRITE expr_assign END
   37              | declaration_or_assign END
   38              | expr_assign END
   39              | graph_add END
   40              | RETURN expr_assign END

   41 expr_assign: expr_relational ASSIGN expr_assign
   42            | expr_relational

   43 expr_relational: expr_and compare_op expr_relational
   44                | expr_and

   45 expr_and: expr_or and expr_and
   46         | expr_or

   47 expr_or: expr_add or expr_or
   48        | expr_add

   49 expr_add: expr_sub add expr_add
   50         | expr_sub

   51 expr_sub: expr_mul sub expr_sub
   52         | expr_mul

   53 expr_mul: expr_div mul expr_mul
   54         | expr_div

   55 expr_div: expr_unary div expr_div
   56         | expr_unary

   57 expr_unary: unary factor
   58           | factor

   59 factor: OPEN_P expr_assign CLOSE_P
   60       | value
   61       | function_call

   62 unary: NOT
   63      | add
   64      | sub

   65 and: AND

   66 or: OR

   67 add: ADD

   68 sub: SUB

   69 mul: MUL

   70 div: DIV

   71 compare_op: LE
   72           | GE
   73           | LESS
   74           | GREATER
   75           | EQ
   76           | NE

   77 graph_add: ADDA OPEN_P id_or_access CLOSE_P
   78          | ADDV OPEN_P id_or_access SEPARATOR expr_assign SEPARATOR expr_assign CLOSE_P

   79 declaration_or_assign: declaration
   80                      | declaration ASSIGN expr_assign

   81 declaration: type size_specifier id

   82 size_specifier: %empty
   83               | OPEN_BRACKET number_int CLOSE_BRACKET

   84 value: id_or_access
   85      | number
   86      | boolean_const

   87 id_or_access: id size_specifier

   88 id: ID

   89 type: INT
   90     | BOOLEAN
   91     | FLOAT
   92     | GRAPH
   93     | VOID

   94 number: number_int
   95       | number_float

   96 number_int: C_INT

   97 number_float: C_FLOAT

   98 boolean_const: TRUE
   99              | FALSE


Terminals, with rules where they appear

$end (0) 0
error (256) 7 24
IF (258) 27 28
ELSE (259) 28
FOR (260) 30 31
WHILE (261) 29
BOOLEAN (262) 90
INT (263) 89
FLOAT (264) 91
GRAPH (265) 92
VOID (266) 93
TO (267)
TRUE (268) 98
FALSE (269) 99
ID (270) 88
C_FLOAT (271) 97
C_INT (272) 96
READ (273) 35
WRITE (274) 36
DFS (275) 15
BFS (276) 16
ADDA (277) 77
ADDV (278) 78
RETURN (279) 40
AND (280) 65
OR (281) 66
LE (282) 71
GE (283) 72
LESS (284) 73
GREATER (285) 74
EQ (286) 75
NE (287) 76
NOT (288) 62
MUL (289) 69
DIV (290) 70
ADD (291) 67
SUB (292) 68
ASSIGN (293) 41 80
END (294) 30 35 36 37 38 39 40
OPEN_BRACE (295) 6 33
CLOSE_BRACE (296) 6 33
IT (297) 31
SEPARATOR (298) 9 13 17 78
OPEN_P (299) 6 11 17 27 28 29 30 31 59 77 78
CLOSE_P (300) 6 11 17 27 28 29 30 31 59 77 78
OPEN_BRACKET (301) 83
CLOSE_BRACKET (302) 83


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
init (49)
    on left: 1, on right: 0
program (50)
    on left: 2 3, on right: 1 3
function (51)
    on left: 6 7, on right: 3
$@1 (52)
    on left: 4, on right: 6
$@2 (53)
    on left: 5, on right: 6
params (54)
    on left: 8 9 10, on right: 6 9
function_call (55)
    on left: 11, on right: 61
params_call (56)
    on left: 12 13 14, on right: 11 13
graph_call (57)
    on left: 15 16, on right: 31
graph_params_call (58)
    on left: 17, on right: 15 16
statements (59)
    on left: 18 19, on right: 6 19 33
statement (60)
    on left: 20 21 22 23 24, on right: 19 27
statement_no_dangle (61)
    on left: 25 26, on right: 28
dangling_if (62)
    on left: 27, on right: 21 23
statement_prefix (63)
    on left: 28 29 30 31, on right: 20 21 25
block (64)
    on left: 33, on right: 34
$@3 (65)
    on left: 32, on right: 33
statement_end (66)
    on left: 34 35 36 37 38 39 40, on right: 20 22 25 26
expr_assign (67)
    on left: 41 42, on right: 13 14 17 27 28 29 30 36 38 40 41 59 78
    80
expr_relational (68)
    on left: 43 44, on right: 41 42 43
expr_and (69)
    on left: 45 46, on right: 43 44 45
expr_or (70)
    on left: 47 48, on right: 45 46 47
expr_add (71)
    on left: 49 50, on right: 47 48 49
expr_sub (72)
    on left: 51 52, on right: 49 50 51
expr_mul (73)
    on left: 53 54, on right: 51 52 53
expr_div (74)
    on left: 55 56, on right: 53 54 55
expr_unary (75)
    on left: 57 58, on right: 55 56
factor (76)
    on left: 59 60 61, on right: 57 58
unary (77)
    on left: 62 63 64, on right: 57
and (78)
    on left: 65, on right: 45
or (79)
    on left: 66, on right: 47
add (80)
    on left: 67, on right: 49 63
sub (81)
    on left: 68, on right: 51 64
mul (82)
    on left: 69, on right: 53
div (83)
    on left: 70, on right: 55
compare_op (84)
    on left: 71 72 73 74 75 76, on right: 43
graph_add (85)
    on left: 77 78, on right: 39
declaration_or_assign (86)
    on left: 79 80, on right: 37
declaration (87)
    on left: 81, on right: 9 10 79 80
size_specifier (88)
    on left: 82 83, on right: 6 81 87
value (89)
    on left: 84 85 86, on right: 60
id_or_access (90)
    on left: 87, on right: 17 31 35 77 78 84
id (91)
    on left: 88, on right: 6 11 81 87
type (92)
    on left: 89 90 91 92 93, on right: 6 81
number (93)
    on left: 94 95, on right: 85
number_int (94)
    on left: 96, on right: 83 94
number_float (95)
    on left: 97, on right: 95
boolean_const (96)
    on left: 98 99, on right: 86


State 0

    0 $accept: . init $end

    $default  reduce using rule 2 (program)

    init     go to state 1
    program  go to state 2


State 1

    0 $accept: init . $end

    $end  shift, and go to state 3


State 2

    1 init: program .
    3 program: program . function

    error    shift, and go to state 4
    BOOLEAN  shift, and go to state 5
    INT      shift, and go to state 6
    FLOAT    shift, and go to state 7
    GRAPH    shift, and go to state 8
    VOID     shift, and go to state 9

    $end  reduce using rule 1 (init)

    function  go to state 10
    type      go to state 11


State 3

    0 $accept: init $end .

    $default  accept


State 4

    7 function: error .

    $default  reduce using rule 7 (function)


State 5

   90 type: BOOLEAN .

    $default  reduce using rule 90 (type)


State 6

   89 type: INT .

    $default  reduce using rule 89 (type)


State 7

   91 type: FLOAT .

    $default  reduce using rule 91 (type)


State 8

   92 type: GRAPH .

    $default  reduce using rule 92 (type)


State 9

   93 type: VOID .

    $default  reduce using rule 93 (type)


State 10

    3 program: program function .

    $default  reduce using rule 3 (program)


State 11

    6 function: type . size_specifier id $@1 OPEN_P params CLOSE_P $@2 OPEN_BRACE statements CLOSE_BRACE

    OPEN_BRACKET  shift, and go to state 12

    $default  reduce using rule 82 (size_specifier)

    size_specifier  go to state 13


State 12

   83 size_specifier: OPEN_BRACKET . number_int CLOSE_BRACKET

    C_INT  shift, and go to state 14

    number_int  go to state 15


State 13

    6 function: type size_specifier . id $@1 OPEN_P params CLOSE_P $@2 OPEN_BRACE statements CLOSE_BRACE

    ID  shift, and go to state 16

    id  go to state 17


State 14

   96 number_int: C_INT .

    $default  reduce using rule 96 (number_int)


State 15

   83 size_specifier: OPEN_BRACKET number_int . CLOSE_BRACKET

    CLOSE_BRACKET  shift, and go to state 18


State 16

   88 id: ID .

    $default  reduce using rule 88 (id)


State 17

    6 function: type size_specifier id . $@1 OPEN_P params CLOSE_P $@2 OPEN_BRACE statements CLOSE_BRACE

    $default  reduce using rule 4 ($@1)

    $@1  go to state 19


State 18

   83 size_specifier: OPEN_BRACKET number_int CLOSE_BRACKET .

    $default  reduce using rule 83 (size_specifier)


State 19

    6 function: type size_specifier id $@1 . OPEN_P params CLOSE_P $@2 OPEN_BRACE statements CLOSE_BRACE

    OPEN_P  shift, and go to state 20


State 20

    6 function: type size_specifier id $@1 OPEN_P . params CLOSE_P $@2 OPEN_BRACE statements CLOSE_BRACE

    BOOLEAN  shift, and go to state 5
    INT      shift, and go to state 6
    FLOAT    shift, and go to state 7
    GRAPH    shift, and go to state 8
    VOID     shift, and go to state 9

    $default  reduce using rule 8 (params)

    params       go to state 21
    declaration  go to state 22
    type         go to state 23


State 21

    6 function: type size_specifier id $@1 OPEN_P params . CLOSE_P $@2 OPEN_BRACE statements CLOSE_BRACE
    9 params: params . SEPARATOR declaration

    SEPARATOR  shift, and go to state 24
    CLOSE_P    shift, and go to state 25


State 22

   10 params: declaration .

    $default  reduce using rule 10 (params)


State 23

   81 declaration: type . size_specifier id

    OPEN_BRACKET  shift, and go to state 12

    $default  reduce using rule 82 (size_specifier)

    size_specifier  go to state 26


State 24

    9 params: params SEPARATOR . declaration

    BOOLEAN  shift, and go to state 5
    INT      shift, and go to state 6
    FLOAT    shift, and go to state 7
    GRAPH    shift, and go to state 8
    VOID     shift, and go to state 9

    declaration  go to state 27
    type         go to state 23


State 25

    6 function: type size_specifier id $@1 OPEN_P params CLOSE_P . $@2 OPEN_BRACE statements CLOSE_BRACE

    $default  reduce using rule 5 ($@2)

    $@2  go to state 28


State 26

   81 declaration: type size_specifier . id

    ID  shift, and go to state 16

    id  go to state 29


State 27

    9 params: params SEPARATOR declaration .

    $default  reduce using rule 9 (params)


State 28

    6 function: type size_specifier id $@1 OPEN_P params CLOSE_P $@2 . OPEN_BRACE statements CLOSE_BRACE

    OPEN_BRACE  shift, and go to state 30


State 29

   81 declaration: type size_specifier id .

    $default  reduce using rule 81 (declaration)


State 30

    6 function: type size_specifier id $@1 OPEN_P params CLOSE_P $@2 OPEN_BRACE . statements CLOSE_BRACE

    $default  reduce using rule 18 (statements)

    statements  go to state 31


State 31

    6 function: type size_specifier id $@1 OPEN_P params CLOSE_P $@2 OPEN_BRACE statements . CLOSE_BRACE
   19 statements: statements . statement

    error        shift, and go to state 32
    IF           shift, and go to state 33
    FOR          shift, and go to state 34
    WHILE        shift, and go to state 35
    BOOLEAN      shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    GRAPH        shift, and go to state 8
    VOID         shift, and go to state 9
    TRUE         shift, and go to state 36
    FALSE        shift, and go to state 37
    ID           shift, and go to state 16
    C_FLOAT      shift, and go to state 38
    C_INT        shift, and go to state 14
    READ         shift, and go to state 39
    WRITE        shift, and go to state 40
    ADDA         shift, and go to state 41
    ADDV         shift, and go to state 42
    RETURN       shift, and go to state 43
    NOT          shift, and go to state 44
    ADD          shift, and go to state 45
    SUB          shift, and go to state 46
    OPEN_BRACE   shift, and go to state 47
    CLOSE_BRACE  shift, and go to state 48
    OPEN_P       shift, and go to state 49

    function_call          go to state 50
    statement              go to state 51
    dangling_if            go to state 52
    statement_prefix       go to state 53
    block                  go to state 54
    statement_end          go to state 55
    expr_assign            go to state 56
    expr_relational        go to state 57
    expr_and               go to state 58
    expr_or                go to state 59
    expr_add               go to state 60
    expr_sub               go to state 61
    expr_mul               go to state 62
    expr_div               go to state 63
    expr_unary             go to state 64
    factor                 go to state 65
    unary                  go to state 66
    add                    go to state 67
    sub                    go to state 68
    graph_add              go to state 69
    declaration_or_assign  go to state 70
    declaration            go to state 71
    value                  go to state 72
    id_or_access           go to state 73
    id                     go to state 74
    type                   go to state 23
    number                 go to state 75
    number_int             go to state 76
    number_float           go to state 77
    boolean_const          go to state 78


State 32

   24 statement: error .

    $default  reduce using rule 24 (statement)


State 33

   27 dangling_if: IF . OPEN_P expr_assign CLOSE_P statement
   28 statement_prefix: IF . OPEN_P expr_assign CLOSE_P statement_no_dangle ELSE

    OPEN_P  shift, and go to state 79


State 34

   30 statement_prefix: FOR . OPEN_P expr_assign END expr_assign END expr_assign CLOSE_P
   31                 | FOR . OPEN_P id_or_access IT graph_call CLOSE_P

    OPEN_P  shift, and go to state 80


State 35

   29 statement_prefix: WHILE . OPEN_P expr_assign CLOSE_P

    OPEN_P  shift, and go to state 81


State 36

   98 boolean_const: TRUE .

    $default  reduce using rule 98 (boolean_const)


State 37

   99 boolean_const: FALSE .

    $default  reduce using rule 99 (boolean_const)


State 38

   97 number_float: C_FLOAT .

    $default  reduce using rule 97 (number_float)


State 39

   35 statement_end: READ . id_or_access END

    ID  shift, and go to state 16

    id_or_access  go to state 82
    id            go to state 83


State 40

   36 statement_end: WRITE . expr_assign END

    TRUE     shift, and go to state 36
    FALSE    shift, and go to state 37
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 38
    C_INT    shift, and go to state 14
    NOT      shift, and go to state 44
    ADD      shift, and go to state 45
    SUB      shift, and go to state 46
    OPEN_P   shift, and go to state 49

    function_call    go to state 50
    expr_assign      go to state 84
    expr_relational  go to state 57
    expr_and         go to state 58
    expr_or          go to state 59
    expr_add         go to state 60
    expr_sub         go to state 61
    expr_mul         go to state 62
    expr_div         go to state 63
    expr_unary       go to state 64
    factor           go to state 65
    unary            go to state 66
    add              go to state 67
    sub              go to state 68
    value            go to state 72
    id_or_access     go to state 73
    id               go to state 74
    number           go to state 75
    number_int       go to state 76
    number_float     go to state 77
    boolean_const    go to state 78


State 41

   77 graph_add: ADDA . OPEN_P id_or_access CLOSE_P

    OPEN_P  shift, and go to state 85


State 42

   78 graph_add: ADDV . OPEN_P id_or_access SEPARATOR expr_assign SEPARATOR expr_assign CLOSE_P

    OPEN_P  shift, and go to state 86


State 43

   40 statement_end: RETURN . expr_assign END

    TRUE     shift, and go to state 36
    FALSE    shift, and go to state 37
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 38
    C_INT    shift, and go to state 14
    NOT      shift, and go to state 44
    ADD      shift, and go to state 45
    SUB      shift, and go to state 46
    OPEN_P   shift, and go to state 49

    function_call    go to state 50
    expr_assign      go to state 87
    expr_relational  go to state 57
    expr_and         go to state 58
    expr_or          go to state 59
    expr_add         go to state 60
    expr_sub         go to state 61
    expr_mul         go to state 62
    expr_div         go to state 63
    expr_unary       go to state 64
    factor           go to state 65
    unary            go to state 66
    add              go to state 67
    sub              go to state 68
    value            go to state 72
    id_or_access     go to state 73
    id               go to state 74
    number           go to state 75
    number_int       go to state 76
    number_float     go to state 77
    boolean_const    go to state 78


State 44

   62 unary: NOT .

    $default  reduce using rule 62 (unary)


State 45

   67 add: ADD .

    $default  reduce using rule 67 (add)


State 46

   68 sub: SUB .

    $default  reduce using rule 68 (sub)


State 47

   33 block: OPEN_BRACE . $@3 statements CLOSE_BRACE

    $default  reduce using rule 32 ($@3)

    $@3  go to state 88


State 48

    6 function: type size_specifier id $@1 OPEN_P params CLOSE_P $@2 OPEN_BRACE statements CLOSE_BRACE .

    $default  reduce using rule 6 (function)


State 49

   59 factor: OPEN_P . expr_assign CLOSE_P

    TRUE     shift, and go to state 36
    FALSE    shift, and go to state 37
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 38
    C_INT    shift, and go to state 14
    NOT      shift, and go to state 44
    ADD      shift, and go to state 45
    SUB      shift, and go to state 46
    OPEN_P   shift, and go to state 49

    function_call    go to state 50
    expr_assign      go to state 89
    expr_relational  go to state 57
    expr_and         go to state 58
    expr_or          go to state 59
    expr_add         go to state 60
    expr_sub         go to state 61
    expr_mul         go to state 62
    expr_div         go to state 63
    expr_unary       go to state 64
    factor           go to state 65
    unary            go to state 66
    add              go to state 67
    sub              go to state 68
    value            go to state 72
    id_or_access     go to state 73
    id               go to state 74
    number           go to state 75
    number_int       go to state 76
    number_float     go to state 77
    boolean_const    go to state 78


State 50

   61 factor: function_call .

    $default  reduce using rule 61 (factor)


State 51

   19 statements: statements statement .

    $default  reduce using rule 19 (statements)


State 52

   23 statement: dangling_if .

    $default  reduce using rule 23 (statement)


State 53

   20 statement: statement_prefix . statement_end
   21          | statement_prefix . dangling_if

    IF          shift, and go to state 90
    BOOLEAN     shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    GRAPH       shift, and go to state 8
    VOID        shift, and go to state 9
    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    ID          shift, and go to state 16
    C_FLOAT     shift, and go to state 38
    C_INT       shift, and go to state 14
    READ        shift, and go to state 39
    WRITE       shift, and go to state 40
    ADDA        shift, and go to state 41
    ADDV        shift, and go to state 42
    RETURN      shift, and go to state 43
    NOT         shift, and go to state 44
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    OPEN_BRACE  shift, and go to state 47
    OPEN_P      shift, and go to state 49

    function_call          go to state 50
    dangling_if            go to state 91
    block                  go to state 54
    statement_end          go to state 92
    expr_assign            go to state 56
    expr_relational        go to state 57
    expr_and               go to state 58
    expr_or                go to state 59
    expr_add               go to state 60
    expr_sub               go to state 61
    expr_mul               go to state 62
    expr_div               go to state 63
    expr_unary             go to state 64
    factor                 go to state 65
    unary                  go to state 66
    add                    go to state 67
    sub                    go to state 68
    graph_add              go to state 69
    declaration_or_assign  go to state 70
    declaration            go to state 71
    value                  go to state 72
    id_or_access           go to state 73
    id                     go to state 74
    type                   go to state 23
    number                 go to state 75
    number_int             go to state 76
    number_float           go to state 77
    boolean_const          go to state 78


State 54

   34 statement_end: block .

    $default  reduce using rule 34 (statement_end)


State 55

   22 statement: statement_end .

    $default  reduce using rule 22 (statement)


State 56

   38 statement_end: expr_assign . END

    END  shift, and go to state 93


State 57

   41 expr_assign: expr_relational . ASSIGN expr_assign
   42            | expr_relational .

    ASSIGN  shift, and go to state 94

    $default  reduce using rule 42 (expr_assign)


State 58

   43 expr_relational: expr_and . compare_op expr_relational
   44                | expr_and .

    LE       shift, and go to state 95
    GE       shift, and go to state 96
    LESS     shift, and go to state 97
    GREATER  shift, and go to state 98
    EQ       shift, and go to state 99
    NE       shift, and go to state 100

    $default  reduce using rule 44 (expr_relational)

    compare_op  go to state 101


State 59

   45 expr_and: expr_or . and expr_and
   46         | expr_or .

    AND  shift, and go to state 102

    $default  reduce using rule 46 (expr_and)

    and  go to state 103


State 60

   47 expr_or: expr_add . or expr_or
   48        | expr_add .

    OR  shift, and go to state 104

    $default  reduce using rule 48 (expr_or)

    or  go to state 105


State 61

   49 expr_add: expr_sub . add expr_add
   50         | expr_sub .

    ADD  shift, and go to state 45

    $default  reduce using rule 50 (expr_add)

    add  go to state 106


State 62

   51 expr_sub: expr_mul . sub expr_sub
   52         | expr_mul .

    SUB  shift, and go to state 46

    $default  reduce using rule 52 (expr_sub)

    sub  go to state 107


State 63

   53 expr_mul: expr_div . mul expr_mul
   54         | expr_div .

    MUL  shift, and go to state 108

    $default  reduce using rule 54 (expr_mul)

    mul  go to state 109


State 64

   55 expr_div: expr_unary . div expr_div
   56         | expr_unary .

    DIV  shift, and go to state 110

    $default  reduce using rule 56 (expr_div)

    div  go to state 111


State 65

   58 expr_unary: factor .

    $default  reduce using rule 58 (expr_unary)


State 66

   57 expr_unary: unary . factor

    TRUE     shift, and go to state 36
    FALSE    shift, and go to state 37
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 38
    C_INT    shift, and go to state 14
    OPEN_P   shift, and go to state 49

    function_call  go to state 50
    factor         go to state 112
    value          go to state 72
    id_or_access   go to state 73
    id             go to state 74
    number         go to state 75
    number_int     go to state 76
    number_float   go to state 77
    boolean_const  go to state 78


State 67

   63 unary: add .

    $default  reduce using rule 63 (unary)


State 68

   64 unary: sub .

    $default  reduce using rule 64 (unary)


State 69

   39 statement_end: graph_add . END

    END  shift, and go to state 113


State 70

   37 statement_end: declaration_or_assign . END

    END  shift, and go to state 114


State 71

   79 declaration_or_assign: declaration .
   80                      | declaration . ASSIGN expr_assign

    ASSIGN  shift, and go to state 115

    $default  reduce using rule 79 (declaration_or_assign)


State 72

   60 factor: value .

    $default  reduce using rule 60 (factor)


State 73

   84 value: id_or_access .

    $default  reduce using rule 84 (value)


State 74

   11 function_call: id . OPEN_P params_call CLOSE_P
   87 id_or_access: id . size_specifier

    OPEN_P        shift, and go to state 116
    OPEN_BRACKET  shift, and go to state 12

    $default  reduce using rule 82 (size_specifier)

    size_specifier  go to state 117


State 75

   85 value: number .

    $default  reduce using rule 85 (value)


State 76

   94 number: number_int .

    $default  reduce using rule 94 (number)


State 77

   95 number: number_float .

    $default  reduce using rule 95 (number)


State 78

   86 value: boolean_const .

    $default  reduce using rule 86 (value)


State 79

   27 dangling_if: IF OPEN_P . expr_assign CLOSE_P statement
   28 statement_prefix: IF OPEN_P . expr_assign CLOSE_P statement_no_dangle ELSE

    TRUE     shift, and go to state 36
    FALSE    shift, and go to state 37
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 38
    C_INT    shift, and go to state 14
    NOT      shift, and go to state 44
    ADD      shift, and go to state 45
    SUB      shift, and go to state 46
    OPEN_P   shift, and go to state 49

    function_call    go to state 50
    expr_assign      go to state 118
    expr_relational  go to state 57
    expr_and         go to state 58
    expr_or          go to state 59
    expr_add         go to state 60
    expr_sub         go to state 61
    expr_mul         go to state 62
    expr_div         go to state 63
    expr_unary       go to state 64
    factor           go to state 65
    unary            go to state 66
    add              go to state 67
    sub              go to state 68
    value            go to state 72
    id_or_access     go to state 73
    id               go to state 74
    number           go to state 75
    number_int       go to state 76
    number_float     go to state 77
    boolean_const    go to state 78


State 80

   30 statement_prefix: FOR OPEN_P . expr_assign END expr_assign END expr_assign CLOSE_P
   31                 | FOR OPEN_P . id_or_access IT graph_call CLOSE_P

    TRUE     shift, and go to state 36
    FALSE    shift, and go to state 37
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 38
    C_INT    shift, and go to state 14
    NOT      shift, and go to state 44
    ADD      shift, and go to state 45
    SUB      shift, and go to state 46
    OPEN_P   shift, and go to state 49

    function_call    go to state 50
    expr_assign      go to state 119
    expr_relational  go to state 57
    expr_and         go to state 58
    expr_or          go to state 59
    expr_add         go to state 60
    expr_sub         go to state 61
    expr_mul         go to state 62
    expr_div         go to state 63
    expr_unary       go to state 64
    factor           go to state 65
    unary            go to state 66
    add              go to state 67
    sub              go to state 68
    value            go to state 72
    id_or_access     go to state 120
    id               go to state 74
    number           go to state 75
    number_int       go to state 76
    number_float     go to state 77
    boolean_const    go to state 78


State 81

   29 statement_prefix: WHILE OPEN_P . expr_assign CLOSE_P

    TRUE     shift, and go to state 36
    FALSE    shift, and go to state 37
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 38
    C_INT    shift, and go to state 14
    NOT      shift, and go to state 44
    ADD      shift, and go to state 45
    SUB      shift, and go to state 46
    OPEN_P   shift, and go to state 49

    function_call    go to state 50
    expr_assign      go to state 121
    expr_relational  go to state 57
    expr_and         go to state 58
    expr_or          go to state 59
    expr_add         go to state 60
    expr_sub         go to state 61
    expr_mul         go to state 62
    expr_div         go to state 63
    expr_unary       go to state 64
    factor           go to state 65
    unary            go to state 66
    add              go to state 67
    sub              go to state 68
    value            go to state 72
    id_or_access     go to state 73
    id               go to state 74
    number           go to state 75
    number_int       go to state 76
    number_float     go to state 77
    boolean_const    go to state 78


State 82

   35 statement_end: READ id_or_access . END

    END  shift, and go to state 122


State 83

   87 id_or_access: id . size_specifier

    OPEN_BRACKET  shift, and go to state 12

    $default  reduce using rule 82 (size_specifier)

    size_specifier  go to state 117


State 84

   36 statement_end: WRITE expr_assign . END

    END  shift, and go to state 123


State 85

   77 graph_add: ADDA OPEN_P . id_or_access CLOSE_P

    ID  shift, and go to state 16

    id_or_access  go to state 124
    id            go to state 83


State 86

   78 graph_add: ADDV OPEN_P . id_or_access SEPARATOR expr_assign SEPARATOR expr_assign CLOSE_P

    ID  shift, and go to state 16

    id_or_access  go to state 125
    id            go to state 83


State 87

   40 statement_end: RETURN expr_assign . END

    END  shift, and go to state 126


State 88

   33 block: OPEN_BRACE $@3 . statements CLOSE_BRACE

    $default  reduce using rule 18 (statements)

    statements  go to state 127


State 89

   59 factor: OPEN_P expr_assign . CLOSE_P

    CLOSE_P  shift, and go to state 128


State 90

   27 dangling_if: IF . OPEN_P expr_assign CLOSE_P statement

    OPEN_P  shift, and go to state 129


State 91

   21 statement: statement_prefix dangling_if .

    $default  reduce using rule 21 (statement)


State 92

   20 statement: statement_prefix statement_end .

    $default  reduce using rule 20 (statement)


State 93

   38 statement_end: expr_assign END .

    $default  reduce using rule 38 (statement_end)


State 94

   41 expr_assign: expr_relational ASSIGN . expr_assign

    TRUE     shift, and go to state 36
    FALSE    shift, and go to state 37
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 38
    C_INT    shift, and go to state 14
    NOT      shift, and go to state 44
    ADD      shift, and go to state 45
    SUB      shift, and go to state 46
    OPEN_P   shift, and go to state 49

    function_call    go to state 50
    expr_assign      go to state 130
    expr_relational  go to state 57
    expr_and         go to state 58
    expr_or          go to state 59
    expr_add         go to state 60
    expr_sub         go to state 61
    expr_mul         go to state 62
    expr_div         go to state 63
    expr_unary       go to state 64
    factor           go to state 65
    unary            go to state 66
    add              go to state 67
    sub              go to state 68
    value            go to state 72
    id_or_access     go to state 73
    id               go to state 74
    number           go to state 75
    number_int       go to state 76
    number_float     go to state 77
    boolean_const    go to state 78


State 95

   71 compare_op: LE .

    $default  reduce using rule 71 (compare_op)


State 96

   72 compare_op: GE .

    $default  reduce using rule 72 (compare_op)


State 97

   73 compare_op: LESS .

    $default  reduce using rule 73 (compare_op)


State 98

   74 compare_op: GREATER .

    $default  reduce using rule 74 (compare_op)


State 99

   75 compare_op: EQ .

    $default  reduce using rule 75 (compare_op)


State 100

   76 compare_op: NE .

    $default  reduce using rule 76 (compare_op)


State 101

   43 expr_relational: expr_and compare_op . expr_relational

    TRUE     shift, and go to state 36
    FALSE    shift, and go to state 37
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 38
    C_INT    shift, and go to state 14
    NOT      shift, and go to state 44
    ADD      shift, and go to state 45
    SUB      shift, and go to state 46
    OPEN_P   shift, and go to state 49

    function_call    go to state 50
    expr_relational  go to state 131
    expr_and         go to state 58
    expr_or          go to state 59
    expr_add         go to state 60
    expr_sub         go to state 61
    expr_mul         go to state 62
    expr_div         go to state 63
    expr_unary       go to state 64
    factor           go to state 65
    unary            go to state 66
    add              go to state 67
    sub              go to state 68
    value            go to state 72
    id_or_access     go to state 73
    id               go to state 74
    number           go to state 75
    number_int       go to state 76
    number_float     go to state 77
    boolean_const    go to state 78


State 102

   65 and: AND .

    $default  reduce using rule 65 (and)


State 103

   45 expr_and: expr_or and . expr_and

    TRUE     shift, and go to state 36
    FALSE    shift, and go to state 37
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 38
    C_INT    shift, and go to state 14
    NOT      shift, and go to state 44
    ADD      shift, and go to state 45
    SUB      shift, and go to state 46
    OPEN_P   shift, and go to state 49

    function_call  go to state 50
    expr_and       go to state 132
    expr_or        go to state 59
    expr_add       go to state 60
    expr_sub       go to state 61
    expr_mul       go to state 62
    expr_div       go to state 63
    expr_unary     go to state 64
    factor         go to state 65
    unary          go to state 66
    add            go to state 67
    sub            go to state 68
    value          go to state 72
    id_or_access   go to state 73
    id             go to state 74
    number         go to state 75
    number_int     go to state 76
    number_float   go to state 77
    boolean_const  go to state 78


State 104

   66 or: OR .

    $default  reduce using rule 66 (or)


State 105

   47 expr_or: expr_add or . expr_or

    TRUE     shift, and go to state 36
    FALSE    shift, and go to state 37
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 38
    C_INT    shift, and go to state 14
    NOT      shift, and go to state 44
    ADD      shift, and go to state 45
    SUB      shift, and go to state 46
    OPEN_P   shift, and go to state 49

    function_call  go to state 50
    expr_or        go to state 133
    expr_add       go to state 60
    expr_sub       go to state 61
    expr_mul       go to state 62
    expr_div       go to state 63
    expr_unary     go to state 64
    factor         go to state 65
    unary          go to state 66
    add            go to state 67
    sub            go to state 68
    value          go to state 72
    id_or_access   go to state 73
    id             go to state 74
    number         go to state 75
    number_int     go to state 76
    number_float   go to state 77
    boolean_const  go to state 78


State 106

   49 expr_add: expr_sub add . expr_add

    TRUE     shift, and go to state 36
    FALSE    shift, and go to state 37
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 38
    C_INT    shift, and go to state 14
    NOT      shift, and go to state 44
    ADD      shift, and go to state 45
    SUB      shift, and go to state 46
    OPEN_P   shift, and go to state 49

    function_call  go to state 50
    expr_add       go to state 134
    expr_sub       go to state 61
    expr_mul       go to state 62
    expr_div       go to state 63
    expr_unary     go to state 64
    factor         go to state 65
    unary          go to state 66
    add            go to state 67
    sub            go to state 68
    value          go to state 72
    id_or_access   go to state 73
    id             go to state 74
    number         go to state 75
    number_int     go to state 76
    number_float   go to state 77
    boolean_const  go to state 78


State 107

   51 expr_sub: expr_mul sub . expr_sub

    TRUE     shift, and go to state 36
    FALSE    shift, and go to state 37
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 38
    C_INT    shift, and go to state 14
    NOT      shift, and go to state 44
    ADD      shift, and go to state 45
    SUB      shift, and go to state 46
    OPEN_P   shift, and go to state 49

    function_call  go to state 50
    expr_sub       go to state 135
    expr_mul       go to state 62
    expr_div       go to state 63
    expr_unary     go to state 64
    factor         go to state 65
    unary          go to state 66
    add            go to state 67
    sub            go to state 68
    value          go to state 72
    id_or_access   go to state 73
    id             go to state 74
    number         go to state 75
    number_int     go to state 76
    number_float   go to state 77
    boolean_const  go to state 78


State 108

   69 mul: MUL .

    $default  reduce using rule 69 (mul)


State 109

   53 expr_mul: expr_div mul . expr_mul

    TRUE     shift, and go to state 36
    FALSE    shift, and go to state 37
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 38
    C_INT    shift, and go to state 14
    NOT      shift, and go to state 44
    ADD      shift, and go to state 45
    SUB      shift, and go to state 46
    OPEN_P   shift, and go to state 49

    function_call  go to state 50
    expr_mul       go to state 136
    expr_div       go to state 63
    expr_unary     go to state 64
    factor         go to state 65
    unary          go to state 66
    add            go to state 67
    sub            go to state 68
    value          go to state 72
    id_or_access   go to state 73
    id             go to state 74
    number         go to state 75
    number_int     go to state 76
    number_float   go to state 77
    boolean_const  go to state 78


State 110

   70 div: DIV .

    $default  reduce using rule 70 (div)


State 111

   55 expr_div: expr_unary div . expr_div

    TRUE     shift, and go to state 36
    FALSE    shift, and go to state 37
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 38
    C_INT    shift, and go to state 14
    NOT      shift, and go to state 44
    ADD      shift, and go to state 45
    SUB      shift, and go to state 46
    OPEN_P   shift, and go to state 49

    function_call  go to state 50
    expr_div       go to state 137
    expr_unary     go to state 64
    factor         go to state 65
    unary          go to state 66
    add            go to state 67
    sub            go to state 68
    value          go to state 72
    id_or_access   go to state 73
    id             go to state 74
    number         go to state 75
    number_int     go to state 76
    number_float   go to state 77
    boolean_const  go to state 78


State 112

   57 expr_unary: unary factor .

    $default  reduce using rule 57 (expr_unary)


State 113

   39 statement_end: graph_add END .

    $default  reduce using rule 39 (statement_end)


State 114

   37 statement_end: declaration_or_assign END .

    $default  reduce using rule 37 (statement_end)


State 115

   80 declaration_or_assign: declaration ASSIGN . expr_assign

    TRUE     shift, and go to state 36
    FALSE    shift, and go to state 37
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 38
    C_INT    shift, and go to state 14
    NOT      shift, and go to state 44
    ADD      shift, and go to state 45
    SUB      shift, and go to state 46
    OPEN_P   shift, and go to state 49

    function_call    go to state 50
    expr_assign      go to state 138
    expr_relational  go to state 57
    expr_and         go to state 58
    expr_or          go to state 59
    expr_add         go to state 60
    expr_sub         go to state 61
    expr_mul         go to state 62
    expr_div         go to state 63
    expr_unary       go to state 64
    factor           go to state 65
    unary            go to state 66
    add              go to state 67
    sub              go to state 68
    value            go to state 72
    id_or_access     go to state 73
    id               go to state 74
    number           go to state 75
    number_int       go to state 76
    number_float     go to state 77
    boolean_const    go to state 78


State 116

   11 function_call: id OPEN_P . params_call CLOSE_P

    TRUE     shift, and go to state 36
    FALSE    shift, and go to state 37
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 38
    C_INT    shift, and go to state 14
    NOT      shift, and go to state 44
    ADD      shift, and go to state 45
    SUB      shift, and go to state 46
    OPEN_P   shift, and go to state 49

    $default  reduce using rule 12 (params_call)

    function_call    go to state 50
    params_call      go to state 139
    expr_assign      go to state 140
    expr_relational  go to state 57
    expr_and         go to state 58
    expr_or          go to state 59
    expr_add         go to state 60
    expr_sub         go to state 61
    expr_mul         go to state 62
    expr_div         go to state 63
    expr_unary       go to state 64
    factor           go to state 65
    unary            go to state 66
    add              go to state 67
    sub              go to state 68
    value            go to state 72
    id_or_access     go to state 73
    id               go to state 74
    number           go to state 75
    number_int       go to state 76
    number_float     go to state 77
    boolean_const    go to state 78


State 117

   87 id_or_access: id size_specifier .

    $default  reduce using rule 87 (id_or_access)


State 118

   27 dangling_if: IF OPEN_P expr_assign . CLOSE_P statement
   28 statement_prefix: IF OPEN_P expr_assign . CLOSE_P statement_no_dangle ELSE

    CLOSE_P  shift, and go to state 141


State 119

   30 statement_prefix: FOR OPEN_P expr_assign . END expr_assign END expr_assign CLOSE_P

    END  shift, and go to state 142


State 120

   31 statement_prefix: FOR OPEN_P id_or_access . IT graph_call CLOSE_P
   84 value: id_or_access .

    IT  shift, and go to state 143

    $default  reduce using rule 84 (value)


State 121

   29 statement_prefix: WHILE OPEN_P expr_assign . CLOSE_P

    CLOSE_P  shift, and go to state 144


State 122

   35 statement_end: READ id_or_access END .

    $default  reduce using rule 35 (statement_end)


State 123

   36 statement_end: WRITE expr_assign END .

    $default  reduce using rule 36 (statement_end)


State 124

   77 graph_add: ADDA OPEN_P id_or_access . CLOSE_P

    CLOSE_P  shift, and go to state 145


State 125

   78 graph_add: ADDV OPEN_P id_or_access . SEPARATOR expr_assign SEPARATOR expr_assign CLOSE_P

    SEPARATOR  shift, and go to state 146


State 126

   40 statement_end: RETURN expr_assign END .

    $default  reduce using rule 40 (statement_end)


State 127

   19 statements: statements . statement
   33 block: OPEN_BRACE $@3 statements . CLOSE_BRACE

    error        shift, and go to state 32
    IF           shift, and go to state 33
    FOR          shift, and go to state 34
    WHILE        shift, and go to state 35
    BOOLEAN      shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    GRAPH        shift, and go to state 8
    VOID         shift, and go to state 9
    TRUE         shift, and go to state 36
    FALSE        shift, and go to state 37
    ID           shift, and go to state 16
    C_FLOAT      shift, and go to state 38
    C_INT        shift, and go to state 14
    READ         shift, and go to state 39
    WRITE        shift, and go to state 40
    ADDA         shift, and go to state 41
    ADDV         shift, and go to state 42
    RETURN       shift, and go to state 43
    NOT          shift, and go to state 44
    ADD          shift, and go to state 45
    SUB          shift, and go to state 46
    OPEN_BRACE   shift, and go to state 47
    CLOSE_BRACE  shift, and go to state 147
    OPEN_P       shift, and go to state 49

    function_call          go to state 50
    statement              go to state 51
    dangling_if            go to state 52
    statement_prefix       go to state 53
    block                  go to state 54
    statement_end          go to state 55
    expr_assign            go to state 56
    expr_relational        go to state 57
    expr_and               go to state 58
    expr_or                go to state 59
    expr_add               go to state 60
    expr_sub               go to state 61
    expr_mul               go to state 62
    expr_div               go to state 63
    expr_unary             go to state 64
    factor                 go to state 65
    unary                  go to state 66
    add                    go to state 67
    sub                    go to state 68
    graph_add              go to state 69
    declaration_or_assign  go to state 70
    declaration            go to state 71
    value                  go to state 72
    id_or_access           go to state 73
    id                     go to state 74
    type                   go to state 23
    number                 go to state 75
    number_int             go to state 76
    number_float           go to state 77
    boolean_const          go to state 78


State 128

   59 factor: OPEN_P expr_assign CLOSE_P .

    $default  reduce using rule 59 (factor)


State 129

   27 dangling_if: IF OPEN_P . expr_assign CLOSE_P statement

    TRUE     shift, and go to state 36
    FALSE    shift, and go to state 37
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 38
    C_INT    shift, and go to state 14
    NOT      shift, and go to state 44
    ADD      shift, and go to state 45
    SUB      shift, and go to state 46
    OPEN_P   shift, and go to state 49

    function_call    go to state 50
    expr_assign      go to state 148
    expr_relational  go to state 57
    expr_and         go to state 58
    expr_or          go to state 59
    expr_add         go to state 60
    expr_sub         go to state 61
    expr_mul         go to state 62
    expr_div         go to state 63
    expr_unary       go to state 64
    factor           go to state 65
    unary            go to state 66
    add              go to state 67
    sub              go to state 68
    value            go to state 72
    id_or_access     go to state 73
    id               go to state 74
    number           go to state 75
    number_int       go to state 76
    number_float     go to state 77
    boolean_const    go to state 78


State 130

   41 expr_assign: expr_relational ASSIGN expr_assign .

    $default  reduce using rule 41 (expr_assign)


State 131

   43 expr_relational: expr_and compare_op expr_relational .

    $default  reduce using rule 43 (expr_relational)


State 132

   45 expr_and: expr_or and expr_and .

    $default  reduce using rule 45 (expr_and)


State 133

   47 expr_or: expr_add or expr_or .

    $default  reduce using rule 47 (expr_or)


State 134

   49 expr_add: expr_sub add expr_add .

    $default  reduce using rule 49 (expr_add)


State 135

   51 expr_sub: expr_mul sub expr_sub .

    $default  reduce using rule 51 (expr_sub)


State 136

   53 expr_mul: expr_div mul expr_mul .

    $default  reduce using rule 53 (expr_mul)


State 137

   55 expr_div: expr_unary div expr_div .

    $default  reduce using rule 55 (expr_div)


State 138

   80 declaration_or_assign: declaration ASSIGN expr_assign .

    $default  reduce using rule 80 (declaration_or_assign)


State 139

   11 function_call: id OPEN_P params_call . CLOSE_P
   13 params_call: params_call . SEPARATOR expr_assign

    SEPARATOR  shift, and go to state 149
    CLOSE_P    shift, and go to state 150


State 140

   14 params_call: expr_assign .

    $default  reduce using rule 14 (params_call)


State 141

   27 dangling_if: IF OPEN_P expr_assign CLOSE_P . statement
   28 statement_prefix: IF OPEN_P expr_assign CLOSE_P . statement_no_dangle ELSE

    error       shift, and go to state 32
    IF          shift, and go to state 33
    FOR         shift, and go to state 34
    WHILE       shift, and go to state 35
    BOOLEAN     shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    GRAPH       shift, and go to state 8
    VOID        shift, and go to state 9
    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    ID          shift, and go to state 16
    C_FLOAT     shift, and go to state 38
    C_INT       shift, and go to state 14
    READ        shift, and go to state 39
    WRITE       shift, and go to state 40
    ADDA        shift, and go to state 41
    ADDV        shift, and go to state 42
    RETURN      shift, and go to state 43
    NOT         shift, and go to state 44
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    OPEN_BRACE  shift, and go to state 47
    OPEN_P      shift, and go to state 49

    function_call          go to state 50
    statement              go to state 151
    statement_no_dangle    go to state 152
    dangling_if            go to state 52
    statement_prefix       go to state 153
    block                  go to state 54
    statement_end          go to state 154
    expr_assign            go to state 56
    expr_relational        go to state 57
    expr_and               go to state 58
    expr_or                go to state 59
    expr_add               go to state 60
    expr_sub               go to state 61
    expr_mul               go to state 62
    expr_div               go to state 63
    expr_unary             go to state 64
    factor                 go to state 65
    unary                  go to state 66
    add                    go to state 67
    sub                    go to state 68
    graph_add              go to state 69
    declaration_or_assign  go to state 70
    declaration            go to state 71
    value                  go to state 72
    id_or_access           go to state 73
    id                     go to state 74
    type                   go to state 23
    number                 go to state 75
    number_int             go to state 76
    number_float           go to state 77
    boolean_const          go to state 78


State 142

   30 statement_prefix: FOR OPEN_P expr_assign END . expr_assign END expr_assign CLOSE_P

    TRUE     shift, and go to state 36
    FALSE    shift, and go to state 37
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 38
    C_INT    shift, and go to state 14
    NOT      shift, and go to state 44
    ADD      shift, and go to state 45
    SUB      shift, and go to state 46
    OPEN_P   shift, and go to state 49

    function_call    go to state 50
    expr_assign      go to state 155
    expr_relational  go to state 57
    expr_and         go to state 58
    expr_or          go to state 59
    expr_add         go to state 60
    expr_sub         go to state 61
    expr_mul         go to state 62
    expr_div         go to state 63
    expr_unary       go to state 64
    factor           go to state 65
    unary            go to state 66
    add              go to state 67
    sub              go to state 68
    value            go to state 72
    id_or_access     go to state 73
    id               go to state 74
    number           go to state 75
    number_int       go to state 76
    number_float     go to state 77
    boolean_const    go to state 78


State 143

   31 statement_prefix: FOR OPEN_P id_or_access IT . graph_call CLOSE_P

    DFS  shift, and go to state 156
    BFS  shift, and go to state 157

    graph_call  go to state 158


State 144

   29 statement_prefix: WHILE OPEN_P expr_assign CLOSE_P .

    $default  reduce using rule 29 (statement_prefix)


State 145

   77 graph_add: ADDA OPEN_P id_or_access CLOSE_P .

    $default  reduce using rule 77 (graph_add)


State 146

   78 graph_add: ADDV OPEN_P id_or_access SEPARATOR . expr_assign SEPARATOR expr_assign CLOSE_P

    TRUE     shift, and go to state 36
    FALSE    shift, and go to state 37
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 38
    C_INT    shift, and go to state 14
    NOT      shift, and go to state 44
    ADD      shift, and go to state 45
    SUB      shift, and go to state 46
    OPEN_P   shift, and go to state 49

    function_call    go to state 50
    expr_assign      go to state 159
    expr_relational  go to state 57
    expr_and         go to state 58
    expr_or          go to state 59
    expr_add         go to state 60
    expr_sub         go to state 61
    expr_mul         go to state 62
    expr_div         go to state 63
    expr_unary       go to state 64
    factor           go to state 65
    unary            go to state 66
    add              go to state 67
    sub              go to state 68
    value            go to state 72
    id_or_access     go to state 73
    id               go to state 74
    number           go to state 75
    number_int       go to state 76
    number_float     go to state 77
    boolean_const    go to state 78


State 147

   33 block: OPEN_BRACE $@3 statements CLOSE_BRACE .

    $default  reduce using rule 33 (block)


State 148

   27 dangling_if: IF OPEN_P expr_assign . CLOSE_P statement

    CLOSE_P  shift, and go to state 160


State 149

   13 params_call: params_call SEPARATOR . expr_assign

    TRUE     shift, and go to state 36
    FALSE    shift, and go to state 37
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 38
    C_INT    shift, and go to state 14
    NOT      shift, and go to state 44
    ADD      shift, and go to state 45
    SUB      shift, and go to state 46
    OPEN_P   shift, and go to state 49

    function_call    go to state 50
    expr_assign      go to state 161
    expr_relational  go to state 57
    expr_and         go to state 58
    expr_or          go to state 59
    expr_add         go to state 60
    expr_sub         go to state 61
    expr_mul         go to state 62
    expr_div         go to state 63
    expr_unary       go to state 64
    factor           go to state 65
    unary            go to state 66
    add              go to state 67
    sub              go to state 68
    value            go to state 72
    id_or_access     go to state 73
    id               go to state 74
    number           go to state 75
    number_int       go to state 76
    number_float     go to state 77
    boolean_const    go to state 78


State 150

   11 function_call: id OPEN_P params_call CLOSE_P .

    $default  reduce using rule 11 (function_call)


State 151

   27 dangling_if: IF OPEN_P expr_assign CLOSE_P statement .

    $default  reduce using rule 27 (dangling_if)


State 152

   28 statement_prefix: IF OPEN_P expr_assign CLOSE_P statement_no_dangle . ELSE

    ELSE  shift, and go to state 162


State 153

   20 statement: statement_prefix . statement_end
   21          | statement_prefix . dangling_if
   25 statement_no_dangle: statement_prefix . statement_end

    IF          shift, and go to state 90
    BOOLEAN     shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    GRAPH       shift, and go to state 8
    VOID        shift, and go to state 9
    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    ID          shift, and go to state 16
    C_FLOAT     shift, and go to state 38
    C_INT       shift, and go to state 14
    READ        shift, and go to state 39
    WRITE       shift, and go to state 40
    ADDA        shift, and go to state 41
    ADDV        shift, and go to state 42
    RETURN      shift, and go to state 43
    NOT         shift, and go to state 44
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    OPEN_BRACE  shift, and go to state 47
    OPEN_P      shift, and go to state 49

    function_call          go to state 50
    dangling_if            go to state 91
    block                  go to state 54
    statement_end          go to state 163
    expr_assign            go to state 56
    expr_relational        go to state 57
    expr_and               go to state 58
    expr_or                go to state 59
    expr_add               go to state 60
    expr_sub               go to state 61
    expr_mul               go to state 62
    expr_div               go to state 63
    expr_unary             go to state 64
    factor                 go to state 65
    unary                  go to state 66
    add                    go to state 67
    sub                    go to state 68
    graph_add              go to state 69
    declaration_or_assign  go to state 70
    declaration            go to state 71
    value                  go to state 72
    id_or_access           go to state 73
    id                     go to state 74
    type                   go to state 23
    number                 go to state 75
    number_int             go to state 76
    number_float           go to state 77
    boolean_const          go to state 78


State 154

   22 statement: statement_end .
   26 statement_no_dangle: statement_end .

    ELSE      reduce using rule 26 (statement_no_dangle)
    $default  reduce using rule 22 (statement)


State 155

   30 statement_prefix: FOR OPEN_P expr_assign END expr_assign . END expr_assign CLOSE_P

    END  shift, and go to state 164


State 156

   15 graph_call: DFS . graph_params_call

    OPEN_P  shift, and go to state 165

    graph_params_call  go to state 166


State 157

   16 graph_call: BFS . graph_params_call

    OPEN_P  shift, and go to state 165

    graph_params_call  go to state 167


State 158

   31 statement_prefix: FOR OPEN_P id_or_access IT graph_call . CLOSE_P

    CLOSE_P  shift, and go to state 168


State 159

   78 graph_add: ADDV OPEN_P id_or_access SEPARATOR expr_assign . SEPARATOR expr_assign CLOSE_P

    SEPARATOR  shift, and go to state 169


State 160

   27 dangling_if: IF OPEN_P expr_assign CLOSE_P . statement

    error       shift, and go to state 32
    IF          shift, and go to state 33
    FOR         shift, and go to state 34
    WHILE       shift, and go to state 35
    BOOLEAN     shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    GRAPH       shift, and go to state 8
    VOID        shift, and go to state 9
    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    ID          shift, and go to state 16
    C_FLOAT     shift, and go to state 38
    C_INT       shift, and go to state 14
    READ        shift, and go to state 39
    WRITE       shift, and go to state 40
    ADDA        shift, and go to state 41
    ADDV        shift, and go to state 42
    RETURN      shift, and go to state 43
    NOT         shift, and go to state 44
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    OPEN_BRACE  shift, and go to state 47
    OPEN_P      shift, and go to state 49

    function_call          go to state 50
    statement              go to state 151
    dangling_if            go to state 52
    statement_prefix       go to state 53
    block                  go to state 54
    statement_end          go to state 55
    expr_assign            go to state 56
    expr_relational        go to state 57
    expr_and               go to state 58
    expr_or                go to state 59
    expr_add               go to state 60
    expr_sub               go to state 61
    expr_mul               go to state 62
    expr_div               go to state 63
    expr_unary             go to state 64
    factor                 go to state 65
    unary                  go to state 66
    add                    go to state 67
    sub                    go to state 68
    graph_add              go to state 69
    declaration_or_assign  go to state 70
    declaration            go to state 71
    value                  go to state 72
    id_or_access           go to state 73
    id                     go to state 74
    type                   go to state 23
    number                 go to state 75
    number_int             go to state 76
    number_float           go to state 77
    boolean_const          go to state 78


State 161

   13 params_call: params_call SEPARATOR expr_assign .

    $default  reduce using rule 13 (params_call)


State 162

   28 statement_prefix: IF OPEN_P expr_assign CLOSE_P statement_no_dangle ELSE .

    $default  reduce using rule 28 (statement_prefix)


State 163

   20 statement: statement_prefix statement_end .
   25 statement_no_dangle: statement_prefix statement_end .

    ELSE      reduce using rule 25 (statement_no_dangle)
    $default  reduce using rule 20 (statement)


State 164

   30 statement_prefix: FOR OPEN_P expr_assign END expr_assign END . expr_assign CLOSE_P

    TRUE     shift, and go to state 36
    FALSE    shift, and go to state 37
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 38
    C_INT    shift, and go to state 14
    NOT      shift, and go to state 44
    ADD      shift, and go to state 45
    SUB      shift, and go to state 46
    OPEN_P   shift, and go to state 49

    function_call    go to state 50
    expr_assign      go to state 170
    expr_relational  go to state 57
    expr_and         go to state 58
    expr_or          go to state 59
    expr_add         go to state 60
    expr_sub         go to state 61
    expr_mul         go to state 62
    expr_div         go to state 63
    expr_unary       go to state 64
    factor           go to state 65
    unary            go to state 66
    add              go to state 67
    sub              go to state 68
    value            go to state 72
    id_or_access     go to state 73
    id               go to state 74
    number           go to state 75
    number_int       go to state 76
    number_float     go to state 77
    boolean_const    go to state 78


State 165

   17 graph_params_call: OPEN_P . id_or_access SEPARATOR expr_assign SEPARATOR expr_assign CLOSE_P

    ID  shift, and go to state 16

    id_or_access  go to state 171
    id            go to state 83


State 166

   15 graph_call: DFS graph_params_call .

    $default  reduce using rule 15 (graph_call)


State 167

   16 graph_call: BFS graph_params_call .

    $default  reduce using rule 16 (graph_call)


State 168

   31 statement_prefix: FOR OPEN_P id_or_access IT graph_call CLOSE_P .

    $default  reduce using rule 31 (statement_prefix)


State 169

   78 graph_add: ADDV OPEN_P id_or_access SEPARATOR expr_assign SEPARATOR . expr_assign CLOSE_P

    TRUE     shift, and go to state 36
    FALSE    shift, and go to state 37
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 38
    C_INT    shift, and go to state 14
    NOT      shift, and go to state 44
    ADD      shift, and go to state 45
    SUB      shift, and go to state 46
    OPEN_P   shift, and go to state 49

    function_call    go to state 50
    expr_assign      go to state 172
    expr_relational  go to state 57
    expr_and         go to state 58
    expr_or          go to state 59
    expr_add         go to state 60
    expr_sub         go to state 61
    expr_mul         go to state 62
    expr_div         go to state 63
    expr_unary       go to state 64
    factor           go to state 65
    unary            go to state 66
    add              go to state 67
    sub              go to state 68
    value            go to state 72
    id_or_access     go to state 73
    id               go to state 74
    number           go to state 75
    number_int       go to state 76
    number_float     go to state 77
    boolean_const    go to state 78


State 170

   30 statement_prefix: FOR OPEN_P expr_assign END expr_assign END expr_assign . CLOSE_P

    CLOSE_P  shift, and go to state 173


State 171

   17 graph_params_call: OPEN_P id_or_access . SEPARATOR expr_assign SEPARATOR expr_assign CLOSE_P

    SEPARATOR  shift, and go to state 174


State 172

   78 graph_add: ADDV OPEN_P id_or_access SEPARATOR expr_assign SEPARATOR expr_assign . CLOSE_P

    CLOSE_P  shift, and go to state 175


State 173

   30 statement_prefix: FOR OPEN_P expr_assign END expr_assign END expr_assign CLOSE_P .

    $default  reduce using rule 30 (statement_prefix)


State 174

   17 graph_params_call: OPEN_P id_or_access SEPARATOR . expr_assign SEPARATOR expr_assign CLOSE_P

    TRUE     shift, and go to state 36
    FALSE    shift, and go to state 37
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 38
    C_INT    shift, and go to state 14
    NOT      shift, and go to state 44
    ADD      shift, and go to state 45
    SUB      shift, and go to state 46
    OPEN_P   shift, and go to state 49

    function_call    go to state 50
    expr_assign      go to state 176
    expr_relational  go to state 57
    expr_and         go to state 58
    expr_or          go to state 59
    expr_add         go to state 60
    expr_sub         go to state 61
    expr_mul         go to state 62
    expr_div         go to state 63
    expr_unary       go to state 64
    factor           go to state 65
    unary            go to state 66
    add              go to state 67
    sub              go to state 68
    value            go to state 72
    id_or_access     go to state 73
    id               go to state 74
    number           go to state 75
    number_int       go to state 76
    number_float     go to state 77
    boolean_const    go to state 78


State 175

   78 graph_add: ADDV OPEN_P id_or_access SEPARATOR expr_assign SEPARATOR expr_assign CLOSE_P .

    $default  reduce using rule 78 (graph_add)


State 176

   17 graph_params_call: OPEN_P id_or_access SEPARATOR expr_assign . SEPARATOR expr_assign CLOSE_P

    SEPARATOR  shift, and go to state 177


State 177

   17 graph_params_call: OPEN_P id_or_access SEPARATOR expr_assign SEPARATOR . expr_assign CLOSE_P

    TRUE     shift, and go to state 36
    FALSE    shift, and go to state 37
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 38
    C_INT    shift, and go to state 14
    NOT      shift, and go to state 44
    ADD      shift, and go to state 45
    SUB      shift, and go to state 46
    OPEN_P   shift, and go to state 49

    function_call    go to state 50
    expr_assign      go to state 178
    expr_relational  go to state 57
    expr_and         go to state 58
    expr_or          go to state 59
    expr_add         go to state 60
    expr_sub         go to state 61
    expr_mul         go to state 62
    expr_div         go to state 63
    expr_unary       go to state 64
    factor           go to state 65
    unary            go to state 66
    add              go to state 67
    sub              go to state 68
    value            go to state 72
    id_or_access     go to state 73
    id               go to state 74
    number           go to state 75
    number_int       go to state 76
    number_float     go to state 77
    boolean_const    go to state 78


State 178

   17 graph_params_call: OPEN_P id_or_access SEPARATOR expr_assign SEPARATOR expr_assign . CLOSE_P

    CLOSE_P  shift, and go to state 179


State 179

   17 graph_params_call: OPEN_P id_or_access SEPARATOR expr_assign SEPARATOR expr_assign CLOSE_P .

    $default  reduce using rule 17 (graph_params_call)
