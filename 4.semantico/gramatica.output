Grammar

    0 $accept: init $end

    1 init: program

    2 program: %empty
    3        | program function

    4 function: type size_specifier id OPEN_P params CLOSE_P block
    5         | error

    6 params: %empty
    7       | params SEPARATOR declaration
    8       | declaration

    9 function_call: id OPEN_P params_call CLOSE_P

   10 params_call: %empty
   11            | params_call SEPARATOR expr_assign
   12            | expr_assign

   13 graph_call: DFS graph_params_call
   14           | BFS graph_params_call

   15 graph_params_call: OPEN_P id SEPARATOR expr_assign SEPARATOR expr_assign CLOSE_P

   16 statements: %empty
   17           | statements statement

   18 statement: statement_prefix statement_end
   19          | statement_prefix dangling_if
   20          | statement_end
   21          | dangling_if
   22          | error

   23 statement_no_dangle: statement_prefix statement_end
   24                    | statement_end

   25 dangling_if: IF OPEN_P expr_assign CLOSE_P statement

   26 statement_prefix: IF OPEN_P expr_assign CLOSE_P statement_no_dangle ELSE
   27                 | WHILE OPEN_P expr_assign CLOSE_P
   28                 | FOR OPEN_P declaration_or_assign END expr_assign END expr_assign CLOSE_P
   29                 | FOR OPEN_P declaration IT graph_call CLOSE_P

   30 block: OPEN_BRACE statements CLOSE_BRACE

   31 statement_end: block
   32              | READ id_or_access END
   33              | WRITE expr_assign END
   34              | declaration_or_assign END
   35              | expr_assign END
   36              | graph_add END
   37              | RETURN expr_assign END

   38 expr_assign: expr_relational ASSIGN expr_assign
   39            | expr_relational

   40 expr_relational: expr_and compare_op expr_relational
   41                | expr_and

   42 expr_and: expr_or and expr_and
   43         | expr_or

   44 expr_or: expr_add or expr_or
   45        | expr_add

   46 expr_add: expr_sub add expr_add
   47         | expr_sub

   48 expr_sub: expr_mul sub expr_sub
   49         | expr_mul

   50 expr_mul: expr_div mul expr_mul
   51         | expr_div

   52 expr_div: expr_unary div expr_div
   53         | expr_unary

   54 expr_unary: unary factor
   55           | factor

   56 factor: OPEN_P expr_assign CLOSE_P
   57       | value
   58       | function_call

   59 unary: NOT
   60      | add
   61      | sub

   62 and: AND

   63 or: OR

   64 add: ADD

   65 sub: SUB

   66 mul: MUL

   67 div: DIV

   68 compare_op: LE
   69           | GE
   70           | LESS
   71           | GREATER
   72           | EQ
   73           | NE

   74 graph_add: ADDA OPEN_P id CLOSE_P
   75          | ADDV OPEN_P id SEPARATOR expr_assign SEPARATOR expr_assign CLOSE_P
   76          | id OPEN_BRACKET expr_assign TO expr_assign CLOSE_BRACKET

   77 declaration_or_assign: declaration
   78                      | declaration ASSIGN expr_assign

   79 declaration: type size_specifier id

   80 size_specifier: %empty
   81               | OPEN_BRACKET number_int CLOSE_BRACKET

   82 value: id_or_access
   83      | number
   84      | boolean_const

   85 id_or_access: id
   86             | id OPEN_BRACKET number_int CLOSE_BRACKET

   87 id: ID

   88 type: INT
   89     | BOOLEAN
   90     | FLOAT
   91     | GRAPH
   92     | VOID

   93 number: number_int
   94       | number_float

   95 number_int: C_INT

   96 number_float: C_FLOAT

   97 boolean_const: TRUE
   98              | FALSE


Terminals, with rules where they appear

$end (0) 0
error (256) 5 22
IF (258) 25 26
ELSE (259) 26
FOR (260) 28 29
WHILE (261) 27
BOOLEAN (262) 89
INT (263) 88
FLOAT (264) 90
GRAPH (265) 91
VOID (266) 92
TO (267) 76
TRUE (268) 97
FALSE (269) 98
ID (270) 87
C_FLOAT (271) 96
C_INT (272) 95
READ (273) 32
WRITE (274) 33
DFS (275) 13
BFS (276) 14
ADDA (277) 74
ADDV (278) 75
RETURN (279) 37
AND (280) 62
OR (281) 63
LE (282) 68
GE (283) 69
LESS (284) 70
GREATER (285) 71
EQ (286) 72
NE (287) 73
NOT (288) 59
MUL (289) 66
DIV (290) 67
ADD (291) 64
SUB (292) 65
ASSIGN (293) 38 78
END (294) 28 32 33 34 35 36 37
OPEN_BRACE (295) 30
CLOSE_BRACE (296) 30
IT (297) 29
SEPARATOR (298) 7 11 15 75
OPEN_P (299) 4 9 15 25 26 27 28 29 56 74 75
CLOSE_P (300) 4 9 15 25 26 27 28 29 56 74 75
OPEN_BRACKET (301) 76 81 86
CLOSE_BRACKET (302) 76 81 86


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
init (49)
    on left: 1, on right: 0
program (50)
    on left: 2 3, on right: 1 3
function (51)
    on left: 4 5, on right: 3
params (52)
    on left: 6 7 8, on right: 4 7
function_call (53)
    on left: 9, on right: 58
params_call (54)
    on left: 10 11 12, on right: 9 11
graph_call (55)
    on left: 13 14, on right: 29
graph_params_call (56)
    on left: 15, on right: 13 14
statements (57)
    on left: 16 17, on right: 17 30
statement (58)
    on left: 18 19 20 21 22, on right: 17 25
statement_no_dangle (59)
    on left: 23 24, on right: 26
dangling_if (60)
    on left: 25, on right: 19 21
statement_prefix (61)
    on left: 26 27 28 29, on right: 18 19 23
block (62)
    on left: 30, on right: 4 31
statement_end (63)
    on left: 31 32 33 34 35 36 37, on right: 18 20 23 24
expr_assign (64)
    on left: 38 39, on right: 11 12 15 25 26 27 28 33 35 37 38 56 75
    76 78
expr_relational (65)
    on left: 40 41, on right: 38 39 40
expr_and (66)
    on left: 42 43, on right: 40 41 42
expr_or (67)
    on left: 44 45, on right: 42 43 44
expr_add (68)
    on left: 46 47, on right: 44 45 46
expr_sub (69)
    on left: 48 49, on right: 46 47 48
expr_mul (70)
    on left: 50 51, on right: 48 49 50
expr_div (71)
    on left: 52 53, on right: 50 51 52
expr_unary (72)
    on left: 54 55, on right: 52 53
factor (73)
    on left: 56 57 58, on right: 54 55
unary (74)
    on left: 59 60 61, on right: 54
and (75)
    on left: 62, on right: 42
or (76)
    on left: 63, on right: 44
add (77)
    on left: 64, on right: 46 60
sub (78)
    on left: 65, on right: 48 61
mul (79)
    on left: 66, on right: 50
div (80)
    on left: 67, on right: 52
compare_op (81)
    on left: 68 69 70 71 72 73, on right: 40
graph_add (82)
    on left: 74 75 76, on right: 36
declaration_or_assign (83)
    on left: 77 78, on right: 28 34
declaration (84)
    on left: 79, on right: 7 8 29 77 78
size_specifier (85)
    on left: 80 81, on right: 4 79
value (86)
    on left: 82 83 84, on right: 57
id_or_access (87)
    on left: 85 86, on right: 32 82
id (88)
    on left: 87, on right: 4 9 15 74 75 76 79 85 86
type (89)
    on left: 88 89 90 91 92, on right: 4 79
number (90)
    on left: 93 94, on right: 83
number_int (91)
    on left: 95, on right: 81 86 93
number_float (92)
    on left: 96, on right: 94
boolean_const (93)
    on left: 97 98, on right: 84


State 0

    0 $accept: . init $end

    $default  reduce using rule 2 (program)

    init     go to state 1
    program  go to state 2


State 1

    0 $accept: init . $end

    $end  shift, and go to state 3


State 2

    1 init: program .
    3 program: program . function

    error    shift, and go to state 4
    BOOLEAN  shift, and go to state 5
    INT      shift, and go to state 6
    FLOAT    shift, and go to state 7
    GRAPH    shift, and go to state 8
    VOID     shift, and go to state 9

    $end  reduce using rule 1 (init)

    function  go to state 10
    type      go to state 11


State 3

    0 $accept: init $end .

    $default  accept


State 4

    5 function: error .

    $default  reduce using rule 5 (function)


State 5

   89 type: BOOLEAN .

    $default  reduce using rule 89 (type)


State 6

   88 type: INT .

    $default  reduce using rule 88 (type)


State 7

   90 type: FLOAT .

    $default  reduce using rule 90 (type)


State 8

   91 type: GRAPH .

    $default  reduce using rule 91 (type)


State 9

   92 type: VOID .

    $default  reduce using rule 92 (type)


State 10

    3 program: program function .

    $default  reduce using rule 3 (program)


State 11

    4 function: type . size_specifier id OPEN_P params CLOSE_P block

    OPEN_BRACKET  shift, and go to state 12

    $default  reduce using rule 80 (size_specifier)

    size_specifier  go to state 13


State 12

   81 size_specifier: OPEN_BRACKET . number_int CLOSE_BRACKET

    C_INT  shift, and go to state 14

    number_int  go to state 15


State 13

    4 function: type size_specifier . id OPEN_P params CLOSE_P block

    ID  shift, and go to state 16

    id  go to state 17


State 14

   95 number_int: C_INT .

    $default  reduce using rule 95 (number_int)


State 15

   81 size_specifier: OPEN_BRACKET number_int . CLOSE_BRACKET

    CLOSE_BRACKET  shift, and go to state 18


State 16

   87 id: ID .

    $default  reduce using rule 87 (id)


State 17

    4 function: type size_specifier id . OPEN_P params CLOSE_P block

    OPEN_P  shift, and go to state 19


State 18

   81 size_specifier: OPEN_BRACKET number_int CLOSE_BRACKET .

    $default  reduce using rule 81 (size_specifier)


State 19

    4 function: type size_specifier id OPEN_P . params CLOSE_P block

    BOOLEAN  shift, and go to state 5
    INT      shift, and go to state 6
    FLOAT    shift, and go to state 7
    GRAPH    shift, and go to state 8
    VOID     shift, and go to state 9

    $default  reduce using rule 6 (params)

    params       go to state 20
    declaration  go to state 21
    type         go to state 22


State 20

    4 function: type size_specifier id OPEN_P params . CLOSE_P block
    7 params: params . SEPARATOR declaration

    SEPARATOR  shift, and go to state 23
    CLOSE_P    shift, and go to state 24


State 21

    8 params: declaration .

    $default  reduce using rule 8 (params)


State 22

   79 declaration: type . size_specifier id

    OPEN_BRACKET  shift, and go to state 12

    $default  reduce using rule 80 (size_specifier)

    size_specifier  go to state 25


State 23

    7 params: params SEPARATOR . declaration

    BOOLEAN  shift, and go to state 5
    INT      shift, and go to state 6
    FLOAT    shift, and go to state 7
    GRAPH    shift, and go to state 8
    VOID     shift, and go to state 9

    declaration  go to state 26
    type         go to state 22


State 24

    4 function: type size_specifier id OPEN_P params CLOSE_P . block

    OPEN_BRACE  shift, and go to state 27

    block  go to state 28


State 25

   79 declaration: type size_specifier . id

    ID  shift, and go to state 16

    id  go to state 29


State 26

    7 params: params SEPARATOR declaration .

    $default  reduce using rule 7 (params)


State 27

   30 block: OPEN_BRACE . statements CLOSE_BRACE

    $default  reduce using rule 16 (statements)

    statements  go to state 30


State 28

    4 function: type size_specifier id OPEN_P params CLOSE_P block .

    $default  reduce using rule 4 (function)


State 29

   79 declaration: type size_specifier id .

    $default  reduce using rule 79 (declaration)


State 30

   17 statements: statements . statement
   30 block: OPEN_BRACE statements . CLOSE_BRACE

    error        shift, and go to state 31
    IF           shift, and go to state 32
    FOR          shift, and go to state 33
    WHILE        shift, and go to state 34
    BOOLEAN      shift, and go to state 5
    INT          shift, and go to state 6
    FLOAT        shift, and go to state 7
    GRAPH        shift, and go to state 8
    VOID         shift, and go to state 9
    TRUE         shift, and go to state 35
    FALSE        shift, and go to state 36
    ID           shift, and go to state 16
    C_FLOAT      shift, and go to state 37
    C_INT        shift, and go to state 14
    READ         shift, and go to state 38
    WRITE        shift, and go to state 39
    ADDA         shift, and go to state 40
    ADDV         shift, and go to state 41
    RETURN       shift, and go to state 42
    NOT          shift, and go to state 43
    ADD          shift, and go to state 44
    SUB          shift, and go to state 45
    OPEN_BRACE   shift, and go to state 27
    CLOSE_BRACE  shift, and go to state 46
    OPEN_P       shift, and go to state 47

    function_call          go to state 48
    statement              go to state 49
    dangling_if            go to state 50
    statement_prefix       go to state 51
    block                  go to state 52
    statement_end          go to state 53
    expr_assign            go to state 54
    expr_relational        go to state 55
    expr_and               go to state 56
    expr_or                go to state 57
    expr_add               go to state 58
    expr_sub               go to state 59
    expr_mul               go to state 60
    expr_div               go to state 61
    expr_unary             go to state 62
    factor                 go to state 63
    unary                  go to state 64
    add                    go to state 65
    sub                    go to state 66
    graph_add              go to state 67
    declaration_or_assign  go to state 68
    declaration            go to state 69
    value                  go to state 70
    id_or_access           go to state 71
    id                     go to state 72
    type                   go to state 22
    number                 go to state 73
    number_int             go to state 74
    number_float           go to state 75
    boolean_const          go to state 76


State 31

   22 statement: error .

    $default  reduce using rule 22 (statement)


State 32

   25 dangling_if: IF . OPEN_P expr_assign CLOSE_P statement
   26 statement_prefix: IF . OPEN_P expr_assign CLOSE_P statement_no_dangle ELSE

    OPEN_P  shift, and go to state 77


State 33

   28 statement_prefix: FOR . OPEN_P declaration_or_assign END expr_assign END expr_assign CLOSE_P
   29                 | FOR . OPEN_P declaration IT graph_call CLOSE_P

    OPEN_P  shift, and go to state 78


State 34

   27 statement_prefix: WHILE . OPEN_P expr_assign CLOSE_P

    OPEN_P  shift, and go to state 79


State 35

   97 boolean_const: TRUE .

    $default  reduce using rule 97 (boolean_const)


State 36

   98 boolean_const: FALSE .

    $default  reduce using rule 98 (boolean_const)


State 37

   96 number_float: C_FLOAT .

    $default  reduce using rule 96 (number_float)


State 38

   32 statement_end: READ . id_or_access END

    ID  shift, and go to state 16

    id_or_access  go to state 80
    id            go to state 81


State 39

   33 statement_end: WRITE . expr_assign END

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 37
    C_INT    shift, and go to state 14
    NOT      shift, and go to state 43
    ADD      shift, and go to state 44
    SUB      shift, and go to state 45
    OPEN_P   shift, and go to state 47

    function_call    go to state 48
    expr_assign      go to state 82
    expr_relational  go to state 55
    expr_and         go to state 56
    expr_or          go to state 57
    expr_add         go to state 58
    expr_sub         go to state 59
    expr_mul         go to state 60
    expr_div         go to state 61
    expr_unary       go to state 62
    factor           go to state 63
    unary            go to state 64
    add              go to state 65
    sub              go to state 66
    value            go to state 70
    id_or_access     go to state 71
    id               go to state 83
    number           go to state 73
    number_int       go to state 74
    number_float     go to state 75
    boolean_const    go to state 76


State 40

   74 graph_add: ADDA . OPEN_P id CLOSE_P

    OPEN_P  shift, and go to state 84


State 41

   75 graph_add: ADDV . OPEN_P id SEPARATOR expr_assign SEPARATOR expr_assign CLOSE_P

    OPEN_P  shift, and go to state 85


State 42

   37 statement_end: RETURN . expr_assign END

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 37
    C_INT    shift, and go to state 14
    NOT      shift, and go to state 43
    ADD      shift, and go to state 44
    SUB      shift, and go to state 45
    OPEN_P   shift, and go to state 47

    function_call    go to state 48
    expr_assign      go to state 86
    expr_relational  go to state 55
    expr_and         go to state 56
    expr_or          go to state 57
    expr_add         go to state 58
    expr_sub         go to state 59
    expr_mul         go to state 60
    expr_div         go to state 61
    expr_unary       go to state 62
    factor           go to state 63
    unary            go to state 64
    add              go to state 65
    sub              go to state 66
    value            go to state 70
    id_or_access     go to state 71
    id               go to state 83
    number           go to state 73
    number_int       go to state 74
    number_float     go to state 75
    boolean_const    go to state 76


State 43

   59 unary: NOT .

    $default  reduce using rule 59 (unary)


State 44

   64 add: ADD .

    $default  reduce using rule 64 (add)


State 45

   65 sub: SUB .

    $default  reduce using rule 65 (sub)


State 46

   30 block: OPEN_BRACE statements CLOSE_BRACE .

    $default  reduce using rule 30 (block)


State 47

   56 factor: OPEN_P . expr_assign CLOSE_P

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 37
    C_INT    shift, and go to state 14
    NOT      shift, and go to state 43
    ADD      shift, and go to state 44
    SUB      shift, and go to state 45
    OPEN_P   shift, and go to state 47

    function_call    go to state 48
    expr_assign      go to state 87
    expr_relational  go to state 55
    expr_and         go to state 56
    expr_or          go to state 57
    expr_add         go to state 58
    expr_sub         go to state 59
    expr_mul         go to state 60
    expr_div         go to state 61
    expr_unary       go to state 62
    factor           go to state 63
    unary            go to state 64
    add              go to state 65
    sub              go to state 66
    value            go to state 70
    id_or_access     go to state 71
    id               go to state 83
    number           go to state 73
    number_int       go to state 74
    number_float     go to state 75
    boolean_const    go to state 76


State 48

   58 factor: function_call .

    $default  reduce using rule 58 (factor)


State 49

   17 statements: statements statement .

    $default  reduce using rule 17 (statements)


State 50

   21 statement: dangling_if .

    $default  reduce using rule 21 (statement)


State 51

   18 statement: statement_prefix . statement_end
   19          | statement_prefix . dangling_if

    IF          shift, and go to state 88
    BOOLEAN     shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    GRAPH       shift, and go to state 8
    VOID        shift, and go to state 9
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    ID          shift, and go to state 16
    C_FLOAT     shift, and go to state 37
    C_INT       shift, and go to state 14
    READ        shift, and go to state 38
    WRITE       shift, and go to state 39
    ADDA        shift, and go to state 40
    ADDV        shift, and go to state 41
    RETURN      shift, and go to state 42
    NOT         shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45
    OPEN_BRACE  shift, and go to state 27
    OPEN_P      shift, and go to state 47

    function_call          go to state 48
    dangling_if            go to state 89
    block                  go to state 52
    statement_end          go to state 90
    expr_assign            go to state 54
    expr_relational        go to state 55
    expr_and               go to state 56
    expr_or                go to state 57
    expr_add               go to state 58
    expr_sub               go to state 59
    expr_mul               go to state 60
    expr_div               go to state 61
    expr_unary             go to state 62
    factor                 go to state 63
    unary                  go to state 64
    add                    go to state 65
    sub                    go to state 66
    graph_add              go to state 67
    declaration_or_assign  go to state 68
    declaration            go to state 69
    value                  go to state 70
    id_or_access           go to state 71
    id                     go to state 72
    type                   go to state 22
    number                 go to state 73
    number_int             go to state 74
    number_float           go to state 75
    boolean_const          go to state 76


State 52

   31 statement_end: block .

    $default  reduce using rule 31 (statement_end)


State 53

   20 statement: statement_end .

    $default  reduce using rule 20 (statement)


State 54

   35 statement_end: expr_assign . END

    END  shift, and go to state 91


State 55

   38 expr_assign: expr_relational . ASSIGN expr_assign
   39            | expr_relational .

    ASSIGN  shift, and go to state 92

    $default  reduce using rule 39 (expr_assign)


State 56

   40 expr_relational: expr_and . compare_op expr_relational
   41                | expr_and .

    LE       shift, and go to state 93
    GE       shift, and go to state 94
    LESS     shift, and go to state 95
    GREATER  shift, and go to state 96
    EQ       shift, and go to state 97
    NE       shift, and go to state 98

    $default  reduce using rule 41 (expr_relational)

    compare_op  go to state 99


State 57

   42 expr_and: expr_or . and expr_and
   43         | expr_or .

    AND  shift, and go to state 100

    $default  reduce using rule 43 (expr_and)

    and  go to state 101


State 58

   44 expr_or: expr_add . or expr_or
   45        | expr_add .

    OR  shift, and go to state 102

    $default  reduce using rule 45 (expr_or)

    or  go to state 103


State 59

   46 expr_add: expr_sub . add expr_add
   47         | expr_sub .

    ADD  shift, and go to state 44

    $default  reduce using rule 47 (expr_add)

    add  go to state 104


State 60

   48 expr_sub: expr_mul . sub expr_sub
   49         | expr_mul .

    SUB  shift, and go to state 45

    $default  reduce using rule 49 (expr_sub)

    sub  go to state 105


State 61

   50 expr_mul: expr_div . mul expr_mul
   51         | expr_div .

    MUL  shift, and go to state 106

    $default  reduce using rule 51 (expr_mul)

    mul  go to state 107


State 62

   52 expr_div: expr_unary . div expr_div
   53         | expr_unary .

    DIV  shift, and go to state 108

    $default  reduce using rule 53 (expr_div)

    div  go to state 109


State 63

   55 expr_unary: factor .

    $default  reduce using rule 55 (expr_unary)


State 64

   54 expr_unary: unary . factor

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 37
    C_INT    shift, and go to state 14
    OPEN_P   shift, and go to state 47

    function_call  go to state 48
    factor         go to state 110
    value          go to state 70
    id_or_access   go to state 71
    id             go to state 83
    number         go to state 73
    number_int     go to state 74
    number_float   go to state 75
    boolean_const  go to state 76


State 65

   60 unary: add .

    $default  reduce using rule 60 (unary)


State 66

   61 unary: sub .

    $default  reduce using rule 61 (unary)


State 67

   36 statement_end: graph_add . END

    END  shift, and go to state 111


State 68

   34 statement_end: declaration_or_assign . END

    END  shift, and go to state 112


State 69

   77 declaration_or_assign: declaration .
   78                      | declaration . ASSIGN expr_assign

    ASSIGN  shift, and go to state 113

    $default  reduce using rule 77 (declaration_or_assign)


State 70

   57 factor: value .

    $default  reduce using rule 57 (factor)


State 71

   82 value: id_or_access .

    $default  reduce using rule 82 (value)


State 72

    9 function_call: id . OPEN_P params_call CLOSE_P
   76 graph_add: id . OPEN_BRACKET expr_assign TO expr_assign CLOSE_BRACKET
   85 id_or_access: id .
   86             | id . OPEN_BRACKET number_int CLOSE_BRACKET

    OPEN_P        shift, and go to state 114
    OPEN_BRACKET  shift, and go to state 115

    $default  reduce using rule 85 (id_or_access)


State 73

   83 value: number .

    $default  reduce using rule 83 (value)


State 74

   93 number: number_int .

    $default  reduce using rule 93 (number)


State 75

   94 number: number_float .

    $default  reduce using rule 94 (number)


State 76

   84 value: boolean_const .

    $default  reduce using rule 84 (value)


State 77

   25 dangling_if: IF OPEN_P . expr_assign CLOSE_P statement
   26 statement_prefix: IF OPEN_P . expr_assign CLOSE_P statement_no_dangle ELSE

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 37
    C_INT    shift, and go to state 14
    NOT      shift, and go to state 43
    ADD      shift, and go to state 44
    SUB      shift, and go to state 45
    OPEN_P   shift, and go to state 47

    function_call    go to state 48
    expr_assign      go to state 116
    expr_relational  go to state 55
    expr_and         go to state 56
    expr_or          go to state 57
    expr_add         go to state 58
    expr_sub         go to state 59
    expr_mul         go to state 60
    expr_div         go to state 61
    expr_unary       go to state 62
    factor           go to state 63
    unary            go to state 64
    add              go to state 65
    sub              go to state 66
    value            go to state 70
    id_or_access     go to state 71
    id               go to state 83
    number           go to state 73
    number_int       go to state 74
    number_float     go to state 75
    boolean_const    go to state 76


State 78

   28 statement_prefix: FOR OPEN_P . declaration_or_assign END expr_assign END expr_assign CLOSE_P
   29                 | FOR OPEN_P . declaration IT graph_call CLOSE_P

    BOOLEAN  shift, and go to state 5
    INT      shift, and go to state 6
    FLOAT    shift, and go to state 7
    GRAPH    shift, and go to state 8
    VOID     shift, and go to state 9

    declaration_or_assign  go to state 117
    declaration            go to state 118
    type                   go to state 22


State 79

   27 statement_prefix: WHILE OPEN_P . expr_assign CLOSE_P

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 37
    C_INT    shift, and go to state 14
    NOT      shift, and go to state 43
    ADD      shift, and go to state 44
    SUB      shift, and go to state 45
    OPEN_P   shift, and go to state 47

    function_call    go to state 48
    expr_assign      go to state 119
    expr_relational  go to state 55
    expr_and         go to state 56
    expr_or          go to state 57
    expr_add         go to state 58
    expr_sub         go to state 59
    expr_mul         go to state 60
    expr_div         go to state 61
    expr_unary       go to state 62
    factor           go to state 63
    unary            go to state 64
    add              go to state 65
    sub              go to state 66
    value            go to state 70
    id_or_access     go to state 71
    id               go to state 83
    number           go to state 73
    number_int       go to state 74
    number_float     go to state 75
    boolean_const    go to state 76


State 80

   32 statement_end: READ id_or_access . END

    END  shift, and go to state 120


State 81

   85 id_or_access: id .
   86             | id . OPEN_BRACKET number_int CLOSE_BRACKET

    OPEN_BRACKET  shift, and go to state 121

    $default  reduce using rule 85 (id_or_access)


State 82

   33 statement_end: WRITE expr_assign . END

    END  shift, and go to state 122


State 83

    9 function_call: id . OPEN_P params_call CLOSE_P
   85 id_or_access: id .
   86             | id . OPEN_BRACKET number_int CLOSE_BRACKET

    OPEN_P        shift, and go to state 114
    OPEN_BRACKET  shift, and go to state 121

    $default  reduce using rule 85 (id_or_access)


State 84

   74 graph_add: ADDA OPEN_P . id CLOSE_P

    ID  shift, and go to state 16

    id  go to state 123


State 85

   75 graph_add: ADDV OPEN_P . id SEPARATOR expr_assign SEPARATOR expr_assign CLOSE_P

    ID  shift, and go to state 16

    id  go to state 124


State 86

   37 statement_end: RETURN expr_assign . END

    END  shift, and go to state 125


State 87

   56 factor: OPEN_P expr_assign . CLOSE_P

    CLOSE_P  shift, and go to state 126


State 88

   25 dangling_if: IF . OPEN_P expr_assign CLOSE_P statement

    OPEN_P  shift, and go to state 127


State 89

   19 statement: statement_prefix dangling_if .

    $default  reduce using rule 19 (statement)


State 90

   18 statement: statement_prefix statement_end .

    $default  reduce using rule 18 (statement)


State 91

   35 statement_end: expr_assign END .

    $default  reduce using rule 35 (statement_end)


State 92

   38 expr_assign: expr_relational ASSIGN . expr_assign

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 37
    C_INT    shift, and go to state 14
    NOT      shift, and go to state 43
    ADD      shift, and go to state 44
    SUB      shift, and go to state 45
    OPEN_P   shift, and go to state 47

    function_call    go to state 48
    expr_assign      go to state 128
    expr_relational  go to state 55
    expr_and         go to state 56
    expr_or          go to state 57
    expr_add         go to state 58
    expr_sub         go to state 59
    expr_mul         go to state 60
    expr_div         go to state 61
    expr_unary       go to state 62
    factor           go to state 63
    unary            go to state 64
    add              go to state 65
    sub              go to state 66
    value            go to state 70
    id_or_access     go to state 71
    id               go to state 83
    number           go to state 73
    number_int       go to state 74
    number_float     go to state 75
    boolean_const    go to state 76


State 93

   68 compare_op: LE .

    $default  reduce using rule 68 (compare_op)


State 94

   69 compare_op: GE .

    $default  reduce using rule 69 (compare_op)


State 95

   70 compare_op: LESS .

    $default  reduce using rule 70 (compare_op)


State 96

   71 compare_op: GREATER .

    $default  reduce using rule 71 (compare_op)


State 97

   72 compare_op: EQ .

    $default  reduce using rule 72 (compare_op)


State 98

   73 compare_op: NE .

    $default  reduce using rule 73 (compare_op)


State 99

   40 expr_relational: expr_and compare_op . expr_relational

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 37
    C_INT    shift, and go to state 14
    NOT      shift, and go to state 43
    ADD      shift, and go to state 44
    SUB      shift, and go to state 45
    OPEN_P   shift, and go to state 47

    function_call    go to state 48
    expr_relational  go to state 129
    expr_and         go to state 56
    expr_or          go to state 57
    expr_add         go to state 58
    expr_sub         go to state 59
    expr_mul         go to state 60
    expr_div         go to state 61
    expr_unary       go to state 62
    factor           go to state 63
    unary            go to state 64
    add              go to state 65
    sub              go to state 66
    value            go to state 70
    id_or_access     go to state 71
    id               go to state 83
    number           go to state 73
    number_int       go to state 74
    number_float     go to state 75
    boolean_const    go to state 76


State 100

   62 and: AND .

    $default  reduce using rule 62 (and)


State 101

   42 expr_and: expr_or and . expr_and

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 37
    C_INT    shift, and go to state 14
    NOT      shift, and go to state 43
    ADD      shift, and go to state 44
    SUB      shift, and go to state 45
    OPEN_P   shift, and go to state 47

    function_call  go to state 48
    expr_and       go to state 130
    expr_or        go to state 57
    expr_add       go to state 58
    expr_sub       go to state 59
    expr_mul       go to state 60
    expr_div       go to state 61
    expr_unary     go to state 62
    factor         go to state 63
    unary          go to state 64
    add            go to state 65
    sub            go to state 66
    value          go to state 70
    id_or_access   go to state 71
    id             go to state 83
    number         go to state 73
    number_int     go to state 74
    number_float   go to state 75
    boolean_const  go to state 76


State 102

   63 or: OR .

    $default  reduce using rule 63 (or)


State 103

   44 expr_or: expr_add or . expr_or

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 37
    C_INT    shift, and go to state 14
    NOT      shift, and go to state 43
    ADD      shift, and go to state 44
    SUB      shift, and go to state 45
    OPEN_P   shift, and go to state 47

    function_call  go to state 48
    expr_or        go to state 131
    expr_add       go to state 58
    expr_sub       go to state 59
    expr_mul       go to state 60
    expr_div       go to state 61
    expr_unary     go to state 62
    factor         go to state 63
    unary          go to state 64
    add            go to state 65
    sub            go to state 66
    value          go to state 70
    id_or_access   go to state 71
    id             go to state 83
    number         go to state 73
    number_int     go to state 74
    number_float   go to state 75
    boolean_const  go to state 76


State 104

   46 expr_add: expr_sub add . expr_add

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 37
    C_INT    shift, and go to state 14
    NOT      shift, and go to state 43
    ADD      shift, and go to state 44
    SUB      shift, and go to state 45
    OPEN_P   shift, and go to state 47

    function_call  go to state 48
    expr_add       go to state 132
    expr_sub       go to state 59
    expr_mul       go to state 60
    expr_div       go to state 61
    expr_unary     go to state 62
    factor         go to state 63
    unary          go to state 64
    add            go to state 65
    sub            go to state 66
    value          go to state 70
    id_or_access   go to state 71
    id             go to state 83
    number         go to state 73
    number_int     go to state 74
    number_float   go to state 75
    boolean_const  go to state 76


State 105

   48 expr_sub: expr_mul sub . expr_sub

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 37
    C_INT    shift, and go to state 14
    NOT      shift, and go to state 43
    ADD      shift, and go to state 44
    SUB      shift, and go to state 45
    OPEN_P   shift, and go to state 47

    function_call  go to state 48
    expr_sub       go to state 133
    expr_mul       go to state 60
    expr_div       go to state 61
    expr_unary     go to state 62
    factor         go to state 63
    unary          go to state 64
    add            go to state 65
    sub            go to state 66
    value          go to state 70
    id_or_access   go to state 71
    id             go to state 83
    number         go to state 73
    number_int     go to state 74
    number_float   go to state 75
    boolean_const  go to state 76


State 106

   66 mul: MUL .

    $default  reduce using rule 66 (mul)


State 107

   50 expr_mul: expr_div mul . expr_mul

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 37
    C_INT    shift, and go to state 14
    NOT      shift, and go to state 43
    ADD      shift, and go to state 44
    SUB      shift, and go to state 45
    OPEN_P   shift, and go to state 47

    function_call  go to state 48
    expr_mul       go to state 134
    expr_div       go to state 61
    expr_unary     go to state 62
    factor         go to state 63
    unary          go to state 64
    add            go to state 65
    sub            go to state 66
    value          go to state 70
    id_or_access   go to state 71
    id             go to state 83
    number         go to state 73
    number_int     go to state 74
    number_float   go to state 75
    boolean_const  go to state 76


State 108

   67 div: DIV .

    $default  reduce using rule 67 (div)


State 109

   52 expr_div: expr_unary div . expr_div

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 37
    C_INT    shift, and go to state 14
    NOT      shift, and go to state 43
    ADD      shift, and go to state 44
    SUB      shift, and go to state 45
    OPEN_P   shift, and go to state 47

    function_call  go to state 48
    expr_div       go to state 135
    expr_unary     go to state 62
    factor         go to state 63
    unary          go to state 64
    add            go to state 65
    sub            go to state 66
    value          go to state 70
    id_or_access   go to state 71
    id             go to state 83
    number         go to state 73
    number_int     go to state 74
    number_float   go to state 75
    boolean_const  go to state 76


State 110

   54 expr_unary: unary factor .

    $default  reduce using rule 54 (expr_unary)


State 111

   36 statement_end: graph_add END .

    $default  reduce using rule 36 (statement_end)


State 112

   34 statement_end: declaration_or_assign END .

    $default  reduce using rule 34 (statement_end)


State 113

   78 declaration_or_assign: declaration ASSIGN . expr_assign

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 37
    C_INT    shift, and go to state 14
    NOT      shift, and go to state 43
    ADD      shift, and go to state 44
    SUB      shift, and go to state 45
    OPEN_P   shift, and go to state 47

    function_call    go to state 48
    expr_assign      go to state 136
    expr_relational  go to state 55
    expr_and         go to state 56
    expr_or          go to state 57
    expr_add         go to state 58
    expr_sub         go to state 59
    expr_mul         go to state 60
    expr_div         go to state 61
    expr_unary       go to state 62
    factor           go to state 63
    unary            go to state 64
    add              go to state 65
    sub              go to state 66
    value            go to state 70
    id_or_access     go to state 71
    id               go to state 83
    number           go to state 73
    number_int       go to state 74
    number_float     go to state 75
    boolean_const    go to state 76


State 114

    9 function_call: id OPEN_P . params_call CLOSE_P

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 37
    C_INT    shift, and go to state 14
    NOT      shift, and go to state 43
    ADD      shift, and go to state 44
    SUB      shift, and go to state 45
    OPEN_P   shift, and go to state 47

    $default  reduce using rule 10 (params_call)

    function_call    go to state 48
    params_call      go to state 137
    expr_assign      go to state 138
    expr_relational  go to state 55
    expr_and         go to state 56
    expr_or          go to state 57
    expr_add         go to state 58
    expr_sub         go to state 59
    expr_mul         go to state 60
    expr_div         go to state 61
    expr_unary       go to state 62
    factor           go to state 63
    unary            go to state 64
    add              go to state 65
    sub              go to state 66
    value            go to state 70
    id_or_access     go to state 71
    id               go to state 83
    number           go to state 73
    number_int       go to state 74
    number_float     go to state 75
    boolean_const    go to state 76


State 115

   76 graph_add: id OPEN_BRACKET . expr_assign TO expr_assign CLOSE_BRACKET
   86 id_or_access: id OPEN_BRACKET . number_int CLOSE_BRACKET

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 37
    C_INT    shift, and go to state 14
    NOT      shift, and go to state 43
    ADD      shift, and go to state 44
    SUB      shift, and go to state 45
    OPEN_P   shift, and go to state 47

    function_call    go to state 48
    expr_assign      go to state 139
    expr_relational  go to state 55
    expr_and         go to state 56
    expr_or          go to state 57
    expr_add         go to state 58
    expr_sub         go to state 59
    expr_mul         go to state 60
    expr_div         go to state 61
    expr_unary       go to state 62
    factor           go to state 63
    unary            go to state 64
    add              go to state 65
    sub              go to state 66
    value            go to state 70
    id_or_access     go to state 71
    id               go to state 83
    number           go to state 73
    number_int       go to state 140
    number_float     go to state 75
    boolean_const    go to state 76


State 116

   25 dangling_if: IF OPEN_P expr_assign . CLOSE_P statement
   26 statement_prefix: IF OPEN_P expr_assign . CLOSE_P statement_no_dangle ELSE

    CLOSE_P  shift, and go to state 141


State 117

   28 statement_prefix: FOR OPEN_P declaration_or_assign . END expr_assign END expr_assign CLOSE_P

    END  shift, and go to state 142


State 118

   29 statement_prefix: FOR OPEN_P declaration . IT graph_call CLOSE_P
   77 declaration_or_assign: declaration .
   78                      | declaration . ASSIGN expr_assign

    ASSIGN  shift, and go to state 113
    IT      shift, and go to state 143

    $default  reduce using rule 77 (declaration_or_assign)


State 119

   27 statement_prefix: WHILE OPEN_P expr_assign . CLOSE_P

    CLOSE_P  shift, and go to state 144


State 120

   32 statement_end: READ id_or_access END .

    $default  reduce using rule 32 (statement_end)


State 121

   86 id_or_access: id OPEN_BRACKET . number_int CLOSE_BRACKET

    C_INT  shift, and go to state 14

    number_int  go to state 145


State 122

   33 statement_end: WRITE expr_assign END .

    $default  reduce using rule 33 (statement_end)


State 123

   74 graph_add: ADDA OPEN_P id . CLOSE_P

    CLOSE_P  shift, and go to state 146


State 124

   75 graph_add: ADDV OPEN_P id . SEPARATOR expr_assign SEPARATOR expr_assign CLOSE_P

    SEPARATOR  shift, and go to state 147


State 125

   37 statement_end: RETURN expr_assign END .

    $default  reduce using rule 37 (statement_end)


State 126

   56 factor: OPEN_P expr_assign CLOSE_P .

    $default  reduce using rule 56 (factor)


State 127

   25 dangling_if: IF OPEN_P . expr_assign CLOSE_P statement

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 37
    C_INT    shift, and go to state 14
    NOT      shift, and go to state 43
    ADD      shift, and go to state 44
    SUB      shift, and go to state 45
    OPEN_P   shift, and go to state 47

    function_call    go to state 48
    expr_assign      go to state 148
    expr_relational  go to state 55
    expr_and         go to state 56
    expr_or          go to state 57
    expr_add         go to state 58
    expr_sub         go to state 59
    expr_mul         go to state 60
    expr_div         go to state 61
    expr_unary       go to state 62
    factor           go to state 63
    unary            go to state 64
    add              go to state 65
    sub              go to state 66
    value            go to state 70
    id_or_access     go to state 71
    id               go to state 83
    number           go to state 73
    number_int       go to state 74
    number_float     go to state 75
    boolean_const    go to state 76


State 128

   38 expr_assign: expr_relational ASSIGN expr_assign .

    $default  reduce using rule 38 (expr_assign)


State 129

   40 expr_relational: expr_and compare_op expr_relational .

    $default  reduce using rule 40 (expr_relational)


State 130

   42 expr_and: expr_or and expr_and .

    $default  reduce using rule 42 (expr_and)


State 131

   44 expr_or: expr_add or expr_or .

    $default  reduce using rule 44 (expr_or)


State 132

   46 expr_add: expr_sub add expr_add .

    $default  reduce using rule 46 (expr_add)


State 133

   48 expr_sub: expr_mul sub expr_sub .

    $default  reduce using rule 48 (expr_sub)


State 134

   50 expr_mul: expr_div mul expr_mul .

    $default  reduce using rule 50 (expr_mul)


State 135

   52 expr_div: expr_unary div expr_div .

    $default  reduce using rule 52 (expr_div)


State 136

   78 declaration_or_assign: declaration ASSIGN expr_assign .

    $default  reduce using rule 78 (declaration_or_assign)


State 137

    9 function_call: id OPEN_P params_call . CLOSE_P
   11 params_call: params_call . SEPARATOR expr_assign

    SEPARATOR  shift, and go to state 149
    CLOSE_P    shift, and go to state 150


State 138

   12 params_call: expr_assign .

    $default  reduce using rule 12 (params_call)


State 139

   76 graph_add: id OPEN_BRACKET expr_assign . TO expr_assign CLOSE_BRACKET

    TO  shift, and go to state 151


State 140

   86 id_or_access: id OPEN_BRACKET number_int . CLOSE_BRACKET
   93 number: number_int .

    CLOSE_BRACKET  shift, and go to state 152

    $default  reduce using rule 93 (number)


State 141

   25 dangling_if: IF OPEN_P expr_assign CLOSE_P . statement
   26 statement_prefix: IF OPEN_P expr_assign CLOSE_P . statement_no_dangle ELSE

    error       shift, and go to state 31
    IF          shift, and go to state 32
    FOR         shift, and go to state 33
    WHILE       shift, and go to state 34
    BOOLEAN     shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    GRAPH       shift, and go to state 8
    VOID        shift, and go to state 9
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    ID          shift, and go to state 16
    C_FLOAT     shift, and go to state 37
    C_INT       shift, and go to state 14
    READ        shift, and go to state 38
    WRITE       shift, and go to state 39
    ADDA        shift, and go to state 40
    ADDV        shift, and go to state 41
    RETURN      shift, and go to state 42
    NOT         shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45
    OPEN_BRACE  shift, and go to state 27
    OPEN_P      shift, and go to state 47

    function_call          go to state 48
    statement              go to state 153
    statement_no_dangle    go to state 154
    dangling_if            go to state 50
    statement_prefix       go to state 155
    block                  go to state 52
    statement_end          go to state 156
    expr_assign            go to state 54
    expr_relational        go to state 55
    expr_and               go to state 56
    expr_or                go to state 57
    expr_add               go to state 58
    expr_sub               go to state 59
    expr_mul               go to state 60
    expr_div               go to state 61
    expr_unary             go to state 62
    factor                 go to state 63
    unary                  go to state 64
    add                    go to state 65
    sub                    go to state 66
    graph_add              go to state 67
    declaration_or_assign  go to state 68
    declaration            go to state 69
    value                  go to state 70
    id_or_access           go to state 71
    id                     go to state 72
    type                   go to state 22
    number                 go to state 73
    number_int             go to state 74
    number_float           go to state 75
    boolean_const          go to state 76


State 142

   28 statement_prefix: FOR OPEN_P declaration_or_assign END . expr_assign END expr_assign CLOSE_P

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 37
    C_INT    shift, and go to state 14
    NOT      shift, and go to state 43
    ADD      shift, and go to state 44
    SUB      shift, and go to state 45
    OPEN_P   shift, and go to state 47

    function_call    go to state 48
    expr_assign      go to state 157
    expr_relational  go to state 55
    expr_and         go to state 56
    expr_or          go to state 57
    expr_add         go to state 58
    expr_sub         go to state 59
    expr_mul         go to state 60
    expr_div         go to state 61
    expr_unary       go to state 62
    factor           go to state 63
    unary            go to state 64
    add              go to state 65
    sub              go to state 66
    value            go to state 70
    id_or_access     go to state 71
    id               go to state 83
    number           go to state 73
    number_int       go to state 74
    number_float     go to state 75
    boolean_const    go to state 76


State 143

   29 statement_prefix: FOR OPEN_P declaration IT . graph_call CLOSE_P

    DFS  shift, and go to state 158
    BFS  shift, and go to state 159

    graph_call  go to state 160


State 144

   27 statement_prefix: WHILE OPEN_P expr_assign CLOSE_P .

    $default  reduce using rule 27 (statement_prefix)


State 145

   86 id_or_access: id OPEN_BRACKET number_int . CLOSE_BRACKET

    CLOSE_BRACKET  shift, and go to state 152


State 146

   74 graph_add: ADDA OPEN_P id CLOSE_P .

    $default  reduce using rule 74 (graph_add)


State 147

   75 graph_add: ADDV OPEN_P id SEPARATOR . expr_assign SEPARATOR expr_assign CLOSE_P

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 37
    C_INT    shift, and go to state 14
    NOT      shift, and go to state 43
    ADD      shift, and go to state 44
    SUB      shift, and go to state 45
    OPEN_P   shift, and go to state 47

    function_call    go to state 48
    expr_assign      go to state 161
    expr_relational  go to state 55
    expr_and         go to state 56
    expr_or          go to state 57
    expr_add         go to state 58
    expr_sub         go to state 59
    expr_mul         go to state 60
    expr_div         go to state 61
    expr_unary       go to state 62
    factor           go to state 63
    unary            go to state 64
    add              go to state 65
    sub              go to state 66
    value            go to state 70
    id_or_access     go to state 71
    id               go to state 83
    number           go to state 73
    number_int       go to state 74
    number_float     go to state 75
    boolean_const    go to state 76


State 148

   25 dangling_if: IF OPEN_P expr_assign . CLOSE_P statement

    CLOSE_P  shift, and go to state 162


State 149

   11 params_call: params_call SEPARATOR . expr_assign

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 37
    C_INT    shift, and go to state 14
    NOT      shift, and go to state 43
    ADD      shift, and go to state 44
    SUB      shift, and go to state 45
    OPEN_P   shift, and go to state 47

    function_call    go to state 48
    expr_assign      go to state 163
    expr_relational  go to state 55
    expr_and         go to state 56
    expr_or          go to state 57
    expr_add         go to state 58
    expr_sub         go to state 59
    expr_mul         go to state 60
    expr_div         go to state 61
    expr_unary       go to state 62
    factor           go to state 63
    unary            go to state 64
    add              go to state 65
    sub              go to state 66
    value            go to state 70
    id_or_access     go to state 71
    id               go to state 83
    number           go to state 73
    number_int       go to state 74
    number_float     go to state 75
    boolean_const    go to state 76


State 150

    9 function_call: id OPEN_P params_call CLOSE_P .

    $default  reduce using rule 9 (function_call)


State 151

   76 graph_add: id OPEN_BRACKET expr_assign TO . expr_assign CLOSE_BRACKET

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 37
    C_INT    shift, and go to state 14
    NOT      shift, and go to state 43
    ADD      shift, and go to state 44
    SUB      shift, and go to state 45
    OPEN_P   shift, and go to state 47

    function_call    go to state 48
    expr_assign      go to state 164
    expr_relational  go to state 55
    expr_and         go to state 56
    expr_or          go to state 57
    expr_add         go to state 58
    expr_sub         go to state 59
    expr_mul         go to state 60
    expr_div         go to state 61
    expr_unary       go to state 62
    factor           go to state 63
    unary            go to state 64
    add              go to state 65
    sub              go to state 66
    value            go to state 70
    id_or_access     go to state 71
    id               go to state 83
    number           go to state 73
    number_int       go to state 74
    number_float     go to state 75
    boolean_const    go to state 76


State 152

   86 id_or_access: id OPEN_BRACKET number_int CLOSE_BRACKET .

    $default  reduce using rule 86 (id_or_access)


State 153

   25 dangling_if: IF OPEN_P expr_assign CLOSE_P statement .

    $default  reduce using rule 25 (dangling_if)


State 154

   26 statement_prefix: IF OPEN_P expr_assign CLOSE_P statement_no_dangle . ELSE

    ELSE  shift, and go to state 165


State 155

   18 statement: statement_prefix . statement_end
   19          | statement_prefix . dangling_if
   23 statement_no_dangle: statement_prefix . statement_end

    IF          shift, and go to state 88
    BOOLEAN     shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    GRAPH       shift, and go to state 8
    VOID        shift, and go to state 9
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    ID          shift, and go to state 16
    C_FLOAT     shift, and go to state 37
    C_INT       shift, and go to state 14
    READ        shift, and go to state 38
    WRITE       shift, and go to state 39
    ADDA        shift, and go to state 40
    ADDV        shift, and go to state 41
    RETURN      shift, and go to state 42
    NOT         shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45
    OPEN_BRACE  shift, and go to state 27
    OPEN_P      shift, and go to state 47

    function_call          go to state 48
    dangling_if            go to state 89
    block                  go to state 52
    statement_end          go to state 166
    expr_assign            go to state 54
    expr_relational        go to state 55
    expr_and               go to state 56
    expr_or                go to state 57
    expr_add               go to state 58
    expr_sub               go to state 59
    expr_mul               go to state 60
    expr_div               go to state 61
    expr_unary             go to state 62
    factor                 go to state 63
    unary                  go to state 64
    add                    go to state 65
    sub                    go to state 66
    graph_add              go to state 67
    declaration_or_assign  go to state 68
    declaration            go to state 69
    value                  go to state 70
    id_or_access           go to state 71
    id                     go to state 72
    type                   go to state 22
    number                 go to state 73
    number_int             go to state 74
    number_float           go to state 75
    boolean_const          go to state 76


State 156

   20 statement: statement_end .
   24 statement_no_dangle: statement_end .

    ELSE      reduce using rule 24 (statement_no_dangle)
    $default  reduce using rule 20 (statement)


State 157

   28 statement_prefix: FOR OPEN_P declaration_or_assign END expr_assign . END expr_assign CLOSE_P

    END  shift, and go to state 167


State 158

   13 graph_call: DFS . graph_params_call

    OPEN_P  shift, and go to state 168

    graph_params_call  go to state 169


State 159

   14 graph_call: BFS . graph_params_call

    OPEN_P  shift, and go to state 168

    graph_params_call  go to state 170


State 160

   29 statement_prefix: FOR OPEN_P declaration IT graph_call . CLOSE_P

    CLOSE_P  shift, and go to state 171


State 161

   75 graph_add: ADDV OPEN_P id SEPARATOR expr_assign . SEPARATOR expr_assign CLOSE_P

    SEPARATOR  shift, and go to state 172


State 162

   25 dangling_if: IF OPEN_P expr_assign CLOSE_P . statement

    error       shift, and go to state 31
    IF          shift, and go to state 32
    FOR         shift, and go to state 33
    WHILE       shift, and go to state 34
    BOOLEAN     shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    GRAPH       shift, and go to state 8
    VOID        shift, and go to state 9
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    ID          shift, and go to state 16
    C_FLOAT     shift, and go to state 37
    C_INT       shift, and go to state 14
    READ        shift, and go to state 38
    WRITE       shift, and go to state 39
    ADDA        shift, and go to state 40
    ADDV        shift, and go to state 41
    RETURN      shift, and go to state 42
    NOT         shift, and go to state 43
    ADD         shift, and go to state 44
    SUB         shift, and go to state 45
    OPEN_BRACE  shift, and go to state 27
    OPEN_P      shift, and go to state 47

    function_call          go to state 48
    statement              go to state 153
    dangling_if            go to state 50
    statement_prefix       go to state 51
    block                  go to state 52
    statement_end          go to state 53
    expr_assign            go to state 54
    expr_relational        go to state 55
    expr_and               go to state 56
    expr_or                go to state 57
    expr_add               go to state 58
    expr_sub               go to state 59
    expr_mul               go to state 60
    expr_div               go to state 61
    expr_unary             go to state 62
    factor                 go to state 63
    unary                  go to state 64
    add                    go to state 65
    sub                    go to state 66
    graph_add              go to state 67
    declaration_or_assign  go to state 68
    declaration            go to state 69
    value                  go to state 70
    id_or_access           go to state 71
    id                     go to state 72
    type                   go to state 22
    number                 go to state 73
    number_int             go to state 74
    number_float           go to state 75
    boolean_const          go to state 76


State 163

   11 params_call: params_call SEPARATOR expr_assign .

    $default  reduce using rule 11 (params_call)


State 164

   76 graph_add: id OPEN_BRACKET expr_assign TO expr_assign . CLOSE_BRACKET

    CLOSE_BRACKET  shift, and go to state 173


State 165

   26 statement_prefix: IF OPEN_P expr_assign CLOSE_P statement_no_dangle ELSE .

    $default  reduce using rule 26 (statement_prefix)


State 166

   18 statement: statement_prefix statement_end .
   23 statement_no_dangle: statement_prefix statement_end .

    ELSE      reduce using rule 23 (statement_no_dangle)
    $default  reduce using rule 18 (statement)


State 167

   28 statement_prefix: FOR OPEN_P declaration_or_assign END expr_assign END . expr_assign CLOSE_P

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 37
    C_INT    shift, and go to state 14
    NOT      shift, and go to state 43
    ADD      shift, and go to state 44
    SUB      shift, and go to state 45
    OPEN_P   shift, and go to state 47

    function_call    go to state 48
    expr_assign      go to state 174
    expr_relational  go to state 55
    expr_and         go to state 56
    expr_or          go to state 57
    expr_add         go to state 58
    expr_sub         go to state 59
    expr_mul         go to state 60
    expr_div         go to state 61
    expr_unary       go to state 62
    factor           go to state 63
    unary            go to state 64
    add              go to state 65
    sub              go to state 66
    value            go to state 70
    id_or_access     go to state 71
    id               go to state 83
    number           go to state 73
    number_int       go to state 74
    number_float     go to state 75
    boolean_const    go to state 76


State 168

   15 graph_params_call: OPEN_P . id SEPARATOR expr_assign SEPARATOR expr_assign CLOSE_P

    ID  shift, and go to state 16

    id  go to state 175


State 169

   13 graph_call: DFS graph_params_call .

    $default  reduce using rule 13 (graph_call)


State 170

   14 graph_call: BFS graph_params_call .

    $default  reduce using rule 14 (graph_call)


State 171

   29 statement_prefix: FOR OPEN_P declaration IT graph_call CLOSE_P .

    $default  reduce using rule 29 (statement_prefix)


State 172

   75 graph_add: ADDV OPEN_P id SEPARATOR expr_assign SEPARATOR . expr_assign CLOSE_P

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 37
    C_INT    shift, and go to state 14
    NOT      shift, and go to state 43
    ADD      shift, and go to state 44
    SUB      shift, and go to state 45
    OPEN_P   shift, and go to state 47

    function_call    go to state 48
    expr_assign      go to state 176
    expr_relational  go to state 55
    expr_and         go to state 56
    expr_or          go to state 57
    expr_add         go to state 58
    expr_sub         go to state 59
    expr_mul         go to state 60
    expr_div         go to state 61
    expr_unary       go to state 62
    factor           go to state 63
    unary            go to state 64
    add              go to state 65
    sub              go to state 66
    value            go to state 70
    id_or_access     go to state 71
    id               go to state 83
    number           go to state 73
    number_int       go to state 74
    number_float     go to state 75
    boolean_const    go to state 76


State 173

   76 graph_add: id OPEN_BRACKET expr_assign TO expr_assign CLOSE_BRACKET .

    $default  reduce using rule 76 (graph_add)


State 174

   28 statement_prefix: FOR OPEN_P declaration_or_assign END expr_assign END expr_assign . CLOSE_P

    CLOSE_P  shift, and go to state 177


State 175

   15 graph_params_call: OPEN_P id . SEPARATOR expr_assign SEPARATOR expr_assign CLOSE_P

    SEPARATOR  shift, and go to state 178


State 176

   75 graph_add: ADDV OPEN_P id SEPARATOR expr_assign SEPARATOR expr_assign . CLOSE_P

    CLOSE_P  shift, and go to state 179


State 177

   28 statement_prefix: FOR OPEN_P declaration_or_assign END expr_assign END expr_assign CLOSE_P .

    $default  reduce using rule 28 (statement_prefix)


State 178

   15 graph_params_call: OPEN_P id SEPARATOR . expr_assign SEPARATOR expr_assign CLOSE_P

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 37
    C_INT    shift, and go to state 14
    NOT      shift, and go to state 43
    ADD      shift, and go to state 44
    SUB      shift, and go to state 45
    OPEN_P   shift, and go to state 47

    function_call    go to state 48
    expr_assign      go to state 180
    expr_relational  go to state 55
    expr_and         go to state 56
    expr_or          go to state 57
    expr_add         go to state 58
    expr_sub         go to state 59
    expr_mul         go to state 60
    expr_div         go to state 61
    expr_unary       go to state 62
    factor           go to state 63
    unary            go to state 64
    add              go to state 65
    sub              go to state 66
    value            go to state 70
    id_or_access     go to state 71
    id               go to state 83
    number           go to state 73
    number_int       go to state 74
    number_float     go to state 75
    boolean_const    go to state 76


State 179

   75 graph_add: ADDV OPEN_P id SEPARATOR expr_assign SEPARATOR expr_assign CLOSE_P .

    $default  reduce using rule 75 (graph_add)


State 180

   15 graph_params_call: OPEN_P id SEPARATOR expr_assign . SEPARATOR expr_assign CLOSE_P

    SEPARATOR  shift, and go to state 181


State 181

   15 graph_params_call: OPEN_P id SEPARATOR expr_assign SEPARATOR . expr_assign CLOSE_P

    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    ID       shift, and go to state 16
    C_FLOAT  shift, and go to state 37
    C_INT    shift, and go to state 14
    NOT      shift, and go to state 43
    ADD      shift, and go to state 44
    SUB      shift, and go to state 45
    OPEN_P   shift, and go to state 47

    function_call    go to state 48
    expr_assign      go to state 182
    expr_relational  go to state 55
    expr_and         go to state 56
    expr_or          go to state 57
    expr_add         go to state 58
    expr_sub         go to state 59
    expr_mul         go to state 60
    expr_div         go to state 61
    expr_unary       go to state 62
    factor           go to state 63
    unary            go to state 64
    add              go to state 65
    sub              go to state 66
    value            go to state 70
    id_or_access     go to state 71
    id               go to state 83
    number           go to state 73
    number_int       go to state 74
    number_float     go to state 75
    boolean_const    go to state 76


State 182

   15 graph_params_call: OPEN_P id SEPARATOR expr_assign SEPARATOR expr_assign . CLOSE_P

    CLOSE_P  shift, and go to state 183


State 183

   15 graph_params_call: OPEN_P id SEPARATOR expr_assign SEPARATOR expr_assign CLOSE_P .

    $default  reduce using rule 15 (graph_params_call)
